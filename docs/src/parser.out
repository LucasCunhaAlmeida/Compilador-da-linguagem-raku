Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    CONSTANT
    EXIT
    EXPORT
    FALSE
    IMPORT
    KMARK
    LAST
    LET
    MU
    MULTI
    NEED
    NEXT
    NIL
    ONLY
    PUSH
    REDO
    REQUIRE
    RETURN
    SPLICE
    STATE
    TRUE
    UNIT
    UNSHIFT
    USE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> lista_declaracoes
Rule 2     lista_declaracoes -> lista_declaracoes declaracoes
Rule 3     lista_declaracoes -> declaracoes
Rule 4     lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes
Rule 5     lista_declaracoes_para_funcoes -> declaracoes_para_funcoes
Rule 6     exp_2 -> or
Rule 7     exp_2 -> xor
Rule 8     exp_2 -> exp_3
Rule 9     or -> exp_2 OR_S exp_3
Rule 10    xor -> exp_2 XOR_S exp_3
Rule 11    exp_3 -> and
Rule 12    exp_3 -> exp_4
Rule 13    and -> exp_3 AND_S exp_4
Rule 14    exp_4 -> igual_dp
Rule 15    exp_4 -> dif
Rule 16    exp_4 -> maior
Rule 17    exp_4 -> menor
Rule 18    exp_4 -> maior_igual
Rule 19    exp_4 -> menor_igual
Rule 20    exp_4 -> smartmatch
Rule 21    exp_4 -> exp_5
Rule 22    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 23    dif -> exp_4 DIF exp_5
Rule 24    maior -> exp_4 MAIOR exp_5
Rule 25    menor -> exp_4 MENOR exp_5
Rule 26    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 27    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 28    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 29    exp_5 -> adicao
Rule 30    exp_5 -> subtracao
Rule 31    exp_5 -> conc
Rule 32    exp_5 -> exp_6
Rule 33    adicao -> exp_5 ADC exp_6
Rule 34    subtracao -> exp_5 SUB exp_6
Rule 35    conc -> exp_5 CONC exp_6
Rule 36    exp_6 -> mult
Rule 37    exp_6 -> divide
Rule 38    exp_6 -> div
Rule 39    exp_6 -> divi
Rule 40    exp_6 -> mod
Rule 41    exp_6 -> lcm
Rule 42    exp_6 -> gcd
Rule 43    exp_6 -> exp_7
Rule 44    mult -> exp_6 MULT exp_7
Rule 45    divide -> exp_6 DIVIDE exp_7
Rule 46    div -> exp_6 DIV exp_7
Rule 47    divi -> exp_6 DIVI exp_7
Rule 48    mod -> exp_6 MOD exp_7
Rule 49    lcm -> exp_6 LCM exp_7
Rule 50    gcd -> exp_6 GCD exp_7
Rule 51    exp_7 -> pow
Rule 52    exp_7 -> exp_8
Rule 53    pow -> exp_7 POW exp_8
Rule 54    exp_8 -> not_op
Rule 55    exp_8 -> not_s
Rule 56    exp_8 -> exp_9
Rule 57    not_op -> NOT exp_8
Rule 58    not_s -> NEGAC exp_8
Rule 59    exp_9 -> unario
Rule 60    exp_9 -> operando
Rule 61    unario -> prefixo_incremento
Rule 62    unario -> posfixo_incremento
Rule 63    unario -> prefixo_decremento
Rule 64    unario -> posfixo_decremento
Rule 65    prefixo_incremento -> ADC_DP ID
Rule 66    posfixo_incremento -> ID ADC_DP
Rule 67    prefixo_decremento -> DECREMENTO ID
Rule 68    posfixo_decremento -> ID DECREMENTO
Rule 69    operando -> parenteses
Rule 70    operando -> completo
Rule 71    parenteses -> LPAREN exp_2 RPAREN
Rule 72    completo -> tipo
Rule 73    completo -> escalar
Rule 74    tipo -> inteiro
Rule 75    tipo -> float
Rule 76    tipo -> string
Rule 77    tipo -> boolean
Rule 78    tipo_opicional -> tipo_opicional_int
Rule 79    tipo_opicional -> STR
Rule 80    tipo_opicional -> empty
Rule 81    tipo_opicional_int -> INT
Rule 82    empty -> <empty>
Rule 83    inteiro -> INTEGER
Rule 84    float -> FLOAT
Rule 85    string -> STRING
Rule 86    boolean -> BOOLEAN
Rule 87    escalar -> ESCALAR
Rule 88    declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 89    declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 90    declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA
Rule 91    declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA
Rule 92    declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA
Rule 93    lista_valores -> lista_valores COMMA tipo
Rule 94    lista_valores -> lista_valores_base
Rule 95    lista_valores_base -> tipo
Rule 96    loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 97    loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 98    loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 99    loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 100   loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 101   loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 102   say -> SAY exp_2 PONTO_VIRGULA
Rule 103   funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 104   funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 105   parametros -> ESCALAR
Rule 106   parametros -> parametros COMMA ESCALAR
Rule 107   atribuicao -> ESCALAR IGUAL exp_2
Rule 108   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN
Rule 109   chamada_funcao_sem_parametro -> ID LPAREN RPAREN
Rule 110   chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA completo
Rule 111   chamada_funcao_auxiliar -> completo
Rule 112   condicional -> IF exp_2 bloco
Rule 113   condicional -> IF exp_2 bloco ELSE bloco
Rule 114   condicional -> IF exp_2 bloco lista_elsif
Rule 115   condicional -> IF exp_2 bloco lista_elsif ELSE bloco
Rule 116   lista_elsif -> ELSIF exp_2 bloco
Rule 117   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 118   bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 119   declaracoes -> declaracoes_para_funcoes
Rule 120   declaracoes -> declaracao_de_funcao
Rule 121   declaracoes_para_funcoes -> declaracao_de_atribuicao
Rule 122   declaracoes_para_funcoes -> say
Rule 123   declaracoes_para_funcoes -> declaracao_de_chamada_funcao
Rule 124   declaracoes_para_funcoes -> declaracao_de_condicional
Rule 125   declaracoes_para_funcoes -> declaracao_loop
Rule 126   declaracoes_para_funcoes -> declaracao_de_expressao
Rule 127   declaracoes_para_funcoes -> declaracao_bloco
Rule 128   declaracoes_para_funcoes -> declaracao_escalar_MY
Rule 129   declaracoes_para_funcoes -> declaracao_escalar_OUR
Rule 130   declaracoes_para_funcoes -> declaracao_lista
Rule 131   declaracoes_para_funcoes -> declaracao_lista_MY
Rule 132   declaracoes_para_funcoes -> declaracao_lista_OUR
Rule 133   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 134   declaracao_de_funcao -> funcao_com_params
Rule 135   declaracao_de_funcao -> funcao_sem_params
Rule 136   declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA
Rule 137   declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA
Rule 138   declaracao_de_condicional -> condicional
Rule 139   declaracao_loop -> loop
Rule 140   declaracao_loop -> loop_for
Rule 141   declaracao_loop -> loop_for_com_lista
Rule 142   declaracao_loop -> loop_times
Rule 143   declaracao_loop -> loop_while
Rule 144   declaracao_loop -> loop_sem_condicao
Rule 145   declaracao_de_expressao -> exp_2 PONTO_VIRGULA
Rule 146   declaracao_bloco -> bloco

Terminals, with rules where they appear

ABRE_CHAVE           : 96 97 98 99 100 101 103 104 118
ADC                  : 33
ADC_DP               : 65 66
AND_S                : 13
BOOLEAN              : 86
BREAK                : 
COMMA                : 93 106 110
COMMENT              : 
CONC                 : 35
CONSTANT             : 
DECREMENTO           : 67 68
DIF                  : 23
DIV                  : 46
DIVI                 : 47
DIVIDE               : 45
ELSE                 : 113 115
ELSIF                : 116 117
ESCALAR              : 87 88 89 96 97 98 105 106 107
EXIT                 : 
EXPORT               : 
FALSE                : 
FECHA_CHAVE          : 96 97 98 99 100 101 103 104 118
FLOAT                : 84
FOR                  : 96 97
FUNCTION             : 103 104
GCD                  : 50
ID                   : 65 66 67 68 103 104 108 109
IF                   : 112 113 114 115
IGUAL                : 88 89 90 91 92 107
IGUAL_DP             : 22
IMPORT               : 
INT                  : 81
INTEGER              : 83 98
INTERPOLACAO         : 96
KMARK                : 
LAST                 : 
LCM                  : 49
LESSEQUAL            : 27
LET                  : 
LIST                 : 90 91 92 97
LOOP                 : 100 101
LPAREN               : 71 100 103 104 108 109
MAIOR                : 24
MAIOR_IGL            : 26
MENOR                : 25
MOD                  : 48
MU                   : 
MULT                 : 44
MULTI                : 
MY                   : 88 91
NEED                 : 
NEGAC                : 58
NEXT                 : 
NIL                  : 
NOT                  : 57
ONLY                 : 
OR_S                 : 9
OUR                  : 89 92
PONTO_VIRGULA        : 88 89 90 91 92 100 102 133 136 137 145
POW                  : 53
PUSH                 : 
REDO                 : 
REQUIRE              : 
RETURN               : 
RPAREN               : 71 100 103 104 108 109
SAY                  : 102
SETA                 : 96 97 98
SMARTMATCH           : 28
SPLICE               : 
STATE                : 
STR                  : 79
STRING               : 85
SUB                  : 34
TIMES                : 98
TRUE                 : 
UNIT                 : 
UNSHIFT              : 
USE                  : 
WHILE                : 99
XOR_S                : 10
error                : 

Nonterminals, with rules where they appear

adicao               : 29
and                  : 11
atribuicao           : 100 133
bloco                : 112 113 113 114 115 115 116 117 146
boolean              : 77
chamada_funcao       : 136
chamada_funcao_auxiliar : 108 110
chamada_funcao_sem_parametro : 137
completo             : 70 110 111
conc                 : 31
condicional          : 138
declaracao_bloco     : 127
declaracao_de_atribuicao : 121
declaracao_de_chamada_funcao : 123
declaracao_de_condicional : 124
declaracao_de_expressao : 126
declaracao_de_funcao : 120
declaracao_escalar_MY : 100 128
declaracao_escalar_OUR : 129
declaracao_lista     : 130
declaracao_lista_MY  : 131
declaracao_lista_OUR : 132
declaracao_loop      : 125
declaracoes          : 2 3
declaracoes_para_funcoes : 4 5 119
dif                  : 15
div                  : 38
divi                 : 39
divide               : 37
empty                : 80
escalar              : 73
exp_2                : 9 10 71 88 89 99 100 102 107 112 113 114 115 116 117 145
exp_3                : 8 9 10 13
exp_4                : 12 13 22 23 24 25 26 27 28
exp_5                : 21 22 23 24 25 26 27 28 33 34 35
exp_6                : 32 33 34 35 44 45 46 47 48 49 50
exp_7                : 43 44 45 46 47 48 49 50 53
exp_8                : 52 53 57 58
exp_9                : 56
float                : 75
funcao_com_params    : 134
funcao_sem_params    : 135
gcd                  : 42
igual_dp             : 14
inteiro              : 74 96 96
lcm                  : 41
lista_declaracoes    : 1 2 4 96 97 98 99 100 101 118
lista_declaracoes_para_funcoes : 103 104
lista_elsif          : 114 115 117
lista_valores        : 90 91 92 93
lista_valores_base   : 94
loop                 : 139
loop_for             : 140
loop_for_com_lista   : 141
loop_sem_condicao    : 144
loop_times           : 142
loop_while           : 143
maior                : 16
maior_igual          : 18
menor                : 17
menor_igual          : 19
mod                  : 40
mult                 : 36
not_op               : 54
not_s                : 55
operando             : 60
or                   : 6
parametros           : 103 106
parenteses           : 69
posfixo_decremento   : 64
posfixo_incremento   : 62
pow                  : 51
prefixo_decremento   : 63
prefixo_incremento   : 61
programa             : 0
say                  : 122
smartmatch           : 20
string               : 76
subtracao            : 30
tipo                 : 72 93 95
tipo_opicional       : 88 89
tipo_opicional_int   : 78
unario               : 59
xor                  : 7

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . lista_declaracoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    programa                       shift and go to state 1
    lista_declaracoes              shift and go to state 2
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 1

    (0) S' -> programa .



state 2

    (1) programa -> lista_declaracoes .
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    $end            reduce using rule 1 (programa -> lista_declaracoes .)
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 3

    (3) lista_declaracoes -> declaracoes .

    SAY             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    MY              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    OUR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LIST            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FUNCTION        reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ESCALAR         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ID              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    IF              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LOOP            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FOR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    INTEGER         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    WHILE           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ABRE_CHAVE      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NOT             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEGAC           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ADC_DP          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    DECREMENTO      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LPAREN          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FLOAT           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STRING          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    BOOLEAN         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    $end            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FECHA_CHAVE     reduce using rule 3 (lista_declaracoes -> declaracoes .)


state 4

    (119) declaracoes -> declaracoes_para_funcoes .

    SAY             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    $end            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FECHA_CHAVE     reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)


state 5

    (120) declaracoes -> declaracao_de_funcao .

    SAY             reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    MY              reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    OUR             reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    LIST            reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    FUNCTION        reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    ESCALAR         reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    ID              reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    IF              reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    LOOP            reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    FOR             reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    INTEGER         reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    WHILE           reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    NOT             reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    NEGAC           reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    ADC_DP          reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    DECREMENTO      reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    LPAREN          reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    FLOAT           reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    STRING          reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    BOOLEAN         reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    $end            reduce using rule 120 (declaracoes -> declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 120 (declaracoes -> declaracao_de_funcao .)


state 6

    (121) declaracoes_para_funcoes -> declaracao_de_atribuicao .

    SAY             reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    MY              reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    OUR             reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LIST            reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FUNCTION        reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ESCALAR         reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ID              reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    IF              reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LOOP            reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FOR             reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    INTEGER         reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    WHILE           reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ABRE_CHAVE      reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NOT             reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEGAC           reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ADC_DP          reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    DECREMENTO      reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LPAREN          reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FLOAT           reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STRING          reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    BOOLEAN         reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    $end            reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FECHA_CHAVE     reduce using rule 121 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)


state 7

    (122) declaracoes_para_funcoes -> say .

    SAY             reduce using rule 122 (declaracoes_para_funcoes -> say .)
    MY              reduce using rule 122 (declaracoes_para_funcoes -> say .)
    OUR             reduce using rule 122 (declaracoes_para_funcoes -> say .)
    LIST            reduce using rule 122 (declaracoes_para_funcoes -> say .)
    FUNCTION        reduce using rule 122 (declaracoes_para_funcoes -> say .)
    ESCALAR         reduce using rule 122 (declaracoes_para_funcoes -> say .)
    ID              reduce using rule 122 (declaracoes_para_funcoes -> say .)
    IF              reduce using rule 122 (declaracoes_para_funcoes -> say .)
    LOOP            reduce using rule 122 (declaracoes_para_funcoes -> say .)
    FOR             reduce using rule 122 (declaracoes_para_funcoes -> say .)
    INTEGER         reduce using rule 122 (declaracoes_para_funcoes -> say .)
    WHILE           reduce using rule 122 (declaracoes_para_funcoes -> say .)
    ABRE_CHAVE      reduce using rule 122 (declaracoes_para_funcoes -> say .)
    NOT             reduce using rule 122 (declaracoes_para_funcoes -> say .)
    NEGAC           reduce using rule 122 (declaracoes_para_funcoes -> say .)
    ADC_DP          reduce using rule 122 (declaracoes_para_funcoes -> say .)
    DECREMENTO      reduce using rule 122 (declaracoes_para_funcoes -> say .)
    LPAREN          reduce using rule 122 (declaracoes_para_funcoes -> say .)
    FLOAT           reduce using rule 122 (declaracoes_para_funcoes -> say .)
    STRING          reduce using rule 122 (declaracoes_para_funcoes -> say .)
    BOOLEAN         reduce using rule 122 (declaracoes_para_funcoes -> say .)
    $end            reduce using rule 122 (declaracoes_para_funcoes -> say .)
    FECHA_CHAVE     reduce using rule 122 (declaracoes_para_funcoes -> say .)


state 8

    (123) declaracoes_para_funcoes -> declaracao_de_chamada_funcao .

    SAY             reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    MY              reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    OUR             reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LIST            reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FUNCTION        reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ESCALAR         reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ID              reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    IF              reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LOOP            reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FOR             reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    INTEGER         reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    WHILE           reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NOT             reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NEGAC           reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ADC_DP          reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    DECREMENTO      reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LPAREN          reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FLOAT           reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    STRING          reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    BOOLEAN         reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    $end            reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FECHA_CHAVE     reduce using rule 123 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)


state 9

    (124) declaracoes_para_funcoes -> declaracao_de_condicional .

    SAY             reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    MY              reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    OUR             reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LIST            reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FUNCTION        reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ESCALAR         reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ID              reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    IF              reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LOOP            reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FOR             reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    INTEGER         reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    WHILE           reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NOT             reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEGAC           reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ADC_DP          reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    DECREMENTO      reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LPAREN          reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FLOAT           reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STRING          reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    BOOLEAN         reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    $end            reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FECHA_CHAVE     reduce using rule 124 (declaracoes_para_funcoes -> declaracao_de_condicional .)


state 10

    (125) declaracoes_para_funcoes -> declaracao_loop .

    SAY             reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    MY              reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    OUR             reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    LIST            reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    FUNCTION        reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    ESCALAR         reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    ID              reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    IF              reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    LOOP            reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    FOR             reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    INTEGER         reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    WHILE           reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    ABRE_CHAVE      reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    NOT             reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    NEGAC           reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    ADC_DP          reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    DECREMENTO      reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    LPAREN          reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    FLOAT           reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    STRING          reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    BOOLEAN         reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    $end            reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)
    FECHA_CHAVE     reduce using rule 125 (declaracoes_para_funcoes -> declaracao_loop .)


state 11

    (126) declaracoes_para_funcoes -> declaracao_de_expressao .

    SAY             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    MY              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    OUR             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LIST            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FUNCTION        reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ESCALAR         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ID              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    IF              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LOOP            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FOR             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    INTEGER         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    WHILE           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ABRE_CHAVE      reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NOT             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEGAC           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ADC_DP          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    DECREMENTO      reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LPAREN          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FLOAT           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STRING          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    BOOLEAN         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    $end            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FECHA_CHAVE     reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_expressao .)


state 12

    (127) declaracoes_para_funcoes -> declaracao_bloco .

    SAY             reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    MY              reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    OUR             reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    LIST            reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    FUNCTION        reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    ESCALAR         reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    ID              reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    IF              reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    LOOP            reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    FOR             reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    INTEGER         reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    WHILE           reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    ABRE_CHAVE      reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    NOT             reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEGAC           reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    ADC_DP          reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    DECREMENTO      reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    LPAREN          reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    FLOAT           reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    STRING          reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    BOOLEAN         reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    $end            reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)
    FECHA_CHAVE     reduce using rule 127 (declaracoes_para_funcoes -> declaracao_bloco .)


state 13

    (128) declaracoes_para_funcoes -> declaracao_escalar_MY .

    SAY             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    MY              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    OUR             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LIST            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FUNCTION        reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ESCALAR         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ID              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    IF              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LOOP            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FOR             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    INTEGER         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    WHILE           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ABRE_CHAVE      reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NOT             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEGAC           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ADC_DP          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    DECREMENTO      reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LPAREN          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FLOAT           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STRING          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    BOOLEAN         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    $end            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FECHA_CHAVE     reduce using rule 128 (declaracoes_para_funcoes -> declaracao_escalar_MY .)


state 14

    (129) declaracoes_para_funcoes -> declaracao_escalar_OUR .

    SAY             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    MY              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    OUR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LIST            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FUNCTION        reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ESCALAR         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ID              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    IF              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LOOP            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FOR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    INTEGER         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    WHILE           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ABRE_CHAVE      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NOT             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEGAC           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ADC_DP          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    DECREMENTO      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LPAREN          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FLOAT           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STRING          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    BOOLEAN         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    $end            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FECHA_CHAVE     reduce using rule 129 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)


state 15

    (130) declaracoes_para_funcoes -> declaracao_lista .

    SAY             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    MY              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    OUR             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    LIST            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    FUNCTION        reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    ESCALAR         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    ID              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    IF              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    LOOP            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    FOR             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    INTEGER         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    WHILE           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    ABRE_CHAVE      reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    NOT             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    NEGAC           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    ADC_DP          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    DECREMENTO      reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    LPAREN          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    FLOAT           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    STRING          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    BOOLEAN         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    $end            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)
    FECHA_CHAVE     reduce using rule 130 (declaracoes_para_funcoes -> declaracao_lista .)


state 16

    (131) declaracoes_para_funcoes -> declaracao_lista_MY .

    SAY             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    MY              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    OUR             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LIST            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FUNCTION        reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ESCALAR         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ID              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    IF              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LOOP            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FOR             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    INTEGER         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    WHILE           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ABRE_CHAVE      reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NOT             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEGAC           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ADC_DP          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    DECREMENTO      reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LPAREN          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FLOAT           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STRING          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    BOOLEAN         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    $end            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FECHA_CHAVE     reduce using rule 131 (declaracoes_para_funcoes -> declaracao_lista_MY .)


state 17

    (132) declaracoes_para_funcoes -> declaracao_lista_OUR .

    SAY             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    MY              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    OUR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LIST            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FUNCTION        reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ESCALAR         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ID              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    IF              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LOOP            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FOR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    INTEGER         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    WHILE           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ABRE_CHAVE      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NOT             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEGAC           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ADC_DP          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    DECREMENTO      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LPAREN          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FLOAT           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STRING          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    BOOLEAN         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    $end            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FECHA_CHAVE     reduce using rule 132 (declaracoes_para_funcoes -> declaracao_lista_OUR .)


state 18

    (134) declaracao_de_funcao -> funcao_com_params .

    SAY             reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    MY              reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    OUR             reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    LIST            reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    FUNCTION        reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    ESCALAR         reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    ID              reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    IF              reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    LOOP            reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    FOR             reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    INTEGER         reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    WHILE           reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    ABRE_CHAVE      reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    NOT             reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    NEGAC           reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    ADC_DP          reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    DECREMENTO      reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    LPAREN          reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    FLOAT           reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    STRING          reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    BOOLEAN         reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    $end            reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)
    FECHA_CHAVE     reduce using rule 134 (declaracao_de_funcao -> funcao_com_params .)


state 19

    (135) declaracao_de_funcao -> funcao_sem_params .

    SAY             reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    MY              reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    OUR             reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    LIST            reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    FUNCTION        reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    ESCALAR         reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    ID              reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    IF              reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    LOOP            reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    FOR             reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    INTEGER         reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    WHILE           reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    ABRE_CHAVE      reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    NOT             reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    NEGAC           reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    ADC_DP          reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    DECREMENTO      reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    LPAREN          reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    FLOAT           reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    STRING          reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    BOOLEAN         reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    $end            reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)
    FECHA_CHAVE     reduce using rule 135 (declaracao_de_funcao -> funcao_sem_params .)


state 20

    (133) declaracao_de_atribuicao -> atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 98


state 21

    (102) say -> SAY . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 99
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 22

    (145) declaracao_de_expressao -> exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 103
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 23

    (136) declaracao_de_chamada_funcao -> chamada_funcao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 106


state 24

    (137) declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 107


state 25

    (138) declaracao_de_condicional -> condicional .

    SAY             reduce using rule 138 (declaracao_de_condicional -> condicional .)
    MY              reduce using rule 138 (declaracao_de_condicional -> condicional .)
    OUR             reduce using rule 138 (declaracao_de_condicional -> condicional .)
    LIST            reduce using rule 138 (declaracao_de_condicional -> condicional .)
    FUNCTION        reduce using rule 138 (declaracao_de_condicional -> condicional .)
    ESCALAR         reduce using rule 138 (declaracao_de_condicional -> condicional .)
    ID              reduce using rule 138 (declaracao_de_condicional -> condicional .)
    IF              reduce using rule 138 (declaracao_de_condicional -> condicional .)
    LOOP            reduce using rule 138 (declaracao_de_condicional -> condicional .)
    FOR             reduce using rule 138 (declaracao_de_condicional -> condicional .)
    INTEGER         reduce using rule 138 (declaracao_de_condicional -> condicional .)
    WHILE           reduce using rule 138 (declaracao_de_condicional -> condicional .)
    ABRE_CHAVE      reduce using rule 138 (declaracao_de_condicional -> condicional .)
    NOT             reduce using rule 138 (declaracao_de_condicional -> condicional .)
    NEGAC           reduce using rule 138 (declaracao_de_condicional -> condicional .)
    ADC_DP          reduce using rule 138 (declaracao_de_condicional -> condicional .)
    DECREMENTO      reduce using rule 138 (declaracao_de_condicional -> condicional .)
    LPAREN          reduce using rule 138 (declaracao_de_condicional -> condicional .)
    FLOAT           reduce using rule 138 (declaracao_de_condicional -> condicional .)
    STRING          reduce using rule 138 (declaracao_de_condicional -> condicional .)
    BOOLEAN         reduce using rule 138 (declaracao_de_condicional -> condicional .)
    $end            reduce using rule 138 (declaracao_de_condicional -> condicional .)
    FECHA_CHAVE     reduce using rule 138 (declaracao_de_condicional -> condicional .)


state 26

    (139) declaracao_loop -> loop .

    SAY             reduce using rule 139 (declaracao_loop -> loop .)
    MY              reduce using rule 139 (declaracao_loop -> loop .)
    OUR             reduce using rule 139 (declaracao_loop -> loop .)
    LIST            reduce using rule 139 (declaracao_loop -> loop .)
    FUNCTION        reduce using rule 139 (declaracao_loop -> loop .)
    ESCALAR         reduce using rule 139 (declaracao_loop -> loop .)
    ID              reduce using rule 139 (declaracao_loop -> loop .)
    IF              reduce using rule 139 (declaracao_loop -> loop .)
    LOOP            reduce using rule 139 (declaracao_loop -> loop .)
    FOR             reduce using rule 139 (declaracao_loop -> loop .)
    INTEGER         reduce using rule 139 (declaracao_loop -> loop .)
    WHILE           reduce using rule 139 (declaracao_loop -> loop .)
    ABRE_CHAVE      reduce using rule 139 (declaracao_loop -> loop .)
    NOT             reduce using rule 139 (declaracao_loop -> loop .)
    NEGAC           reduce using rule 139 (declaracao_loop -> loop .)
    ADC_DP          reduce using rule 139 (declaracao_loop -> loop .)
    DECREMENTO      reduce using rule 139 (declaracao_loop -> loop .)
    LPAREN          reduce using rule 139 (declaracao_loop -> loop .)
    FLOAT           reduce using rule 139 (declaracao_loop -> loop .)
    STRING          reduce using rule 139 (declaracao_loop -> loop .)
    BOOLEAN         reduce using rule 139 (declaracao_loop -> loop .)
    $end            reduce using rule 139 (declaracao_loop -> loop .)
    FECHA_CHAVE     reduce using rule 139 (declaracao_loop -> loop .)


state 27

    (140) declaracao_loop -> loop_for .

    SAY             reduce using rule 140 (declaracao_loop -> loop_for .)
    MY              reduce using rule 140 (declaracao_loop -> loop_for .)
    OUR             reduce using rule 140 (declaracao_loop -> loop_for .)
    LIST            reduce using rule 140 (declaracao_loop -> loop_for .)
    FUNCTION        reduce using rule 140 (declaracao_loop -> loop_for .)
    ESCALAR         reduce using rule 140 (declaracao_loop -> loop_for .)
    ID              reduce using rule 140 (declaracao_loop -> loop_for .)
    IF              reduce using rule 140 (declaracao_loop -> loop_for .)
    LOOP            reduce using rule 140 (declaracao_loop -> loop_for .)
    FOR             reduce using rule 140 (declaracao_loop -> loop_for .)
    INTEGER         reduce using rule 140 (declaracao_loop -> loop_for .)
    WHILE           reduce using rule 140 (declaracao_loop -> loop_for .)
    ABRE_CHAVE      reduce using rule 140 (declaracao_loop -> loop_for .)
    NOT             reduce using rule 140 (declaracao_loop -> loop_for .)
    NEGAC           reduce using rule 140 (declaracao_loop -> loop_for .)
    ADC_DP          reduce using rule 140 (declaracao_loop -> loop_for .)
    DECREMENTO      reduce using rule 140 (declaracao_loop -> loop_for .)
    LPAREN          reduce using rule 140 (declaracao_loop -> loop_for .)
    FLOAT           reduce using rule 140 (declaracao_loop -> loop_for .)
    STRING          reduce using rule 140 (declaracao_loop -> loop_for .)
    BOOLEAN         reduce using rule 140 (declaracao_loop -> loop_for .)
    $end            reduce using rule 140 (declaracao_loop -> loop_for .)
    FECHA_CHAVE     reduce using rule 140 (declaracao_loop -> loop_for .)


state 28

    (141) declaracao_loop -> loop_for_com_lista .

    SAY             reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    MY              reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    OUR             reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    LIST            reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    FUNCTION        reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    ESCALAR         reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    ID              reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    IF              reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    LOOP            reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    FOR             reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    INTEGER         reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    WHILE           reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    ABRE_CHAVE      reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    NOT             reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    NEGAC           reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    ADC_DP          reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    DECREMENTO      reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    LPAREN          reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    FLOAT           reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    STRING          reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    BOOLEAN         reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    $end            reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)
    FECHA_CHAVE     reduce using rule 141 (declaracao_loop -> loop_for_com_lista .)


state 29

    (142) declaracao_loop -> loop_times .

    SAY             reduce using rule 142 (declaracao_loop -> loop_times .)
    MY              reduce using rule 142 (declaracao_loop -> loop_times .)
    OUR             reduce using rule 142 (declaracao_loop -> loop_times .)
    LIST            reduce using rule 142 (declaracao_loop -> loop_times .)
    FUNCTION        reduce using rule 142 (declaracao_loop -> loop_times .)
    ESCALAR         reduce using rule 142 (declaracao_loop -> loop_times .)
    ID              reduce using rule 142 (declaracao_loop -> loop_times .)
    IF              reduce using rule 142 (declaracao_loop -> loop_times .)
    LOOP            reduce using rule 142 (declaracao_loop -> loop_times .)
    FOR             reduce using rule 142 (declaracao_loop -> loop_times .)
    INTEGER         reduce using rule 142 (declaracao_loop -> loop_times .)
    WHILE           reduce using rule 142 (declaracao_loop -> loop_times .)
    ABRE_CHAVE      reduce using rule 142 (declaracao_loop -> loop_times .)
    NOT             reduce using rule 142 (declaracao_loop -> loop_times .)
    NEGAC           reduce using rule 142 (declaracao_loop -> loop_times .)
    ADC_DP          reduce using rule 142 (declaracao_loop -> loop_times .)
    DECREMENTO      reduce using rule 142 (declaracao_loop -> loop_times .)
    LPAREN          reduce using rule 142 (declaracao_loop -> loop_times .)
    FLOAT           reduce using rule 142 (declaracao_loop -> loop_times .)
    STRING          reduce using rule 142 (declaracao_loop -> loop_times .)
    BOOLEAN         reduce using rule 142 (declaracao_loop -> loop_times .)
    $end            reduce using rule 142 (declaracao_loop -> loop_times .)
    FECHA_CHAVE     reduce using rule 142 (declaracao_loop -> loop_times .)


state 30

    (143) declaracao_loop -> loop_while .

    SAY             reduce using rule 143 (declaracao_loop -> loop_while .)
    MY              reduce using rule 143 (declaracao_loop -> loop_while .)
    OUR             reduce using rule 143 (declaracao_loop -> loop_while .)
    LIST            reduce using rule 143 (declaracao_loop -> loop_while .)
    FUNCTION        reduce using rule 143 (declaracao_loop -> loop_while .)
    ESCALAR         reduce using rule 143 (declaracao_loop -> loop_while .)
    ID              reduce using rule 143 (declaracao_loop -> loop_while .)
    IF              reduce using rule 143 (declaracao_loop -> loop_while .)
    LOOP            reduce using rule 143 (declaracao_loop -> loop_while .)
    FOR             reduce using rule 143 (declaracao_loop -> loop_while .)
    INTEGER         reduce using rule 143 (declaracao_loop -> loop_while .)
    WHILE           reduce using rule 143 (declaracao_loop -> loop_while .)
    ABRE_CHAVE      reduce using rule 143 (declaracao_loop -> loop_while .)
    NOT             reduce using rule 143 (declaracao_loop -> loop_while .)
    NEGAC           reduce using rule 143 (declaracao_loop -> loop_while .)
    ADC_DP          reduce using rule 143 (declaracao_loop -> loop_while .)
    DECREMENTO      reduce using rule 143 (declaracao_loop -> loop_while .)
    LPAREN          reduce using rule 143 (declaracao_loop -> loop_while .)
    FLOAT           reduce using rule 143 (declaracao_loop -> loop_while .)
    STRING          reduce using rule 143 (declaracao_loop -> loop_while .)
    BOOLEAN         reduce using rule 143 (declaracao_loop -> loop_while .)
    $end            reduce using rule 143 (declaracao_loop -> loop_while .)
    FECHA_CHAVE     reduce using rule 143 (declaracao_loop -> loop_while .)


state 31

    (144) declaracao_loop -> loop_sem_condicao .

    SAY             reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    MY              reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    OUR             reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    LIST            reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    FUNCTION        reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    ESCALAR         reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    ID              reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    IF              reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    LOOP            reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    FOR             reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    INTEGER         reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    WHILE           reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    ABRE_CHAVE      reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    NOT             reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    NEGAC           reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    ADC_DP          reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    DECREMENTO      reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    LPAREN          reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    FLOAT           reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    STRING          reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    BOOLEAN         reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    $end            reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)
    FECHA_CHAVE     reduce using rule 144 (declaracao_loop -> loop_sem_condicao .)


state 32

    (146) declaracao_bloco -> bloco .

    SAY             reduce using rule 146 (declaracao_bloco -> bloco .)
    MY              reduce using rule 146 (declaracao_bloco -> bloco .)
    OUR             reduce using rule 146 (declaracao_bloco -> bloco .)
    LIST            reduce using rule 146 (declaracao_bloco -> bloco .)
    FUNCTION        reduce using rule 146 (declaracao_bloco -> bloco .)
    ESCALAR         reduce using rule 146 (declaracao_bloco -> bloco .)
    ID              reduce using rule 146 (declaracao_bloco -> bloco .)
    IF              reduce using rule 146 (declaracao_bloco -> bloco .)
    LOOP            reduce using rule 146 (declaracao_bloco -> bloco .)
    FOR             reduce using rule 146 (declaracao_bloco -> bloco .)
    INTEGER         reduce using rule 146 (declaracao_bloco -> bloco .)
    WHILE           reduce using rule 146 (declaracao_bloco -> bloco .)
    ABRE_CHAVE      reduce using rule 146 (declaracao_bloco -> bloco .)
    NOT             reduce using rule 146 (declaracao_bloco -> bloco .)
    NEGAC           reduce using rule 146 (declaracao_bloco -> bloco .)
    ADC_DP          reduce using rule 146 (declaracao_bloco -> bloco .)
    DECREMENTO      reduce using rule 146 (declaracao_bloco -> bloco .)
    LPAREN          reduce using rule 146 (declaracao_bloco -> bloco .)
    FLOAT           reduce using rule 146 (declaracao_bloco -> bloco .)
    STRING          reduce using rule 146 (declaracao_bloco -> bloco .)
    BOOLEAN         reduce using rule 146 (declaracao_bloco -> bloco .)
    $end            reduce using rule 146 (declaracao_bloco -> bloco .)
    FECHA_CHAVE     reduce using rule 146 (declaracao_bloco -> bloco .)


state 33

    (88) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (91) declaracao_lista_MY -> MY . LIST IGUAL lista_valores PONTO_VIRGULA
    (78) tipo_opicional -> . tipo_opicional_int
    (79) tipo_opicional -> . STR
    (80) tipo_opicional -> . empty
    (81) tipo_opicional_int -> . INT
    (82) empty -> .

    LIST            shift and go to state 109
    STR             shift and go to state 111
    INT             shift and go to state 113
    ESCALAR         reduce using rule 82 (empty -> .)

    tipo_opicional                 shift and go to state 108
    tipo_opicional_int             shift and go to state 110
    empty                          shift and go to state 112

state 34

    (107) atribuicao -> ESCALAR . IGUAL exp_2
    (87) escalar -> ESCALAR .

    IGUAL           shift and go to state 114
    POW             reduce using rule 87 (escalar -> ESCALAR .)
    MULT            reduce using rule 87 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 87 (escalar -> ESCALAR .)
    DIV             reduce using rule 87 (escalar -> ESCALAR .)
    DIVI            reduce using rule 87 (escalar -> ESCALAR .)
    MOD             reduce using rule 87 (escalar -> ESCALAR .)
    LCM             reduce using rule 87 (escalar -> ESCALAR .)
    GCD             reduce using rule 87 (escalar -> ESCALAR .)
    ADC             reduce using rule 87 (escalar -> ESCALAR .)
    SUB             reduce using rule 87 (escalar -> ESCALAR .)
    CONC            reduce using rule 87 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 87 (escalar -> ESCALAR .)
    DIF             reduce using rule 87 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 87 (escalar -> ESCALAR .)
    MENOR           reduce using rule 87 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 87 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 87 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 87 (escalar -> ESCALAR .)
    AND_S           reduce using rule 87 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 87 (escalar -> ESCALAR .)
    OR_S            reduce using rule 87 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 87 (escalar -> ESCALAR .)


state 35

    (89) declaracao_escalar_OUR -> OUR . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_lista_OUR -> OUR . LIST IGUAL lista_valores PONTO_VIRGULA
    (78) tipo_opicional -> . tipo_opicional_int
    (79) tipo_opicional -> . STR
    (80) tipo_opicional -> . empty
    (81) tipo_opicional_int -> . INT
    (82) empty -> .

    LIST            shift and go to state 116
    STR             shift and go to state 111
    INT             shift and go to state 113
    ESCALAR         reduce using rule 82 (empty -> .)

    tipo_opicional                 shift and go to state 115
    tipo_opicional_int             shift and go to state 110
    empty                          shift and go to state 112

state 36

    (90) declaracao_lista -> LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 117


state 37

    (103) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ID              shift and go to state 118


state 38

    (108) chamada_funcao -> ID . LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> ID . LPAREN RPAREN
    (66) posfixo_incremento -> ID . ADC_DP
    (68) posfixo_decremento -> ID . DECREMENTO

    LPAREN          shift and go to state 119
    ADC_DP          shift and go to state 120
    DECREMENTO      shift and go to state 121


state 39

    (71) parenteses -> LPAREN . exp_2 RPAREN
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 122
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 40

    (118) bloco -> ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes              shift and go to state 123
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 41

    (112) condicional -> IF . exp_2 bloco
    (113) condicional -> IF . exp_2 bloco ELSE bloco
    (114) condicional -> IF . exp_2 bloco lista_elsif
    (115) condicional -> IF . exp_2 bloco lista_elsif ELSE bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 124
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 42

    (100) loop -> LOOP . LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> LOOP . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    LPAREN          shift and go to state 125
    ABRE_CHAVE      shift and go to state 126


state 43

    (96) loop_for -> FOR . inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> FOR . LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (83) inteiro -> . INTEGER

    LIST            shift and go to state 128
    INTEGER         shift and go to state 102

    inteiro                        shift and go to state 127

state 44

    (74) tipo -> inteiro .

    POW             reduce using rule 74 (tipo -> inteiro .)
    MULT            reduce using rule 74 (tipo -> inteiro .)
    DIVIDE          reduce using rule 74 (tipo -> inteiro .)
    DIV             reduce using rule 74 (tipo -> inteiro .)
    DIVI            reduce using rule 74 (tipo -> inteiro .)
    MOD             reduce using rule 74 (tipo -> inteiro .)
    LCM             reduce using rule 74 (tipo -> inteiro .)
    GCD             reduce using rule 74 (tipo -> inteiro .)
    ADC             reduce using rule 74 (tipo -> inteiro .)
    SUB             reduce using rule 74 (tipo -> inteiro .)
    CONC            reduce using rule 74 (tipo -> inteiro .)
    IGUAL_DP        reduce using rule 74 (tipo -> inteiro .)
    DIF             reduce using rule 74 (tipo -> inteiro .)
    MAIOR           reduce using rule 74 (tipo -> inteiro .)
    MENOR           reduce using rule 74 (tipo -> inteiro .)
    MAIOR_IGL       reduce using rule 74 (tipo -> inteiro .)
    LESSEQUAL       reduce using rule 74 (tipo -> inteiro .)
    SMARTMATCH      reduce using rule 74 (tipo -> inteiro .)
    AND_S           reduce using rule 74 (tipo -> inteiro .)
    PONTO_VIRGULA   reduce using rule 74 (tipo -> inteiro .)
    OR_S            reduce using rule 74 (tipo -> inteiro .)
    XOR_S           reduce using rule 74 (tipo -> inteiro .)
    RPAREN          reduce using rule 74 (tipo -> inteiro .)
    ABRE_CHAVE      reduce using rule 74 (tipo -> inteiro .)
    COMMA           reduce using rule 74 (tipo -> inteiro .)


state 45

    (98) loop_times -> INTEGER . TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (83) inteiro -> INTEGER .

    TIMES           shift and go to state 129
    POW             reduce using rule 83 (inteiro -> INTEGER .)
    MULT            reduce using rule 83 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 83 (inteiro -> INTEGER .)
    DIV             reduce using rule 83 (inteiro -> INTEGER .)
    DIVI            reduce using rule 83 (inteiro -> INTEGER .)
    MOD             reduce using rule 83 (inteiro -> INTEGER .)
    LCM             reduce using rule 83 (inteiro -> INTEGER .)
    GCD             reduce using rule 83 (inteiro -> INTEGER .)
    ADC             reduce using rule 83 (inteiro -> INTEGER .)
    SUB             reduce using rule 83 (inteiro -> INTEGER .)
    CONC            reduce using rule 83 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 83 (inteiro -> INTEGER .)
    DIF             reduce using rule 83 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 83 (inteiro -> INTEGER .)
    MENOR           reduce using rule 83 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 83 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 83 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 83 (inteiro -> INTEGER .)
    AND_S           reduce using rule 83 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 83 (inteiro -> INTEGER .)
    OR_S            reduce using rule 83 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 83 (inteiro -> INTEGER .)


state 46

    (99) loop_while -> WHILE . exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 130
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 47

    (6) exp_2 -> or .

    PONTO_VIRGULA   reduce using rule 6 (exp_2 -> or .)
    OR_S            reduce using rule 6 (exp_2 -> or .)
    XOR_S           reduce using rule 6 (exp_2 -> or .)
    RPAREN          reduce using rule 6 (exp_2 -> or .)
    ABRE_CHAVE      reduce using rule 6 (exp_2 -> or .)


state 48

    (7) exp_2 -> xor .

    PONTO_VIRGULA   reduce using rule 7 (exp_2 -> xor .)
    OR_S            reduce using rule 7 (exp_2 -> xor .)
    XOR_S           reduce using rule 7 (exp_2 -> xor .)
    RPAREN          reduce using rule 7 (exp_2 -> xor .)
    ABRE_CHAVE      reduce using rule 7 (exp_2 -> xor .)


state 49

    (8) exp_2 -> exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 8 (exp_2 -> exp_3 .)
    OR_S            reduce using rule 8 (exp_2 -> exp_3 .)
    XOR_S           reduce using rule 8 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 8 (exp_2 -> exp_3 .)
    ABRE_CHAVE      reduce using rule 8 (exp_2 -> exp_3 .)
    AND_S           shift and go to state 131


state 50

    (11) exp_3 -> and .

    AND_S           reduce using rule 11 (exp_3 -> and .)
    PONTO_VIRGULA   reduce using rule 11 (exp_3 -> and .)
    OR_S            reduce using rule 11 (exp_3 -> and .)
    XOR_S           reduce using rule 11 (exp_3 -> and .)
    RPAREN          reduce using rule 11 (exp_3 -> and .)
    ABRE_CHAVE      reduce using rule 11 (exp_3 -> and .)


state 51

    (12) exp_3 -> exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 12 (exp_3 -> exp_4 .)
    PONTO_VIRGULA   reduce using rule 12 (exp_3 -> exp_4 .)
    OR_S            reduce using rule 12 (exp_3 -> exp_4 .)
    XOR_S           reduce using rule 12 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 12 (exp_3 -> exp_4 .)
    ABRE_CHAVE      reduce using rule 12 (exp_3 -> exp_4 .)
    IGUAL_DP        shift and go to state 132
    DIF             shift and go to state 133
    MAIOR           shift and go to state 134
    MENOR           shift and go to state 135
    MAIOR_IGL       shift and go to state 136
    LESSEQUAL       shift and go to state 137
    SMARTMATCH      shift and go to state 138


state 52

    (14) exp_4 -> igual_dp .

    IGUAL_DP        reduce using rule 14 (exp_4 -> igual_dp .)
    DIF             reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MENOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR_IGL       reduce using rule 14 (exp_4 -> igual_dp .)
    LESSEQUAL       reduce using rule 14 (exp_4 -> igual_dp .)
    SMARTMATCH      reduce using rule 14 (exp_4 -> igual_dp .)
    AND_S           reduce using rule 14 (exp_4 -> igual_dp .)
    PONTO_VIRGULA   reduce using rule 14 (exp_4 -> igual_dp .)
    OR_S            reduce using rule 14 (exp_4 -> igual_dp .)
    XOR_S           reduce using rule 14 (exp_4 -> igual_dp .)
    RPAREN          reduce using rule 14 (exp_4 -> igual_dp .)
    ABRE_CHAVE      reduce using rule 14 (exp_4 -> igual_dp .)


state 53

    (15) exp_4 -> dif .

    IGUAL_DP        reduce using rule 15 (exp_4 -> dif .)
    DIF             reduce using rule 15 (exp_4 -> dif .)
    MAIOR           reduce using rule 15 (exp_4 -> dif .)
    MENOR           reduce using rule 15 (exp_4 -> dif .)
    MAIOR_IGL       reduce using rule 15 (exp_4 -> dif .)
    LESSEQUAL       reduce using rule 15 (exp_4 -> dif .)
    SMARTMATCH      reduce using rule 15 (exp_4 -> dif .)
    AND_S           reduce using rule 15 (exp_4 -> dif .)
    PONTO_VIRGULA   reduce using rule 15 (exp_4 -> dif .)
    OR_S            reduce using rule 15 (exp_4 -> dif .)
    XOR_S           reduce using rule 15 (exp_4 -> dif .)
    RPAREN          reduce using rule 15 (exp_4 -> dif .)
    ABRE_CHAVE      reduce using rule 15 (exp_4 -> dif .)


state 54

    (16) exp_4 -> maior .

    IGUAL_DP        reduce using rule 16 (exp_4 -> maior .)
    DIF             reduce using rule 16 (exp_4 -> maior .)
    MAIOR           reduce using rule 16 (exp_4 -> maior .)
    MENOR           reduce using rule 16 (exp_4 -> maior .)
    MAIOR_IGL       reduce using rule 16 (exp_4 -> maior .)
    LESSEQUAL       reduce using rule 16 (exp_4 -> maior .)
    SMARTMATCH      reduce using rule 16 (exp_4 -> maior .)
    AND_S           reduce using rule 16 (exp_4 -> maior .)
    PONTO_VIRGULA   reduce using rule 16 (exp_4 -> maior .)
    OR_S            reduce using rule 16 (exp_4 -> maior .)
    XOR_S           reduce using rule 16 (exp_4 -> maior .)
    RPAREN          reduce using rule 16 (exp_4 -> maior .)
    ABRE_CHAVE      reduce using rule 16 (exp_4 -> maior .)


state 55

    (17) exp_4 -> menor .

    IGUAL_DP        reduce using rule 17 (exp_4 -> menor .)
    DIF             reduce using rule 17 (exp_4 -> menor .)
    MAIOR           reduce using rule 17 (exp_4 -> menor .)
    MENOR           reduce using rule 17 (exp_4 -> menor .)
    MAIOR_IGL       reduce using rule 17 (exp_4 -> menor .)
    LESSEQUAL       reduce using rule 17 (exp_4 -> menor .)
    SMARTMATCH      reduce using rule 17 (exp_4 -> menor .)
    AND_S           reduce using rule 17 (exp_4 -> menor .)
    PONTO_VIRGULA   reduce using rule 17 (exp_4 -> menor .)
    OR_S            reduce using rule 17 (exp_4 -> menor .)
    XOR_S           reduce using rule 17 (exp_4 -> menor .)
    RPAREN          reduce using rule 17 (exp_4 -> menor .)
    ABRE_CHAVE      reduce using rule 17 (exp_4 -> menor .)


state 56

    (18) exp_4 -> maior_igual .

    IGUAL_DP        reduce using rule 18 (exp_4 -> maior_igual .)
    DIF             reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MENOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR_IGL       reduce using rule 18 (exp_4 -> maior_igual .)
    LESSEQUAL       reduce using rule 18 (exp_4 -> maior_igual .)
    SMARTMATCH      reduce using rule 18 (exp_4 -> maior_igual .)
    AND_S           reduce using rule 18 (exp_4 -> maior_igual .)
    PONTO_VIRGULA   reduce using rule 18 (exp_4 -> maior_igual .)
    OR_S            reduce using rule 18 (exp_4 -> maior_igual .)
    XOR_S           reduce using rule 18 (exp_4 -> maior_igual .)
    RPAREN          reduce using rule 18 (exp_4 -> maior_igual .)
    ABRE_CHAVE      reduce using rule 18 (exp_4 -> maior_igual .)


state 57

    (19) exp_4 -> menor_igual .

    IGUAL_DP        reduce using rule 19 (exp_4 -> menor_igual .)
    DIF             reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MENOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR_IGL       reduce using rule 19 (exp_4 -> menor_igual .)
    LESSEQUAL       reduce using rule 19 (exp_4 -> menor_igual .)
    SMARTMATCH      reduce using rule 19 (exp_4 -> menor_igual .)
    AND_S           reduce using rule 19 (exp_4 -> menor_igual .)
    PONTO_VIRGULA   reduce using rule 19 (exp_4 -> menor_igual .)
    OR_S            reduce using rule 19 (exp_4 -> menor_igual .)
    XOR_S           reduce using rule 19 (exp_4 -> menor_igual .)
    RPAREN          reduce using rule 19 (exp_4 -> menor_igual .)
    ABRE_CHAVE      reduce using rule 19 (exp_4 -> menor_igual .)


state 58

    (20) exp_4 -> smartmatch .

    IGUAL_DP        reduce using rule 20 (exp_4 -> smartmatch .)
    DIF             reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MENOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR_IGL       reduce using rule 20 (exp_4 -> smartmatch .)
    LESSEQUAL       reduce using rule 20 (exp_4 -> smartmatch .)
    SMARTMATCH      reduce using rule 20 (exp_4 -> smartmatch .)
    AND_S           reduce using rule 20 (exp_4 -> smartmatch .)
    PONTO_VIRGULA   reduce using rule 20 (exp_4 -> smartmatch .)
    OR_S            reduce using rule 20 (exp_4 -> smartmatch .)
    XOR_S           reduce using rule 20 (exp_4 -> smartmatch .)
    RPAREN          reduce using rule 20 (exp_4 -> smartmatch .)
    ABRE_CHAVE      reduce using rule 20 (exp_4 -> smartmatch .)


state 59

    (21) exp_4 -> exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 21 (exp_4 -> exp_5 .)
    DIF             reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MENOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR_IGL       reduce using rule 21 (exp_4 -> exp_5 .)
    LESSEQUAL       reduce using rule 21 (exp_4 -> exp_5 .)
    SMARTMATCH      reduce using rule 21 (exp_4 -> exp_5 .)
    AND_S           reduce using rule 21 (exp_4 -> exp_5 .)
    PONTO_VIRGULA   reduce using rule 21 (exp_4 -> exp_5 .)
    OR_S            reduce using rule 21 (exp_4 -> exp_5 .)
    XOR_S           reduce using rule 21 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 21 (exp_4 -> exp_5 .)
    ABRE_CHAVE      reduce using rule 21 (exp_4 -> exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 60

    (29) exp_5 -> adicao .

    ADC             reduce using rule 29 (exp_5 -> adicao .)
    SUB             reduce using rule 29 (exp_5 -> adicao .)
    CONC            reduce using rule 29 (exp_5 -> adicao .)
    IGUAL_DP        reduce using rule 29 (exp_5 -> adicao .)
    DIF             reduce using rule 29 (exp_5 -> adicao .)
    MAIOR           reduce using rule 29 (exp_5 -> adicao .)
    MENOR           reduce using rule 29 (exp_5 -> adicao .)
    MAIOR_IGL       reduce using rule 29 (exp_5 -> adicao .)
    LESSEQUAL       reduce using rule 29 (exp_5 -> adicao .)
    SMARTMATCH      reduce using rule 29 (exp_5 -> adicao .)
    AND_S           reduce using rule 29 (exp_5 -> adicao .)
    PONTO_VIRGULA   reduce using rule 29 (exp_5 -> adicao .)
    OR_S            reduce using rule 29 (exp_5 -> adicao .)
    XOR_S           reduce using rule 29 (exp_5 -> adicao .)
    RPAREN          reduce using rule 29 (exp_5 -> adicao .)
    ABRE_CHAVE      reduce using rule 29 (exp_5 -> adicao .)


state 61

    (30) exp_5 -> subtracao .

    ADC             reduce using rule 30 (exp_5 -> subtracao .)
    SUB             reduce using rule 30 (exp_5 -> subtracao .)
    CONC            reduce using rule 30 (exp_5 -> subtracao .)
    IGUAL_DP        reduce using rule 30 (exp_5 -> subtracao .)
    DIF             reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR           reduce using rule 30 (exp_5 -> subtracao .)
    MENOR           reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR_IGL       reduce using rule 30 (exp_5 -> subtracao .)
    LESSEQUAL       reduce using rule 30 (exp_5 -> subtracao .)
    SMARTMATCH      reduce using rule 30 (exp_5 -> subtracao .)
    AND_S           reduce using rule 30 (exp_5 -> subtracao .)
    PONTO_VIRGULA   reduce using rule 30 (exp_5 -> subtracao .)
    OR_S            reduce using rule 30 (exp_5 -> subtracao .)
    XOR_S           reduce using rule 30 (exp_5 -> subtracao .)
    RPAREN          reduce using rule 30 (exp_5 -> subtracao .)
    ABRE_CHAVE      reduce using rule 30 (exp_5 -> subtracao .)


state 62

    (31) exp_5 -> conc .

    ADC             reduce using rule 31 (exp_5 -> conc .)
    SUB             reduce using rule 31 (exp_5 -> conc .)
    CONC            reduce using rule 31 (exp_5 -> conc .)
    IGUAL_DP        reduce using rule 31 (exp_5 -> conc .)
    DIF             reduce using rule 31 (exp_5 -> conc .)
    MAIOR           reduce using rule 31 (exp_5 -> conc .)
    MENOR           reduce using rule 31 (exp_5 -> conc .)
    MAIOR_IGL       reduce using rule 31 (exp_5 -> conc .)
    LESSEQUAL       reduce using rule 31 (exp_5 -> conc .)
    SMARTMATCH      reduce using rule 31 (exp_5 -> conc .)
    AND_S           reduce using rule 31 (exp_5 -> conc .)
    PONTO_VIRGULA   reduce using rule 31 (exp_5 -> conc .)
    OR_S            reduce using rule 31 (exp_5 -> conc .)
    XOR_S           reduce using rule 31 (exp_5 -> conc .)
    RPAREN          reduce using rule 31 (exp_5 -> conc .)
    ABRE_CHAVE      reduce using rule 31 (exp_5 -> conc .)


state 63

    (32) exp_5 -> exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 32 (exp_5 -> exp_6 .)
    SUB             reduce using rule 32 (exp_5 -> exp_6 .)
    CONC            reduce using rule 32 (exp_5 -> exp_6 .)
    IGUAL_DP        reduce using rule 32 (exp_5 -> exp_6 .)
    DIF             reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MENOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR_IGL       reduce using rule 32 (exp_5 -> exp_6 .)
    LESSEQUAL       reduce using rule 32 (exp_5 -> exp_6 .)
    SMARTMATCH      reduce using rule 32 (exp_5 -> exp_6 .)
    AND_S           reduce using rule 32 (exp_5 -> exp_6 .)
    PONTO_VIRGULA   reduce using rule 32 (exp_5 -> exp_6 .)
    OR_S            reduce using rule 32 (exp_5 -> exp_6 .)
    XOR_S           reduce using rule 32 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 32 (exp_5 -> exp_6 .)
    ABRE_CHAVE      reduce using rule 32 (exp_5 -> exp_6 .)
    MULT            shift and go to state 142
    DIVIDE          shift and go to state 143
    DIV             shift and go to state 144
    DIVI            shift and go to state 145
    MOD             shift and go to state 146
    LCM             shift and go to state 147
    GCD             shift and go to state 148


state 64

    (36) exp_6 -> mult .

    MULT            reduce using rule 36 (exp_6 -> mult .)
    DIVIDE          reduce using rule 36 (exp_6 -> mult .)
    DIV             reduce using rule 36 (exp_6 -> mult .)
    DIVI            reduce using rule 36 (exp_6 -> mult .)
    MOD             reduce using rule 36 (exp_6 -> mult .)
    LCM             reduce using rule 36 (exp_6 -> mult .)
    GCD             reduce using rule 36 (exp_6 -> mult .)
    ADC             reduce using rule 36 (exp_6 -> mult .)
    SUB             reduce using rule 36 (exp_6 -> mult .)
    CONC            reduce using rule 36 (exp_6 -> mult .)
    IGUAL_DP        reduce using rule 36 (exp_6 -> mult .)
    DIF             reduce using rule 36 (exp_6 -> mult .)
    MAIOR           reduce using rule 36 (exp_6 -> mult .)
    MENOR           reduce using rule 36 (exp_6 -> mult .)
    MAIOR_IGL       reduce using rule 36 (exp_6 -> mult .)
    LESSEQUAL       reduce using rule 36 (exp_6 -> mult .)
    SMARTMATCH      reduce using rule 36 (exp_6 -> mult .)
    AND_S           reduce using rule 36 (exp_6 -> mult .)
    PONTO_VIRGULA   reduce using rule 36 (exp_6 -> mult .)
    OR_S            reduce using rule 36 (exp_6 -> mult .)
    XOR_S           reduce using rule 36 (exp_6 -> mult .)
    RPAREN          reduce using rule 36 (exp_6 -> mult .)
    ABRE_CHAVE      reduce using rule 36 (exp_6 -> mult .)


state 65

    (37) exp_6 -> divide .

    MULT            reduce using rule 37 (exp_6 -> divide .)
    DIVIDE          reduce using rule 37 (exp_6 -> divide .)
    DIV             reduce using rule 37 (exp_6 -> divide .)
    DIVI            reduce using rule 37 (exp_6 -> divide .)
    MOD             reduce using rule 37 (exp_6 -> divide .)
    LCM             reduce using rule 37 (exp_6 -> divide .)
    GCD             reduce using rule 37 (exp_6 -> divide .)
    ADC             reduce using rule 37 (exp_6 -> divide .)
    SUB             reduce using rule 37 (exp_6 -> divide .)
    CONC            reduce using rule 37 (exp_6 -> divide .)
    IGUAL_DP        reduce using rule 37 (exp_6 -> divide .)
    DIF             reduce using rule 37 (exp_6 -> divide .)
    MAIOR           reduce using rule 37 (exp_6 -> divide .)
    MENOR           reduce using rule 37 (exp_6 -> divide .)
    MAIOR_IGL       reduce using rule 37 (exp_6 -> divide .)
    LESSEQUAL       reduce using rule 37 (exp_6 -> divide .)
    SMARTMATCH      reduce using rule 37 (exp_6 -> divide .)
    AND_S           reduce using rule 37 (exp_6 -> divide .)
    PONTO_VIRGULA   reduce using rule 37 (exp_6 -> divide .)
    OR_S            reduce using rule 37 (exp_6 -> divide .)
    XOR_S           reduce using rule 37 (exp_6 -> divide .)
    RPAREN          reduce using rule 37 (exp_6 -> divide .)
    ABRE_CHAVE      reduce using rule 37 (exp_6 -> divide .)


state 66

    (38) exp_6 -> div .

    MULT            reduce using rule 38 (exp_6 -> div .)
    DIVIDE          reduce using rule 38 (exp_6 -> div .)
    DIV             reduce using rule 38 (exp_6 -> div .)
    DIVI            reduce using rule 38 (exp_6 -> div .)
    MOD             reduce using rule 38 (exp_6 -> div .)
    LCM             reduce using rule 38 (exp_6 -> div .)
    GCD             reduce using rule 38 (exp_6 -> div .)
    ADC             reduce using rule 38 (exp_6 -> div .)
    SUB             reduce using rule 38 (exp_6 -> div .)
    CONC            reduce using rule 38 (exp_6 -> div .)
    IGUAL_DP        reduce using rule 38 (exp_6 -> div .)
    DIF             reduce using rule 38 (exp_6 -> div .)
    MAIOR           reduce using rule 38 (exp_6 -> div .)
    MENOR           reduce using rule 38 (exp_6 -> div .)
    MAIOR_IGL       reduce using rule 38 (exp_6 -> div .)
    LESSEQUAL       reduce using rule 38 (exp_6 -> div .)
    SMARTMATCH      reduce using rule 38 (exp_6 -> div .)
    AND_S           reduce using rule 38 (exp_6 -> div .)
    PONTO_VIRGULA   reduce using rule 38 (exp_6 -> div .)
    OR_S            reduce using rule 38 (exp_6 -> div .)
    XOR_S           reduce using rule 38 (exp_6 -> div .)
    RPAREN          reduce using rule 38 (exp_6 -> div .)
    ABRE_CHAVE      reduce using rule 38 (exp_6 -> div .)


state 67

    (39) exp_6 -> divi .

    MULT            reduce using rule 39 (exp_6 -> divi .)
    DIVIDE          reduce using rule 39 (exp_6 -> divi .)
    DIV             reduce using rule 39 (exp_6 -> divi .)
    DIVI            reduce using rule 39 (exp_6 -> divi .)
    MOD             reduce using rule 39 (exp_6 -> divi .)
    LCM             reduce using rule 39 (exp_6 -> divi .)
    GCD             reduce using rule 39 (exp_6 -> divi .)
    ADC             reduce using rule 39 (exp_6 -> divi .)
    SUB             reduce using rule 39 (exp_6 -> divi .)
    CONC            reduce using rule 39 (exp_6 -> divi .)
    IGUAL_DP        reduce using rule 39 (exp_6 -> divi .)
    DIF             reduce using rule 39 (exp_6 -> divi .)
    MAIOR           reduce using rule 39 (exp_6 -> divi .)
    MENOR           reduce using rule 39 (exp_6 -> divi .)
    MAIOR_IGL       reduce using rule 39 (exp_6 -> divi .)
    LESSEQUAL       reduce using rule 39 (exp_6 -> divi .)
    SMARTMATCH      reduce using rule 39 (exp_6 -> divi .)
    AND_S           reduce using rule 39 (exp_6 -> divi .)
    PONTO_VIRGULA   reduce using rule 39 (exp_6 -> divi .)
    OR_S            reduce using rule 39 (exp_6 -> divi .)
    XOR_S           reduce using rule 39 (exp_6 -> divi .)
    RPAREN          reduce using rule 39 (exp_6 -> divi .)
    ABRE_CHAVE      reduce using rule 39 (exp_6 -> divi .)


state 68

    (40) exp_6 -> mod .

    MULT            reduce using rule 40 (exp_6 -> mod .)
    DIVIDE          reduce using rule 40 (exp_6 -> mod .)
    DIV             reduce using rule 40 (exp_6 -> mod .)
    DIVI            reduce using rule 40 (exp_6 -> mod .)
    MOD             reduce using rule 40 (exp_6 -> mod .)
    LCM             reduce using rule 40 (exp_6 -> mod .)
    GCD             reduce using rule 40 (exp_6 -> mod .)
    ADC             reduce using rule 40 (exp_6 -> mod .)
    SUB             reduce using rule 40 (exp_6 -> mod .)
    CONC            reduce using rule 40 (exp_6 -> mod .)
    IGUAL_DP        reduce using rule 40 (exp_6 -> mod .)
    DIF             reduce using rule 40 (exp_6 -> mod .)
    MAIOR           reduce using rule 40 (exp_6 -> mod .)
    MENOR           reduce using rule 40 (exp_6 -> mod .)
    MAIOR_IGL       reduce using rule 40 (exp_6 -> mod .)
    LESSEQUAL       reduce using rule 40 (exp_6 -> mod .)
    SMARTMATCH      reduce using rule 40 (exp_6 -> mod .)
    AND_S           reduce using rule 40 (exp_6 -> mod .)
    PONTO_VIRGULA   reduce using rule 40 (exp_6 -> mod .)
    OR_S            reduce using rule 40 (exp_6 -> mod .)
    XOR_S           reduce using rule 40 (exp_6 -> mod .)
    RPAREN          reduce using rule 40 (exp_6 -> mod .)
    ABRE_CHAVE      reduce using rule 40 (exp_6 -> mod .)


state 69

    (41) exp_6 -> lcm .

    MULT            reduce using rule 41 (exp_6 -> lcm .)
    DIVIDE          reduce using rule 41 (exp_6 -> lcm .)
    DIV             reduce using rule 41 (exp_6 -> lcm .)
    DIVI            reduce using rule 41 (exp_6 -> lcm .)
    MOD             reduce using rule 41 (exp_6 -> lcm .)
    LCM             reduce using rule 41 (exp_6 -> lcm .)
    GCD             reduce using rule 41 (exp_6 -> lcm .)
    ADC             reduce using rule 41 (exp_6 -> lcm .)
    SUB             reduce using rule 41 (exp_6 -> lcm .)
    CONC            reduce using rule 41 (exp_6 -> lcm .)
    IGUAL_DP        reduce using rule 41 (exp_6 -> lcm .)
    DIF             reduce using rule 41 (exp_6 -> lcm .)
    MAIOR           reduce using rule 41 (exp_6 -> lcm .)
    MENOR           reduce using rule 41 (exp_6 -> lcm .)
    MAIOR_IGL       reduce using rule 41 (exp_6 -> lcm .)
    LESSEQUAL       reduce using rule 41 (exp_6 -> lcm .)
    SMARTMATCH      reduce using rule 41 (exp_6 -> lcm .)
    AND_S           reduce using rule 41 (exp_6 -> lcm .)
    PONTO_VIRGULA   reduce using rule 41 (exp_6 -> lcm .)
    OR_S            reduce using rule 41 (exp_6 -> lcm .)
    XOR_S           reduce using rule 41 (exp_6 -> lcm .)
    RPAREN          reduce using rule 41 (exp_6 -> lcm .)
    ABRE_CHAVE      reduce using rule 41 (exp_6 -> lcm .)


state 70

    (42) exp_6 -> gcd .

    MULT            reduce using rule 42 (exp_6 -> gcd .)
    DIVIDE          reduce using rule 42 (exp_6 -> gcd .)
    DIV             reduce using rule 42 (exp_6 -> gcd .)
    DIVI            reduce using rule 42 (exp_6 -> gcd .)
    MOD             reduce using rule 42 (exp_6 -> gcd .)
    LCM             reduce using rule 42 (exp_6 -> gcd .)
    GCD             reduce using rule 42 (exp_6 -> gcd .)
    ADC             reduce using rule 42 (exp_6 -> gcd .)
    SUB             reduce using rule 42 (exp_6 -> gcd .)
    CONC            reduce using rule 42 (exp_6 -> gcd .)
    IGUAL_DP        reduce using rule 42 (exp_6 -> gcd .)
    DIF             reduce using rule 42 (exp_6 -> gcd .)
    MAIOR           reduce using rule 42 (exp_6 -> gcd .)
    MENOR           reduce using rule 42 (exp_6 -> gcd .)
    MAIOR_IGL       reduce using rule 42 (exp_6 -> gcd .)
    LESSEQUAL       reduce using rule 42 (exp_6 -> gcd .)
    SMARTMATCH      reduce using rule 42 (exp_6 -> gcd .)
    AND_S           reduce using rule 42 (exp_6 -> gcd .)
    PONTO_VIRGULA   reduce using rule 42 (exp_6 -> gcd .)
    OR_S            reduce using rule 42 (exp_6 -> gcd .)
    XOR_S           reduce using rule 42 (exp_6 -> gcd .)
    RPAREN          reduce using rule 42 (exp_6 -> gcd .)
    ABRE_CHAVE      reduce using rule 42 (exp_6 -> gcd .)


state 71

    (43) exp_6 -> exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 43 (exp_6 -> exp_7 .)
    DIVIDE          reduce using rule 43 (exp_6 -> exp_7 .)
    DIV             reduce using rule 43 (exp_6 -> exp_7 .)
    DIVI            reduce using rule 43 (exp_6 -> exp_7 .)
    MOD             reduce using rule 43 (exp_6 -> exp_7 .)
    LCM             reduce using rule 43 (exp_6 -> exp_7 .)
    GCD             reduce using rule 43 (exp_6 -> exp_7 .)
    ADC             reduce using rule 43 (exp_6 -> exp_7 .)
    SUB             reduce using rule 43 (exp_6 -> exp_7 .)
    CONC            reduce using rule 43 (exp_6 -> exp_7 .)
    IGUAL_DP        reduce using rule 43 (exp_6 -> exp_7 .)
    DIF             reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MENOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR_IGL       reduce using rule 43 (exp_6 -> exp_7 .)
    LESSEQUAL       reduce using rule 43 (exp_6 -> exp_7 .)
    SMARTMATCH      reduce using rule 43 (exp_6 -> exp_7 .)
    AND_S           reduce using rule 43 (exp_6 -> exp_7 .)
    PONTO_VIRGULA   reduce using rule 43 (exp_6 -> exp_7 .)
    OR_S            reduce using rule 43 (exp_6 -> exp_7 .)
    XOR_S           reduce using rule 43 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 43 (exp_6 -> exp_7 .)
    ABRE_CHAVE      reduce using rule 43 (exp_6 -> exp_7 .)
    POW             shift and go to state 149


state 72

    (51) exp_7 -> pow .

    POW             reduce using rule 51 (exp_7 -> pow .)
    MULT            reduce using rule 51 (exp_7 -> pow .)
    DIVIDE          reduce using rule 51 (exp_7 -> pow .)
    DIV             reduce using rule 51 (exp_7 -> pow .)
    DIVI            reduce using rule 51 (exp_7 -> pow .)
    MOD             reduce using rule 51 (exp_7 -> pow .)
    LCM             reduce using rule 51 (exp_7 -> pow .)
    GCD             reduce using rule 51 (exp_7 -> pow .)
    ADC             reduce using rule 51 (exp_7 -> pow .)
    SUB             reduce using rule 51 (exp_7 -> pow .)
    CONC            reduce using rule 51 (exp_7 -> pow .)
    IGUAL_DP        reduce using rule 51 (exp_7 -> pow .)
    DIF             reduce using rule 51 (exp_7 -> pow .)
    MAIOR           reduce using rule 51 (exp_7 -> pow .)
    MENOR           reduce using rule 51 (exp_7 -> pow .)
    MAIOR_IGL       reduce using rule 51 (exp_7 -> pow .)
    LESSEQUAL       reduce using rule 51 (exp_7 -> pow .)
    SMARTMATCH      reduce using rule 51 (exp_7 -> pow .)
    AND_S           reduce using rule 51 (exp_7 -> pow .)
    PONTO_VIRGULA   reduce using rule 51 (exp_7 -> pow .)
    OR_S            reduce using rule 51 (exp_7 -> pow .)
    XOR_S           reduce using rule 51 (exp_7 -> pow .)
    RPAREN          reduce using rule 51 (exp_7 -> pow .)
    ABRE_CHAVE      reduce using rule 51 (exp_7 -> pow .)


state 73

    (52) exp_7 -> exp_8 .

    POW             reduce using rule 52 (exp_7 -> exp_8 .)
    MULT            reduce using rule 52 (exp_7 -> exp_8 .)
    DIVIDE          reduce using rule 52 (exp_7 -> exp_8 .)
    DIV             reduce using rule 52 (exp_7 -> exp_8 .)
    DIVI            reduce using rule 52 (exp_7 -> exp_8 .)
    MOD             reduce using rule 52 (exp_7 -> exp_8 .)
    LCM             reduce using rule 52 (exp_7 -> exp_8 .)
    GCD             reduce using rule 52 (exp_7 -> exp_8 .)
    ADC             reduce using rule 52 (exp_7 -> exp_8 .)
    SUB             reduce using rule 52 (exp_7 -> exp_8 .)
    CONC            reduce using rule 52 (exp_7 -> exp_8 .)
    IGUAL_DP        reduce using rule 52 (exp_7 -> exp_8 .)
    DIF             reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MENOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR_IGL       reduce using rule 52 (exp_7 -> exp_8 .)
    LESSEQUAL       reduce using rule 52 (exp_7 -> exp_8 .)
    SMARTMATCH      reduce using rule 52 (exp_7 -> exp_8 .)
    AND_S           reduce using rule 52 (exp_7 -> exp_8 .)
    PONTO_VIRGULA   reduce using rule 52 (exp_7 -> exp_8 .)
    OR_S            reduce using rule 52 (exp_7 -> exp_8 .)
    XOR_S           reduce using rule 52 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 52 (exp_7 -> exp_8 .)
    ABRE_CHAVE      reduce using rule 52 (exp_7 -> exp_8 .)


state 74

    (54) exp_8 -> not_op .

    POW             reduce using rule 54 (exp_8 -> not_op .)
    MULT            reduce using rule 54 (exp_8 -> not_op .)
    DIVIDE          reduce using rule 54 (exp_8 -> not_op .)
    DIV             reduce using rule 54 (exp_8 -> not_op .)
    DIVI            reduce using rule 54 (exp_8 -> not_op .)
    MOD             reduce using rule 54 (exp_8 -> not_op .)
    LCM             reduce using rule 54 (exp_8 -> not_op .)
    GCD             reduce using rule 54 (exp_8 -> not_op .)
    ADC             reduce using rule 54 (exp_8 -> not_op .)
    SUB             reduce using rule 54 (exp_8 -> not_op .)
    CONC            reduce using rule 54 (exp_8 -> not_op .)
    IGUAL_DP        reduce using rule 54 (exp_8 -> not_op .)
    DIF             reduce using rule 54 (exp_8 -> not_op .)
    MAIOR           reduce using rule 54 (exp_8 -> not_op .)
    MENOR           reduce using rule 54 (exp_8 -> not_op .)
    MAIOR_IGL       reduce using rule 54 (exp_8 -> not_op .)
    LESSEQUAL       reduce using rule 54 (exp_8 -> not_op .)
    SMARTMATCH      reduce using rule 54 (exp_8 -> not_op .)
    AND_S           reduce using rule 54 (exp_8 -> not_op .)
    PONTO_VIRGULA   reduce using rule 54 (exp_8 -> not_op .)
    OR_S            reduce using rule 54 (exp_8 -> not_op .)
    XOR_S           reduce using rule 54 (exp_8 -> not_op .)
    RPAREN          reduce using rule 54 (exp_8 -> not_op .)
    ABRE_CHAVE      reduce using rule 54 (exp_8 -> not_op .)


state 75

    (55) exp_8 -> not_s .

    POW             reduce using rule 55 (exp_8 -> not_s .)
    MULT            reduce using rule 55 (exp_8 -> not_s .)
    DIVIDE          reduce using rule 55 (exp_8 -> not_s .)
    DIV             reduce using rule 55 (exp_8 -> not_s .)
    DIVI            reduce using rule 55 (exp_8 -> not_s .)
    MOD             reduce using rule 55 (exp_8 -> not_s .)
    LCM             reduce using rule 55 (exp_8 -> not_s .)
    GCD             reduce using rule 55 (exp_8 -> not_s .)
    ADC             reduce using rule 55 (exp_8 -> not_s .)
    SUB             reduce using rule 55 (exp_8 -> not_s .)
    CONC            reduce using rule 55 (exp_8 -> not_s .)
    IGUAL_DP        reduce using rule 55 (exp_8 -> not_s .)
    DIF             reduce using rule 55 (exp_8 -> not_s .)
    MAIOR           reduce using rule 55 (exp_8 -> not_s .)
    MENOR           reduce using rule 55 (exp_8 -> not_s .)
    MAIOR_IGL       reduce using rule 55 (exp_8 -> not_s .)
    LESSEQUAL       reduce using rule 55 (exp_8 -> not_s .)
    SMARTMATCH      reduce using rule 55 (exp_8 -> not_s .)
    AND_S           reduce using rule 55 (exp_8 -> not_s .)
    PONTO_VIRGULA   reduce using rule 55 (exp_8 -> not_s .)
    OR_S            reduce using rule 55 (exp_8 -> not_s .)
    XOR_S           reduce using rule 55 (exp_8 -> not_s .)
    RPAREN          reduce using rule 55 (exp_8 -> not_s .)
    ABRE_CHAVE      reduce using rule 55 (exp_8 -> not_s .)


state 76

    (56) exp_8 -> exp_9 .

    POW             reduce using rule 56 (exp_8 -> exp_9 .)
    MULT            reduce using rule 56 (exp_8 -> exp_9 .)
    DIVIDE          reduce using rule 56 (exp_8 -> exp_9 .)
    DIV             reduce using rule 56 (exp_8 -> exp_9 .)
    DIVI            reduce using rule 56 (exp_8 -> exp_9 .)
    MOD             reduce using rule 56 (exp_8 -> exp_9 .)
    LCM             reduce using rule 56 (exp_8 -> exp_9 .)
    GCD             reduce using rule 56 (exp_8 -> exp_9 .)
    ADC             reduce using rule 56 (exp_8 -> exp_9 .)
    SUB             reduce using rule 56 (exp_8 -> exp_9 .)
    CONC            reduce using rule 56 (exp_8 -> exp_9 .)
    IGUAL_DP        reduce using rule 56 (exp_8 -> exp_9 .)
    DIF             reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MENOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR_IGL       reduce using rule 56 (exp_8 -> exp_9 .)
    LESSEQUAL       reduce using rule 56 (exp_8 -> exp_9 .)
    SMARTMATCH      reduce using rule 56 (exp_8 -> exp_9 .)
    AND_S           reduce using rule 56 (exp_8 -> exp_9 .)
    PONTO_VIRGULA   reduce using rule 56 (exp_8 -> exp_9 .)
    OR_S            reduce using rule 56 (exp_8 -> exp_9 .)
    XOR_S           reduce using rule 56 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 56 (exp_8 -> exp_9 .)
    ABRE_CHAVE      reduce using rule 56 (exp_8 -> exp_9 .)


state 77

    (57) not_op -> NOT . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_8                          shift and go to state 150
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 78

    (58) not_s -> NEGAC . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_8                          shift and go to state 151
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 79

    (59) exp_9 -> unario .

    POW             reduce using rule 59 (exp_9 -> unario .)
    MULT            reduce using rule 59 (exp_9 -> unario .)
    DIVIDE          reduce using rule 59 (exp_9 -> unario .)
    DIV             reduce using rule 59 (exp_9 -> unario .)
    DIVI            reduce using rule 59 (exp_9 -> unario .)
    MOD             reduce using rule 59 (exp_9 -> unario .)
    LCM             reduce using rule 59 (exp_9 -> unario .)
    GCD             reduce using rule 59 (exp_9 -> unario .)
    ADC             reduce using rule 59 (exp_9 -> unario .)
    SUB             reduce using rule 59 (exp_9 -> unario .)
    CONC            reduce using rule 59 (exp_9 -> unario .)
    IGUAL_DP        reduce using rule 59 (exp_9 -> unario .)
    DIF             reduce using rule 59 (exp_9 -> unario .)
    MAIOR           reduce using rule 59 (exp_9 -> unario .)
    MENOR           reduce using rule 59 (exp_9 -> unario .)
    MAIOR_IGL       reduce using rule 59 (exp_9 -> unario .)
    LESSEQUAL       reduce using rule 59 (exp_9 -> unario .)
    SMARTMATCH      reduce using rule 59 (exp_9 -> unario .)
    AND_S           reduce using rule 59 (exp_9 -> unario .)
    PONTO_VIRGULA   reduce using rule 59 (exp_9 -> unario .)
    OR_S            reduce using rule 59 (exp_9 -> unario .)
    XOR_S           reduce using rule 59 (exp_9 -> unario .)
    RPAREN          reduce using rule 59 (exp_9 -> unario .)
    ABRE_CHAVE      reduce using rule 59 (exp_9 -> unario .)


state 80

    (60) exp_9 -> operando .

    POW             reduce using rule 60 (exp_9 -> operando .)
    MULT            reduce using rule 60 (exp_9 -> operando .)
    DIVIDE          reduce using rule 60 (exp_9 -> operando .)
    DIV             reduce using rule 60 (exp_9 -> operando .)
    DIVI            reduce using rule 60 (exp_9 -> operando .)
    MOD             reduce using rule 60 (exp_9 -> operando .)
    LCM             reduce using rule 60 (exp_9 -> operando .)
    GCD             reduce using rule 60 (exp_9 -> operando .)
    ADC             reduce using rule 60 (exp_9 -> operando .)
    SUB             reduce using rule 60 (exp_9 -> operando .)
    CONC            reduce using rule 60 (exp_9 -> operando .)
    IGUAL_DP        reduce using rule 60 (exp_9 -> operando .)
    DIF             reduce using rule 60 (exp_9 -> operando .)
    MAIOR           reduce using rule 60 (exp_9 -> operando .)
    MENOR           reduce using rule 60 (exp_9 -> operando .)
    MAIOR_IGL       reduce using rule 60 (exp_9 -> operando .)
    LESSEQUAL       reduce using rule 60 (exp_9 -> operando .)
    SMARTMATCH      reduce using rule 60 (exp_9 -> operando .)
    AND_S           reduce using rule 60 (exp_9 -> operando .)
    PONTO_VIRGULA   reduce using rule 60 (exp_9 -> operando .)
    OR_S            reduce using rule 60 (exp_9 -> operando .)
    XOR_S           reduce using rule 60 (exp_9 -> operando .)
    RPAREN          reduce using rule 60 (exp_9 -> operando .)
    ABRE_CHAVE      reduce using rule 60 (exp_9 -> operando .)


state 81

    (61) unario -> prefixo_incremento .

    POW             reduce using rule 61 (unario -> prefixo_incremento .)
    MULT            reduce using rule 61 (unario -> prefixo_incremento .)
    DIVIDE          reduce using rule 61 (unario -> prefixo_incremento .)
    DIV             reduce using rule 61 (unario -> prefixo_incremento .)
    DIVI            reduce using rule 61 (unario -> prefixo_incremento .)
    MOD             reduce using rule 61 (unario -> prefixo_incremento .)
    LCM             reduce using rule 61 (unario -> prefixo_incremento .)
    GCD             reduce using rule 61 (unario -> prefixo_incremento .)
    ADC             reduce using rule 61 (unario -> prefixo_incremento .)
    SUB             reduce using rule 61 (unario -> prefixo_incremento .)
    CONC            reduce using rule 61 (unario -> prefixo_incremento .)
    IGUAL_DP        reduce using rule 61 (unario -> prefixo_incremento .)
    DIF             reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MENOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR_IGL       reduce using rule 61 (unario -> prefixo_incremento .)
    LESSEQUAL       reduce using rule 61 (unario -> prefixo_incremento .)
    SMARTMATCH      reduce using rule 61 (unario -> prefixo_incremento .)
    AND_S           reduce using rule 61 (unario -> prefixo_incremento .)
    PONTO_VIRGULA   reduce using rule 61 (unario -> prefixo_incremento .)
    OR_S            reduce using rule 61 (unario -> prefixo_incremento .)
    XOR_S           reduce using rule 61 (unario -> prefixo_incremento .)
    RPAREN          reduce using rule 61 (unario -> prefixo_incremento .)
    ABRE_CHAVE      reduce using rule 61 (unario -> prefixo_incremento .)


state 82

    (62) unario -> posfixo_incremento .

    POW             reduce using rule 62 (unario -> posfixo_incremento .)
    MULT            reduce using rule 62 (unario -> posfixo_incremento .)
    DIVIDE          reduce using rule 62 (unario -> posfixo_incremento .)
    DIV             reduce using rule 62 (unario -> posfixo_incremento .)
    DIVI            reduce using rule 62 (unario -> posfixo_incremento .)
    MOD             reduce using rule 62 (unario -> posfixo_incremento .)
    LCM             reduce using rule 62 (unario -> posfixo_incremento .)
    GCD             reduce using rule 62 (unario -> posfixo_incremento .)
    ADC             reduce using rule 62 (unario -> posfixo_incremento .)
    SUB             reduce using rule 62 (unario -> posfixo_incremento .)
    CONC            reduce using rule 62 (unario -> posfixo_incremento .)
    IGUAL_DP        reduce using rule 62 (unario -> posfixo_incremento .)
    DIF             reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MENOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR_IGL       reduce using rule 62 (unario -> posfixo_incremento .)
    LESSEQUAL       reduce using rule 62 (unario -> posfixo_incremento .)
    SMARTMATCH      reduce using rule 62 (unario -> posfixo_incremento .)
    AND_S           reduce using rule 62 (unario -> posfixo_incremento .)
    PONTO_VIRGULA   reduce using rule 62 (unario -> posfixo_incremento .)
    OR_S            reduce using rule 62 (unario -> posfixo_incremento .)
    XOR_S           reduce using rule 62 (unario -> posfixo_incremento .)
    RPAREN          reduce using rule 62 (unario -> posfixo_incremento .)
    ABRE_CHAVE      reduce using rule 62 (unario -> posfixo_incremento .)


state 83

    (63) unario -> prefixo_decremento .

    POW             reduce using rule 63 (unario -> prefixo_decremento .)
    MULT            reduce using rule 63 (unario -> prefixo_decremento .)
    DIVIDE          reduce using rule 63 (unario -> prefixo_decremento .)
    DIV             reduce using rule 63 (unario -> prefixo_decremento .)
    DIVI            reduce using rule 63 (unario -> prefixo_decremento .)
    MOD             reduce using rule 63 (unario -> prefixo_decremento .)
    LCM             reduce using rule 63 (unario -> prefixo_decremento .)
    GCD             reduce using rule 63 (unario -> prefixo_decremento .)
    ADC             reduce using rule 63 (unario -> prefixo_decremento .)
    SUB             reduce using rule 63 (unario -> prefixo_decremento .)
    CONC            reduce using rule 63 (unario -> prefixo_decremento .)
    IGUAL_DP        reduce using rule 63 (unario -> prefixo_decremento .)
    DIF             reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MENOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR_IGL       reduce using rule 63 (unario -> prefixo_decremento .)
    LESSEQUAL       reduce using rule 63 (unario -> prefixo_decremento .)
    SMARTMATCH      reduce using rule 63 (unario -> prefixo_decremento .)
    AND_S           reduce using rule 63 (unario -> prefixo_decremento .)
    PONTO_VIRGULA   reduce using rule 63 (unario -> prefixo_decremento .)
    OR_S            reduce using rule 63 (unario -> prefixo_decremento .)
    XOR_S           reduce using rule 63 (unario -> prefixo_decremento .)
    RPAREN          reduce using rule 63 (unario -> prefixo_decremento .)
    ABRE_CHAVE      reduce using rule 63 (unario -> prefixo_decremento .)


state 84

    (64) unario -> posfixo_decremento .

    POW             reduce using rule 64 (unario -> posfixo_decremento .)
    MULT            reduce using rule 64 (unario -> posfixo_decremento .)
    DIVIDE          reduce using rule 64 (unario -> posfixo_decremento .)
    DIV             reduce using rule 64 (unario -> posfixo_decremento .)
    DIVI            reduce using rule 64 (unario -> posfixo_decremento .)
    MOD             reduce using rule 64 (unario -> posfixo_decremento .)
    LCM             reduce using rule 64 (unario -> posfixo_decremento .)
    GCD             reduce using rule 64 (unario -> posfixo_decremento .)
    ADC             reduce using rule 64 (unario -> posfixo_decremento .)
    SUB             reduce using rule 64 (unario -> posfixo_decremento .)
    CONC            reduce using rule 64 (unario -> posfixo_decremento .)
    IGUAL_DP        reduce using rule 64 (unario -> posfixo_decremento .)
    DIF             reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MENOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR_IGL       reduce using rule 64 (unario -> posfixo_decremento .)
    LESSEQUAL       reduce using rule 64 (unario -> posfixo_decremento .)
    SMARTMATCH      reduce using rule 64 (unario -> posfixo_decremento .)
    AND_S           reduce using rule 64 (unario -> posfixo_decremento .)
    PONTO_VIRGULA   reduce using rule 64 (unario -> posfixo_decremento .)
    OR_S            reduce using rule 64 (unario -> posfixo_decremento .)
    XOR_S           reduce using rule 64 (unario -> posfixo_decremento .)
    RPAREN          reduce using rule 64 (unario -> posfixo_decremento .)
    ABRE_CHAVE      reduce using rule 64 (unario -> posfixo_decremento .)


state 85

    (69) operando -> parenteses .

    POW             reduce using rule 69 (operando -> parenteses .)
    MULT            reduce using rule 69 (operando -> parenteses .)
    DIVIDE          reduce using rule 69 (operando -> parenteses .)
    DIV             reduce using rule 69 (operando -> parenteses .)
    DIVI            reduce using rule 69 (operando -> parenteses .)
    MOD             reduce using rule 69 (operando -> parenteses .)
    LCM             reduce using rule 69 (operando -> parenteses .)
    GCD             reduce using rule 69 (operando -> parenteses .)
    ADC             reduce using rule 69 (operando -> parenteses .)
    SUB             reduce using rule 69 (operando -> parenteses .)
    CONC            reduce using rule 69 (operando -> parenteses .)
    IGUAL_DP        reduce using rule 69 (operando -> parenteses .)
    DIF             reduce using rule 69 (operando -> parenteses .)
    MAIOR           reduce using rule 69 (operando -> parenteses .)
    MENOR           reduce using rule 69 (operando -> parenteses .)
    MAIOR_IGL       reduce using rule 69 (operando -> parenteses .)
    LESSEQUAL       reduce using rule 69 (operando -> parenteses .)
    SMARTMATCH      reduce using rule 69 (operando -> parenteses .)
    AND_S           reduce using rule 69 (operando -> parenteses .)
    PONTO_VIRGULA   reduce using rule 69 (operando -> parenteses .)
    OR_S            reduce using rule 69 (operando -> parenteses .)
    XOR_S           reduce using rule 69 (operando -> parenteses .)
    RPAREN          reduce using rule 69 (operando -> parenteses .)
    ABRE_CHAVE      reduce using rule 69 (operando -> parenteses .)


state 86

    (70) operando -> completo .

    POW             reduce using rule 70 (operando -> completo .)
    MULT            reduce using rule 70 (operando -> completo .)
    DIVIDE          reduce using rule 70 (operando -> completo .)
    DIV             reduce using rule 70 (operando -> completo .)
    DIVI            reduce using rule 70 (operando -> completo .)
    MOD             reduce using rule 70 (operando -> completo .)
    LCM             reduce using rule 70 (operando -> completo .)
    GCD             reduce using rule 70 (operando -> completo .)
    ADC             reduce using rule 70 (operando -> completo .)
    SUB             reduce using rule 70 (operando -> completo .)
    CONC            reduce using rule 70 (operando -> completo .)
    IGUAL_DP        reduce using rule 70 (operando -> completo .)
    DIF             reduce using rule 70 (operando -> completo .)
    MAIOR           reduce using rule 70 (operando -> completo .)
    MENOR           reduce using rule 70 (operando -> completo .)
    MAIOR_IGL       reduce using rule 70 (operando -> completo .)
    LESSEQUAL       reduce using rule 70 (operando -> completo .)
    SMARTMATCH      reduce using rule 70 (operando -> completo .)
    AND_S           reduce using rule 70 (operando -> completo .)
    PONTO_VIRGULA   reduce using rule 70 (operando -> completo .)
    OR_S            reduce using rule 70 (operando -> completo .)
    XOR_S           reduce using rule 70 (operando -> completo .)
    RPAREN          reduce using rule 70 (operando -> completo .)
    ABRE_CHAVE      reduce using rule 70 (operando -> completo .)


state 87

    (65) prefixo_incremento -> ADC_DP . ID

    ID              shift and go to state 152


state 88

    (67) prefixo_decremento -> DECREMENTO . ID

    ID              shift and go to state 153


state 89

    (72) completo -> tipo .

    POW             reduce using rule 72 (completo -> tipo .)
    MULT            reduce using rule 72 (completo -> tipo .)
    DIVIDE          reduce using rule 72 (completo -> tipo .)
    DIV             reduce using rule 72 (completo -> tipo .)
    DIVI            reduce using rule 72 (completo -> tipo .)
    MOD             reduce using rule 72 (completo -> tipo .)
    LCM             reduce using rule 72 (completo -> tipo .)
    GCD             reduce using rule 72 (completo -> tipo .)
    ADC             reduce using rule 72 (completo -> tipo .)
    SUB             reduce using rule 72 (completo -> tipo .)
    CONC            reduce using rule 72 (completo -> tipo .)
    IGUAL_DP        reduce using rule 72 (completo -> tipo .)
    DIF             reduce using rule 72 (completo -> tipo .)
    MAIOR           reduce using rule 72 (completo -> tipo .)
    MENOR           reduce using rule 72 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 72 (completo -> tipo .)
    LESSEQUAL       reduce using rule 72 (completo -> tipo .)
    SMARTMATCH      reduce using rule 72 (completo -> tipo .)
    AND_S           reduce using rule 72 (completo -> tipo .)
    PONTO_VIRGULA   reduce using rule 72 (completo -> tipo .)
    OR_S            reduce using rule 72 (completo -> tipo .)
    XOR_S           reduce using rule 72 (completo -> tipo .)
    RPAREN          reduce using rule 72 (completo -> tipo .)
    ABRE_CHAVE      reduce using rule 72 (completo -> tipo .)
    COMMA           reduce using rule 72 (completo -> tipo .)


state 90

    (73) completo -> escalar .

    POW             reduce using rule 73 (completo -> escalar .)
    MULT            reduce using rule 73 (completo -> escalar .)
    DIVIDE          reduce using rule 73 (completo -> escalar .)
    DIV             reduce using rule 73 (completo -> escalar .)
    DIVI            reduce using rule 73 (completo -> escalar .)
    MOD             reduce using rule 73 (completo -> escalar .)
    LCM             reduce using rule 73 (completo -> escalar .)
    GCD             reduce using rule 73 (completo -> escalar .)
    ADC             reduce using rule 73 (completo -> escalar .)
    SUB             reduce using rule 73 (completo -> escalar .)
    CONC            reduce using rule 73 (completo -> escalar .)
    IGUAL_DP        reduce using rule 73 (completo -> escalar .)
    DIF             reduce using rule 73 (completo -> escalar .)
    MAIOR           reduce using rule 73 (completo -> escalar .)
    MENOR           reduce using rule 73 (completo -> escalar .)
    MAIOR_IGL       reduce using rule 73 (completo -> escalar .)
    LESSEQUAL       reduce using rule 73 (completo -> escalar .)
    SMARTMATCH      reduce using rule 73 (completo -> escalar .)
    AND_S           reduce using rule 73 (completo -> escalar .)
    PONTO_VIRGULA   reduce using rule 73 (completo -> escalar .)
    OR_S            reduce using rule 73 (completo -> escalar .)
    XOR_S           reduce using rule 73 (completo -> escalar .)
    RPAREN          reduce using rule 73 (completo -> escalar .)
    ABRE_CHAVE      reduce using rule 73 (completo -> escalar .)
    COMMA           reduce using rule 73 (completo -> escalar .)


state 91

    (75) tipo -> float .

    POW             reduce using rule 75 (tipo -> float .)
    MULT            reduce using rule 75 (tipo -> float .)
    DIVIDE          reduce using rule 75 (tipo -> float .)
    DIV             reduce using rule 75 (tipo -> float .)
    DIVI            reduce using rule 75 (tipo -> float .)
    MOD             reduce using rule 75 (tipo -> float .)
    LCM             reduce using rule 75 (tipo -> float .)
    GCD             reduce using rule 75 (tipo -> float .)
    ADC             reduce using rule 75 (tipo -> float .)
    SUB             reduce using rule 75 (tipo -> float .)
    CONC            reduce using rule 75 (tipo -> float .)
    IGUAL_DP        reduce using rule 75 (tipo -> float .)
    DIF             reduce using rule 75 (tipo -> float .)
    MAIOR           reduce using rule 75 (tipo -> float .)
    MENOR           reduce using rule 75 (tipo -> float .)
    MAIOR_IGL       reduce using rule 75 (tipo -> float .)
    LESSEQUAL       reduce using rule 75 (tipo -> float .)
    SMARTMATCH      reduce using rule 75 (tipo -> float .)
    AND_S           reduce using rule 75 (tipo -> float .)
    PONTO_VIRGULA   reduce using rule 75 (tipo -> float .)
    OR_S            reduce using rule 75 (tipo -> float .)
    XOR_S           reduce using rule 75 (tipo -> float .)
    RPAREN          reduce using rule 75 (tipo -> float .)
    ABRE_CHAVE      reduce using rule 75 (tipo -> float .)
    COMMA           reduce using rule 75 (tipo -> float .)


state 92

    (76) tipo -> string .

    POW             reduce using rule 76 (tipo -> string .)
    MULT            reduce using rule 76 (tipo -> string .)
    DIVIDE          reduce using rule 76 (tipo -> string .)
    DIV             reduce using rule 76 (tipo -> string .)
    DIVI            reduce using rule 76 (tipo -> string .)
    MOD             reduce using rule 76 (tipo -> string .)
    LCM             reduce using rule 76 (tipo -> string .)
    GCD             reduce using rule 76 (tipo -> string .)
    ADC             reduce using rule 76 (tipo -> string .)
    SUB             reduce using rule 76 (tipo -> string .)
    CONC            reduce using rule 76 (tipo -> string .)
    IGUAL_DP        reduce using rule 76 (tipo -> string .)
    DIF             reduce using rule 76 (tipo -> string .)
    MAIOR           reduce using rule 76 (tipo -> string .)
    MENOR           reduce using rule 76 (tipo -> string .)
    MAIOR_IGL       reduce using rule 76 (tipo -> string .)
    LESSEQUAL       reduce using rule 76 (tipo -> string .)
    SMARTMATCH      reduce using rule 76 (tipo -> string .)
    AND_S           reduce using rule 76 (tipo -> string .)
    PONTO_VIRGULA   reduce using rule 76 (tipo -> string .)
    OR_S            reduce using rule 76 (tipo -> string .)
    XOR_S           reduce using rule 76 (tipo -> string .)
    RPAREN          reduce using rule 76 (tipo -> string .)
    ABRE_CHAVE      reduce using rule 76 (tipo -> string .)
    COMMA           reduce using rule 76 (tipo -> string .)


state 93

    (77) tipo -> boolean .

    POW             reduce using rule 77 (tipo -> boolean .)
    MULT            reduce using rule 77 (tipo -> boolean .)
    DIVIDE          reduce using rule 77 (tipo -> boolean .)
    DIV             reduce using rule 77 (tipo -> boolean .)
    DIVI            reduce using rule 77 (tipo -> boolean .)
    MOD             reduce using rule 77 (tipo -> boolean .)
    LCM             reduce using rule 77 (tipo -> boolean .)
    GCD             reduce using rule 77 (tipo -> boolean .)
    ADC             reduce using rule 77 (tipo -> boolean .)
    SUB             reduce using rule 77 (tipo -> boolean .)
    CONC            reduce using rule 77 (tipo -> boolean .)
    IGUAL_DP        reduce using rule 77 (tipo -> boolean .)
    DIF             reduce using rule 77 (tipo -> boolean .)
    MAIOR           reduce using rule 77 (tipo -> boolean .)
    MENOR           reduce using rule 77 (tipo -> boolean .)
    MAIOR_IGL       reduce using rule 77 (tipo -> boolean .)
    LESSEQUAL       reduce using rule 77 (tipo -> boolean .)
    SMARTMATCH      reduce using rule 77 (tipo -> boolean .)
    AND_S           reduce using rule 77 (tipo -> boolean .)
    PONTO_VIRGULA   reduce using rule 77 (tipo -> boolean .)
    OR_S            reduce using rule 77 (tipo -> boolean .)
    XOR_S           reduce using rule 77 (tipo -> boolean .)
    RPAREN          reduce using rule 77 (tipo -> boolean .)
    ABRE_CHAVE      reduce using rule 77 (tipo -> boolean .)
    COMMA           reduce using rule 77 (tipo -> boolean .)


state 94

    (84) float -> FLOAT .

    POW             reduce using rule 84 (float -> FLOAT .)
    MULT            reduce using rule 84 (float -> FLOAT .)
    DIVIDE          reduce using rule 84 (float -> FLOAT .)
    DIV             reduce using rule 84 (float -> FLOAT .)
    DIVI            reduce using rule 84 (float -> FLOAT .)
    MOD             reduce using rule 84 (float -> FLOAT .)
    LCM             reduce using rule 84 (float -> FLOAT .)
    GCD             reduce using rule 84 (float -> FLOAT .)
    ADC             reduce using rule 84 (float -> FLOAT .)
    SUB             reduce using rule 84 (float -> FLOAT .)
    CONC            reduce using rule 84 (float -> FLOAT .)
    IGUAL_DP        reduce using rule 84 (float -> FLOAT .)
    DIF             reduce using rule 84 (float -> FLOAT .)
    MAIOR           reduce using rule 84 (float -> FLOAT .)
    MENOR           reduce using rule 84 (float -> FLOAT .)
    MAIOR_IGL       reduce using rule 84 (float -> FLOAT .)
    LESSEQUAL       reduce using rule 84 (float -> FLOAT .)
    SMARTMATCH      reduce using rule 84 (float -> FLOAT .)
    AND_S           reduce using rule 84 (float -> FLOAT .)
    PONTO_VIRGULA   reduce using rule 84 (float -> FLOAT .)
    OR_S            reduce using rule 84 (float -> FLOAT .)
    XOR_S           reduce using rule 84 (float -> FLOAT .)
    RPAREN          reduce using rule 84 (float -> FLOAT .)
    ABRE_CHAVE      reduce using rule 84 (float -> FLOAT .)
    COMMA           reduce using rule 84 (float -> FLOAT .)


state 95

    (85) string -> STRING .

    POW             reduce using rule 85 (string -> STRING .)
    MULT            reduce using rule 85 (string -> STRING .)
    DIVIDE          reduce using rule 85 (string -> STRING .)
    DIV             reduce using rule 85 (string -> STRING .)
    DIVI            reduce using rule 85 (string -> STRING .)
    MOD             reduce using rule 85 (string -> STRING .)
    LCM             reduce using rule 85 (string -> STRING .)
    GCD             reduce using rule 85 (string -> STRING .)
    ADC             reduce using rule 85 (string -> STRING .)
    SUB             reduce using rule 85 (string -> STRING .)
    CONC            reduce using rule 85 (string -> STRING .)
    IGUAL_DP        reduce using rule 85 (string -> STRING .)
    DIF             reduce using rule 85 (string -> STRING .)
    MAIOR           reduce using rule 85 (string -> STRING .)
    MENOR           reduce using rule 85 (string -> STRING .)
    MAIOR_IGL       reduce using rule 85 (string -> STRING .)
    LESSEQUAL       reduce using rule 85 (string -> STRING .)
    SMARTMATCH      reduce using rule 85 (string -> STRING .)
    AND_S           reduce using rule 85 (string -> STRING .)
    PONTO_VIRGULA   reduce using rule 85 (string -> STRING .)
    OR_S            reduce using rule 85 (string -> STRING .)
    XOR_S           reduce using rule 85 (string -> STRING .)
    RPAREN          reduce using rule 85 (string -> STRING .)
    ABRE_CHAVE      reduce using rule 85 (string -> STRING .)
    COMMA           reduce using rule 85 (string -> STRING .)


state 96

    (86) boolean -> BOOLEAN .

    POW             reduce using rule 86 (boolean -> BOOLEAN .)
    MULT            reduce using rule 86 (boolean -> BOOLEAN .)
    DIVIDE          reduce using rule 86 (boolean -> BOOLEAN .)
    DIV             reduce using rule 86 (boolean -> BOOLEAN .)
    DIVI            reduce using rule 86 (boolean -> BOOLEAN .)
    MOD             reduce using rule 86 (boolean -> BOOLEAN .)
    LCM             reduce using rule 86 (boolean -> BOOLEAN .)
    GCD             reduce using rule 86 (boolean -> BOOLEAN .)
    ADC             reduce using rule 86 (boolean -> BOOLEAN .)
    SUB             reduce using rule 86 (boolean -> BOOLEAN .)
    CONC            reduce using rule 86 (boolean -> BOOLEAN .)
    IGUAL_DP        reduce using rule 86 (boolean -> BOOLEAN .)
    DIF             reduce using rule 86 (boolean -> BOOLEAN .)
    MAIOR           reduce using rule 86 (boolean -> BOOLEAN .)
    MENOR           reduce using rule 86 (boolean -> BOOLEAN .)
    MAIOR_IGL       reduce using rule 86 (boolean -> BOOLEAN .)
    LESSEQUAL       reduce using rule 86 (boolean -> BOOLEAN .)
    SMARTMATCH      reduce using rule 86 (boolean -> BOOLEAN .)
    AND_S           reduce using rule 86 (boolean -> BOOLEAN .)
    PONTO_VIRGULA   reduce using rule 86 (boolean -> BOOLEAN .)
    OR_S            reduce using rule 86 (boolean -> BOOLEAN .)
    XOR_S           reduce using rule 86 (boolean -> BOOLEAN .)
    RPAREN          reduce using rule 86 (boolean -> BOOLEAN .)
    ABRE_CHAVE      reduce using rule 86 (boolean -> BOOLEAN .)
    COMMA           reduce using rule 86 (boolean -> BOOLEAN .)


state 97

    (2) lista_declaracoes -> lista_declaracoes declaracoes .

    SAY             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    MY              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    OUR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LIST            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FUNCTION        reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ESCALAR         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ID              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    IF              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LOOP            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FOR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    INTEGER         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    WHILE           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ABRE_CHAVE      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NOT             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEGAC           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ADC_DP          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    DECREMENTO      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LPAREN          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FLOAT           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STRING          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    BOOLEAN         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    $end            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FECHA_CHAVE     reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)


state 98

    (133) declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .

    SAY             reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    MY              reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    OUR             reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LIST            reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FUNCTION        reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LOOP            reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INTEGER         reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NOT             reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEGAC           reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LPAREN          reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FLOAT           reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    $end            reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 133 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)


state 99

    (102) say -> SAY exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 154
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 100

    (66) posfixo_incremento -> ID . ADC_DP
    (68) posfixo_decremento -> ID . DECREMENTO

    ADC_DP          shift and go to state 120
    DECREMENTO      shift and go to state 121


state 101

    (87) escalar -> ESCALAR .

    POW             reduce using rule 87 (escalar -> ESCALAR .)
    MULT            reduce using rule 87 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 87 (escalar -> ESCALAR .)
    DIV             reduce using rule 87 (escalar -> ESCALAR .)
    DIVI            reduce using rule 87 (escalar -> ESCALAR .)
    MOD             reduce using rule 87 (escalar -> ESCALAR .)
    LCM             reduce using rule 87 (escalar -> ESCALAR .)
    GCD             reduce using rule 87 (escalar -> ESCALAR .)
    ADC             reduce using rule 87 (escalar -> ESCALAR .)
    SUB             reduce using rule 87 (escalar -> ESCALAR .)
    CONC            reduce using rule 87 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 87 (escalar -> ESCALAR .)
    DIF             reduce using rule 87 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 87 (escalar -> ESCALAR .)
    MENOR           reduce using rule 87 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 87 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 87 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 87 (escalar -> ESCALAR .)
    AND_S           reduce using rule 87 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 87 (escalar -> ESCALAR .)
    OR_S            reduce using rule 87 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 87 (escalar -> ESCALAR .)
    RPAREN          reduce using rule 87 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 87 (escalar -> ESCALAR .)
    COMMA           reduce using rule 87 (escalar -> ESCALAR .)


state 102

    (83) inteiro -> INTEGER .

    POW             reduce using rule 83 (inteiro -> INTEGER .)
    MULT            reduce using rule 83 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 83 (inteiro -> INTEGER .)
    DIV             reduce using rule 83 (inteiro -> INTEGER .)
    DIVI            reduce using rule 83 (inteiro -> INTEGER .)
    MOD             reduce using rule 83 (inteiro -> INTEGER .)
    LCM             reduce using rule 83 (inteiro -> INTEGER .)
    GCD             reduce using rule 83 (inteiro -> INTEGER .)
    ADC             reduce using rule 83 (inteiro -> INTEGER .)
    SUB             reduce using rule 83 (inteiro -> INTEGER .)
    CONC            reduce using rule 83 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 83 (inteiro -> INTEGER .)
    DIF             reduce using rule 83 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 83 (inteiro -> INTEGER .)
    MENOR           reduce using rule 83 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 83 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 83 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 83 (inteiro -> INTEGER .)
    AND_S           reduce using rule 83 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 83 (inteiro -> INTEGER .)
    OR_S            reduce using rule 83 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 83 (inteiro -> INTEGER .)
    RPAREN          reduce using rule 83 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 83 (inteiro -> INTEGER .)
    INTERPOLACAO    reduce using rule 83 (inteiro -> INTEGER .)
    COMMA           reduce using rule 83 (inteiro -> INTEGER .)
    SETA            reduce using rule 83 (inteiro -> INTEGER .)


state 103

    (145) declaracao_de_expressao -> exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 145 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)


state 104

    (9) or -> exp_2 OR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_3                          shift and go to state 155
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 105

    (10) xor -> exp_2 XOR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_3                          shift and go to state 156
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 106

    (136) declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .

    SAY             reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    MY              reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    OUR             reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LIST            reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FUNCTION        reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ID              reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    IF              reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LOOP            reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FOR             reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    INTEGER         reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    WHILE           reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NOT             reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEGAC           reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LPAREN          reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FLOAT           reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    STRING          reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    $end            reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 136 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)


state 107

    (137) declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .

    SAY             reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    MY              reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    OUR             reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LIST            reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FUNCTION        reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ESCALAR         reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ID              reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    IF              reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LOOP            reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FOR             reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    INTEGER         reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    WHILE           reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NOT             reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NEGAC           reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ADC_DP          reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LPAREN          reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FLOAT           reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    STRING          reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    $end            reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 137 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)


state 108

    (88) declaracao_escalar_MY -> MY tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 157


state 109

    (91) declaracao_lista_MY -> MY LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 158


state 110

    (78) tipo_opicional -> tipo_opicional_int .

    ESCALAR         reduce using rule 78 (tipo_opicional -> tipo_opicional_int .)


state 111

    (79) tipo_opicional -> STR .

    ESCALAR         reduce using rule 79 (tipo_opicional -> STR .)


state 112

    (80) tipo_opicional -> empty .

    ESCALAR         reduce using rule 80 (tipo_opicional -> empty .)


state 113

    (81) tipo_opicional_int -> INT .

    ESCALAR         reduce using rule 81 (tipo_opicional_int -> INT .)


state 114

    (107) atribuicao -> ESCALAR IGUAL . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 159
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 115

    (89) declaracao_escalar_OUR -> OUR tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 160


state 116

    (92) declaracao_lista_OUR -> OUR LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 161


state 117

    (90) declaracao_lista -> LIST IGUAL . lista_valores PONTO_VIRGULA
    (93) lista_valores -> . lista_valores COMMA tipo
    (94) lista_valores -> . lista_valores_base
    (95) lista_valores_base -> . tipo
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_valores                  shift and go to state 162
    tipo                           shift and go to state 163
    lista_valores_base             shift and go to state 164
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 118

    (103) funcao_com_params -> FUNCTION ID . LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> FUNCTION ID . LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    LPAREN          shift and go to state 165


state 119

    (108) chamada_funcao -> ID LPAREN . chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> ID LPAREN . RPAREN
    (110) chamada_funcao_auxiliar -> . chamada_funcao_auxiliar COMMA completo
    (111) chamada_funcao_auxiliar -> . completo
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    RPAREN          shift and go to state 167
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    chamada_funcao_auxiliar        shift and go to state 166
    completo                       shift and go to state 168
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 120

    (66) posfixo_incremento -> ID ADC_DP .

    POW             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    MULT            reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    DIVIDE          reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    DIV             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    DIVI            reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    MOD             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    LCM             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    GCD             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    ADC             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    SUB             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    CONC            reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    IGUAL_DP        reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    DIF             reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    MAIOR           reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    MENOR           reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    MAIOR_IGL       reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    LESSEQUAL       reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    SMARTMATCH      reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    AND_S           reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    PONTO_VIRGULA   reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    OR_S            reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    XOR_S           reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    RPAREN          reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)
    ABRE_CHAVE      reduce using rule 66 (posfixo_incremento -> ID ADC_DP .)


state 121

    (68) posfixo_decremento -> ID DECREMENTO .

    POW             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    MULT            reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    DIVIDE          reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    DIV             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    DIVI            reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    MOD             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    LCM             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    GCD             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    ADC             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    SUB             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    CONC            reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    IGUAL_DP        reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    DIF             reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR           reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    MENOR           reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR_IGL       reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    LESSEQUAL       reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    SMARTMATCH      reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    AND_S           reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    PONTO_VIRGULA   reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    OR_S            reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    XOR_S           reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    RPAREN          reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)
    ABRE_CHAVE      reduce using rule 68 (posfixo_decremento -> ID DECREMENTO .)


state 122

    (71) parenteses -> LPAREN exp_2 . RPAREN
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          shift and go to state 169
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 123

    (118) bloco -> ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 170
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 124

    (112) condicional -> IF exp_2 . bloco
    (113) condicional -> IF exp_2 . bloco ELSE bloco
    (114) condicional -> IF exp_2 . bloco lista_elsif
    (115) condicional -> IF exp_2 . bloco lista_elsif ELSE bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105
    ABRE_CHAVE      shift and go to state 40

    bloco                          shift and go to state 171

state 125

    (100) loop -> LOOP LPAREN . declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA

    MY              shift and go to state 173

    declaracao_escalar_MY          shift and go to state 172

state 126

    (101) loop_sem_condicao -> LOOP ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes              shift and go to state 174
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 127

    (96) loop_for -> FOR inteiro . INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    INTERPOLACAO    shift and go to state 175


state 128

    (97) loop_for_com_lista -> FOR LIST . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 176


state 129

    (98) loop_times -> INTEGER TIMES . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 177


state 130

    (99) loop_while -> WHILE exp_2 . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    ABRE_CHAVE      shift and go to state 178
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 131

    (13) and -> exp_3 AND_S . exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_4                          shift and go to state 179
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 132

    (22) igual_dp -> exp_4 IGUAL_DP . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 180
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 133

    (23) dif -> exp_4 DIF . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 181
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 134

    (24) maior -> exp_4 MAIOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 182
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 135

    (25) menor -> exp_4 MENOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 183
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 136

    (26) maior_igual -> exp_4 MAIOR_IGL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 184
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 137

    (27) menor_igual -> exp_4 LESSEQUAL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 185
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 138

    (28) smartmatch -> exp_4 SMARTMATCH . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_5                          shift and go to state 186
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 139

    (33) adicao -> exp_5 ADC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_6                          shift and go to state 187
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 140

    (34) subtracao -> exp_5 SUB . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_6                          shift and go to state 188
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 141

    (35) conc -> exp_5 CONC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_6                          shift and go to state 189
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 142

    (44) mult -> exp_6 MULT . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 190
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 143

    (45) divide -> exp_6 DIVIDE . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 191
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 144

    (46) div -> exp_6 DIV . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 192
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 145

    (47) divi -> exp_6 DIVI . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 193
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 146

    (48) mod -> exp_6 MOD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 194
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 147

    (49) lcm -> exp_6 LCM . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 195
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 148

    (50) gcd -> exp_6 GCD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_7                          shift and go to state 196
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 149

    (53) pow -> exp_7 POW . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_8                          shift and go to state 197
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 150

    (57) not_op -> NOT exp_8 .

    POW             reduce using rule 57 (not_op -> NOT exp_8 .)
    MULT            reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVIDE          reduce using rule 57 (not_op -> NOT exp_8 .)
    DIV             reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVI            reduce using rule 57 (not_op -> NOT exp_8 .)
    MOD             reduce using rule 57 (not_op -> NOT exp_8 .)
    LCM             reduce using rule 57 (not_op -> NOT exp_8 .)
    GCD             reduce using rule 57 (not_op -> NOT exp_8 .)
    ADC             reduce using rule 57 (not_op -> NOT exp_8 .)
    SUB             reduce using rule 57 (not_op -> NOT exp_8 .)
    CONC            reduce using rule 57 (not_op -> NOT exp_8 .)
    IGUAL_DP        reduce using rule 57 (not_op -> NOT exp_8 .)
    DIF             reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MENOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR_IGL       reduce using rule 57 (not_op -> NOT exp_8 .)
    LESSEQUAL       reduce using rule 57 (not_op -> NOT exp_8 .)
    SMARTMATCH      reduce using rule 57 (not_op -> NOT exp_8 .)
    AND_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    PONTO_VIRGULA   reduce using rule 57 (not_op -> NOT exp_8 .)
    OR_S            reduce using rule 57 (not_op -> NOT exp_8 .)
    XOR_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    RPAREN          reduce using rule 57 (not_op -> NOT exp_8 .)
    ABRE_CHAVE      reduce using rule 57 (not_op -> NOT exp_8 .)


state 151

    (58) not_s -> NEGAC exp_8 .

    POW             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MULT            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVIDE          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIV             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVI            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MOD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LCM             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    GCD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ADC             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SUB             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    CONC            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    IGUAL_DP        reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIF             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MENOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR_IGL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LESSEQUAL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SMARTMATCH      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    AND_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    PONTO_VIRGULA   reduce using rule 58 (not_s -> NEGAC exp_8 .)
    OR_S            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    XOR_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    RPAREN          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ABRE_CHAVE      reduce using rule 58 (not_s -> NEGAC exp_8 .)


state 152

    (65) prefixo_incremento -> ADC_DP ID .

    POW             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    MULT            reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    DIVIDE          reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    DIV             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    DIVI            reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    MOD             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    LCM             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    GCD             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    ADC             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    SUB             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    CONC            reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    IGUAL_DP        reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    DIF             reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    MAIOR           reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    MENOR           reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    MAIOR_IGL       reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    LESSEQUAL       reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    SMARTMATCH      reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    AND_S           reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    PONTO_VIRGULA   reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    OR_S            reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    XOR_S           reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    RPAREN          reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)
    ABRE_CHAVE      reduce using rule 65 (prefixo_incremento -> ADC_DP ID .)


state 153

    (67) prefixo_decremento -> DECREMENTO ID .

    POW             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    MULT            reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    DIVIDE          reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    DIV             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    DIVI            reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    MOD             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    LCM             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    GCD             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    ADC             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    SUB             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    CONC            reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    IGUAL_DP        reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    DIF             reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    MENOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR_IGL       reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    LESSEQUAL       reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    SMARTMATCH      reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    AND_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    PONTO_VIRGULA   reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    OR_S            reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    XOR_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    RPAREN          reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)
    ABRE_CHAVE      reduce using rule 67 (prefixo_decremento -> DECREMENTO ID .)


state 154

    (102) say -> SAY exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 102 (say -> SAY exp_2 PONTO_VIRGULA .)


state 155

    (9) or -> exp_2 OR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    OR_S            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    XOR_S           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    RPAREN          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    AND_S           shift and go to state 131


state 156

    (10) xor -> exp_2 XOR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    OR_S            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    XOR_S           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    RPAREN          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    AND_S           shift and go to state 131


state 157

    (88) declaracao_escalar_MY -> MY tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 198


state 158

    (91) declaracao_lista_MY -> MY LIST IGUAL . lista_valores PONTO_VIRGULA
    (93) lista_valores -> . lista_valores COMMA tipo
    (94) lista_valores -> . lista_valores_base
    (95) lista_valores_base -> . tipo
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_valores                  shift and go to state 199
    tipo                           shift and go to state 163
    lista_valores_base             shift and go to state 164
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 159

    (107) atribuicao -> ESCALAR IGUAL exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 107 (atribuicao -> ESCALAR IGUAL exp_2 .)
    RPAREN          reduce using rule 107 (atribuicao -> ESCALAR IGUAL exp_2 .)
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 160

    (89) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 200


state 161

    (92) declaracao_lista_OUR -> OUR LIST IGUAL . lista_valores PONTO_VIRGULA
    (93) lista_valores -> . lista_valores COMMA tipo
    (94) lista_valores -> . lista_valores_base
    (95) lista_valores_base -> . tipo
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_valores                  shift and go to state 201
    tipo                           shift and go to state 163
    lista_valores_base             shift and go to state 164
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 162

    (90) declaracao_lista -> LIST IGUAL lista_valores . PONTO_VIRGULA
    (93) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 202
    COMMA           shift and go to state 203


state 163

    (95) lista_valores_base -> tipo .

    PONTO_VIRGULA   reduce using rule 95 (lista_valores_base -> tipo .)
    COMMA           reduce using rule 95 (lista_valores_base -> tipo .)


state 164

    (94) lista_valores -> lista_valores_base .

    PONTO_VIRGULA   reduce using rule 94 (lista_valores -> lista_valores_base .)
    COMMA           reduce using rule 94 (lista_valores -> lista_valores_base .)


state 165

    (103) funcao_com_params -> FUNCTION ID LPAREN . parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> FUNCTION ID LPAREN . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (105) parametros -> . ESCALAR
    (106) parametros -> . parametros COMMA ESCALAR

    RPAREN          shift and go to state 205
    ESCALAR         shift and go to state 206

    parametros                     shift and go to state 204

state 166

    (108) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar . RPAREN
    (110) chamada_funcao_auxiliar -> chamada_funcao_auxiliar . COMMA completo

    RPAREN          shift and go to state 207
    COMMA           shift and go to state 208


state 167

    (109) chamada_funcao_sem_parametro -> ID LPAREN RPAREN .

    PONTO_VIRGULA   reduce using rule 109 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)


state 168

    (111) chamada_funcao_auxiliar -> completo .

    RPAREN          reduce using rule 111 (chamada_funcao_auxiliar -> completo .)
    COMMA           reduce using rule 111 (chamada_funcao_auxiliar -> completo .)


state 169

    (71) parenteses -> LPAREN exp_2 RPAREN .

    POW             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MULT            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVIDE          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIV             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVI            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MOD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LCM             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    GCD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ADC             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SUB             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    CONC            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    IGUAL_DP        reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIF             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MENOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR_IGL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LESSEQUAL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SMARTMATCH      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    AND_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    PONTO_VIRGULA   reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    OR_S            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    XOR_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    RPAREN          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ABRE_CHAVE      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)


state 170

    (118) bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSE            reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSIF           reduce using rule 118 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 171

    (112) condicional -> IF exp_2 bloco .
    (113) condicional -> IF exp_2 bloco . ELSE bloco
    (114) condicional -> IF exp_2 bloco . lista_elsif
    (115) condicional -> IF exp_2 bloco . lista_elsif ELSE bloco
    (116) lista_elsif -> . ELSIF exp_2 bloco
    (117) lista_elsif -> . lista_elsif ELSIF exp_2 bloco

    SAY             reduce using rule 112 (condicional -> IF exp_2 bloco .)
    MY              reduce using rule 112 (condicional -> IF exp_2 bloco .)
    OUR             reduce using rule 112 (condicional -> IF exp_2 bloco .)
    LIST            reduce using rule 112 (condicional -> IF exp_2 bloco .)
    FUNCTION        reduce using rule 112 (condicional -> IF exp_2 bloco .)
    ESCALAR         reduce using rule 112 (condicional -> IF exp_2 bloco .)
    ID              reduce using rule 112 (condicional -> IF exp_2 bloco .)
    IF              reduce using rule 112 (condicional -> IF exp_2 bloco .)
    LOOP            reduce using rule 112 (condicional -> IF exp_2 bloco .)
    FOR             reduce using rule 112 (condicional -> IF exp_2 bloco .)
    INTEGER         reduce using rule 112 (condicional -> IF exp_2 bloco .)
    WHILE           reduce using rule 112 (condicional -> IF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 112 (condicional -> IF exp_2 bloco .)
    NOT             reduce using rule 112 (condicional -> IF exp_2 bloco .)
    NEGAC           reduce using rule 112 (condicional -> IF exp_2 bloco .)
    ADC_DP          reduce using rule 112 (condicional -> IF exp_2 bloco .)
    DECREMENTO      reduce using rule 112 (condicional -> IF exp_2 bloco .)
    LPAREN          reduce using rule 112 (condicional -> IF exp_2 bloco .)
    FLOAT           reduce using rule 112 (condicional -> IF exp_2 bloco .)
    STRING          reduce using rule 112 (condicional -> IF exp_2 bloco .)
    BOOLEAN         reduce using rule 112 (condicional -> IF exp_2 bloco .)
    $end            reduce using rule 112 (condicional -> IF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 112 (condicional -> IF exp_2 bloco .)
    ELSE            shift and go to state 209
    ELSIF           shift and go to state 211

    lista_elsif                    shift and go to state 210

state 172

    (100) loop -> LOOP LPAREN declaracao_escalar_MY . exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 212
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 173

    (88) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (78) tipo_opicional -> . tipo_opicional_int
    (79) tipo_opicional -> . STR
    (80) tipo_opicional -> . empty
    (81) tipo_opicional_int -> . INT
    (82) empty -> .

    STR             shift and go to state 111
    INT             shift and go to state 113
    ESCALAR         reduce using rule 82 (empty -> .)

    tipo_opicional                 shift and go to state 108
    tipo_opicional_int             shift and go to state 110
    empty                          shift and go to state 112

state 174

    (101) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 213
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 175

    (96) loop_for -> FOR inteiro INTERPOLACAO . inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (83) inteiro -> . INTEGER

    INTEGER         shift and go to state 102

    inteiro                        shift and go to state 214

state 176

    (97) loop_for_com_lista -> FOR LIST SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 215


state 177

    (98) loop_times -> INTEGER TIMES SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 216


state 178

    (99) loop_while -> WHILE exp_2 ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 22
    lista_declaracoes              shift and go to state 217
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 179

    (13) and -> exp_3 AND_S exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    PONTO_VIRGULA   reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    OR_S            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    XOR_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    RPAREN          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ABRE_CHAVE      reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    IGUAL_DP        shift and go to state 132
    DIF             shift and go to state 133
    MAIOR           shift and go to state 134
    MENOR           shift and go to state 135
    MAIOR_IGL       shift and go to state 136
    LESSEQUAL       shift and go to state 137
    SMARTMATCH      shift and go to state 138


state 180

    (22) igual_dp -> exp_4 IGUAL_DP exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DIF             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MENOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR_IGL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LESSEQUAL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SMARTMATCH      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    AND_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PONTO_VIRGULA   reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OR_S            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    XOR_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RPAREN          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ABRE_CHAVE      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 181

    (23) dif -> exp_4 DIF exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    DIF             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MENOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR_IGL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LESSEQUAL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    SMARTMATCH      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    AND_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    PONTO_VIRGULA   reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    OR_S            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    XOR_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    RPAREN          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ABRE_CHAVE      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 182

    (24) maior -> exp_4 MAIOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    DIF             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MENOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR_IGL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LESSEQUAL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    SMARTMATCH      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    AND_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    OR_S            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    XOR_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    RPAREN          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ABRE_CHAVE      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 183

    (25) menor -> exp_4 MENOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    DIF             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MENOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR_IGL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LESSEQUAL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    SMARTMATCH      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    AND_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    OR_S            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    XOR_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    RPAREN          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ABRE_CHAVE      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 184

    (26) maior_igual -> exp_4 MAIOR_IGL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DIF             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MENOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR_IGL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LESSEQUAL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SMARTMATCH      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    AND_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PONTO_VIRGULA   reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OR_S            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    XOR_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RPAREN          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ABRE_CHAVE      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 185

    (27) menor_igual -> exp_4 LESSEQUAL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DIF             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MENOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR_IGL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LESSEQUAL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SMARTMATCH      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    AND_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PONTO_VIRGULA   reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OR_S            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    XOR_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RPAREN          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ABRE_CHAVE      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 186

    (28) smartmatch -> exp_4 SMARTMATCH exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DIF             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MENOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR_IGL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LESSEQUAL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SMARTMATCH      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    AND_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PONTO_VIRGULA   reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OR_S            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    XOR_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RPAREN          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ABRE_CHAVE      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC             shift and go to state 139
    SUB             shift and go to state 140
    CONC            shift and go to state 141


state 187

    (33) adicao -> exp_5 ADC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SUB             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    CONC            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    IGUAL_DP        reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    DIF             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MENOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR_IGL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LESSEQUAL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SMARTMATCH      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    AND_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    PONTO_VIRGULA   reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    OR_S            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    XOR_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    RPAREN          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ABRE_CHAVE      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MULT            shift and go to state 142
    DIVIDE          shift and go to state 143
    DIV             shift and go to state 144
    DIVI            shift and go to state 145
    MOD             shift and go to state 146
    LCM             shift and go to state 147
    GCD             shift and go to state 148


state 188

    (34) subtracao -> exp_5 SUB exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SUB             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    CONC            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    IGUAL_DP        reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    DIF             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MENOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR_IGL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LESSEQUAL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SMARTMATCH      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    AND_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    PONTO_VIRGULA   reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    OR_S            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    XOR_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    RPAREN          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ABRE_CHAVE      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MULT            shift and go to state 142
    DIVIDE          shift and go to state 143
    DIV             shift and go to state 144
    DIVI            shift and go to state 145
    MOD             shift and go to state 146
    LCM             shift and go to state 147
    GCD             shift and go to state 148


state 189

    (35) conc -> exp_5 CONC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SUB             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    CONC            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    IGUAL_DP        reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    DIF             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MENOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR_IGL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LESSEQUAL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SMARTMATCH      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    AND_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    PONTO_VIRGULA   reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    OR_S            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    XOR_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    RPAREN          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ABRE_CHAVE      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MULT            shift and go to state 142
    DIVIDE          shift and go to state 143
    DIV             shift and go to state 144
    DIVI            shift and go to state 145
    MOD             shift and go to state 146
    LCM             shift and go to state 147
    GCD             shift and go to state 148


state 190

    (44) mult -> exp_6 MULT exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVIDE          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIV             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVI            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MOD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LCM             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    GCD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ADC             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SUB             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    CONC            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    IGUAL_DP        reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIF             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MENOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR_IGL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LESSEQUAL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SMARTMATCH      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    AND_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    PONTO_VIRGULA   reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    OR_S            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    XOR_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    RPAREN          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ABRE_CHAVE      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    POW             shift and go to state 149


state 191

    (45) divide -> exp_6 DIVIDE exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVIDE          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIV             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVI            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MOD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LCM             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    GCD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ADC             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SUB             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    CONC            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    IGUAL_DP        reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIF             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MENOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR_IGL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LESSEQUAL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SMARTMATCH      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    AND_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    PONTO_VIRGULA   reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    OR_S            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    XOR_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    RPAREN          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ABRE_CHAVE      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    POW             shift and go to state 149


state 192

    (46) div -> exp_6 DIV exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVIDE          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIV             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVI            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MOD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LCM             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    GCD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ADC             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SUB             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    CONC            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    IGUAL_DP        reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIF             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MENOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR_IGL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LESSEQUAL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SMARTMATCH      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    AND_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    PONTO_VIRGULA   reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    OR_S            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    XOR_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    RPAREN          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ABRE_CHAVE      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    POW             shift and go to state 149


state 193

    (47) divi -> exp_6 DIVI exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVIDE          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIV             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVI            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MOD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LCM             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    GCD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ADC             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SUB             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    CONC            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    IGUAL_DP        reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIF             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MENOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR_IGL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LESSEQUAL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SMARTMATCH      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    AND_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    PONTO_VIRGULA   reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    OR_S            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    XOR_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    RPAREN          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ABRE_CHAVE      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    POW             shift and go to state 149


state 194

    (48) mod -> exp_6 MOD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVIDE          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIV             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVI            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MOD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LCM             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    GCD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ADC             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SUB             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    CONC            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    IGUAL_DP        reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIF             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MENOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR_IGL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LESSEQUAL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SMARTMATCH      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    AND_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    PONTO_VIRGULA   reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    OR_S            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    XOR_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    RPAREN          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ABRE_CHAVE      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    POW             shift and go to state 149


state 195

    (49) lcm -> exp_6 LCM exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVIDE          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIV             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVI            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MOD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LCM             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    GCD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ADC             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SUB             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    CONC            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    IGUAL_DP        reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIF             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MENOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR_IGL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LESSEQUAL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SMARTMATCH      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    AND_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    PONTO_VIRGULA   reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    OR_S            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    XOR_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    RPAREN          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ABRE_CHAVE      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    POW             shift and go to state 149


state 196

    (50) gcd -> exp_6 GCD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVIDE          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIV             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVI            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MOD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LCM             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    GCD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ADC             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SUB             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    CONC            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    IGUAL_DP        reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIF             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MENOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR_IGL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LESSEQUAL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SMARTMATCH      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    AND_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    PONTO_VIRGULA   reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    OR_S            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    XOR_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    RPAREN          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ABRE_CHAVE      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    POW             shift and go to state 149


state 197

    (53) pow -> exp_7 POW exp_8 .

    POW             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MULT            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVIDE          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIV             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVI            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MOD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LCM             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    GCD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ADC             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SUB             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    CONC            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    IGUAL_DP        reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIF             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MENOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR_IGL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LESSEQUAL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SMARTMATCH      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    AND_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    PONTO_VIRGULA   reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    OR_S            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    XOR_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    RPAREN          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ABRE_CHAVE      reduce using rule 53 (pow -> exp_7 POW exp_8 .)


state 198

    (88) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 218
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 199

    (91) declaracao_lista_MY -> MY LIST IGUAL lista_valores . PONTO_VIRGULA
    (93) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 219
    COMMA           shift and go to state 203


state 200

    (89) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 220
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 201

    (92) declaracao_lista_OUR -> OUR LIST IGUAL lista_valores . PONTO_VIRGULA
    (93) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 221
    COMMA           shift and go to state 203


state 202

    (90) declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 90 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)


state 203

    (93) lista_valores -> lista_valores COMMA . tipo
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    tipo                           shift and go to state 222
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 204

    (103) funcao_com_params -> FUNCTION ID LPAREN parametros . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (106) parametros -> parametros . COMMA ESCALAR

    RPAREN          shift and go to state 223
    COMMA           shift and go to state 224


state 205

    (104) funcao_sem_params -> FUNCTION ID LPAREN RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 225


state 206

    (105) parametros -> ESCALAR .

    RPAREN          reduce using rule 105 (parametros -> ESCALAR .)
    COMMA           reduce using rule 105 (parametros -> ESCALAR .)


state 207

    (108) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .

    PONTO_VIRGULA   reduce using rule 108 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)


state 208

    (110) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA . completo
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    completo                       shift and go to state 226
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 209

    (113) condicional -> IF exp_2 bloco ELSE . bloco
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 40

    bloco                          shift and go to state 227

state 210

    (114) condicional -> IF exp_2 bloco lista_elsif .
    (115) condicional -> IF exp_2 bloco lista_elsif . ELSE bloco
    (117) lista_elsif -> lista_elsif . ELSIF exp_2 bloco

    SAY             reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    MY              reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    OUR             reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    LIST            reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    FUNCTION        reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    ESCALAR         reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    ID              reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    IF              reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    LOOP            reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    FOR             reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    INTEGER         reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    WHILE           reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    ABRE_CHAVE      reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    NOT             reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    NEGAC           reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    ADC_DP          reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    DECREMENTO      reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    LPAREN          reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    FLOAT           reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    STRING          reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    BOOLEAN         reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    $end            reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    FECHA_CHAVE     reduce using rule 114 (condicional -> IF exp_2 bloco lista_elsif .)
    ELSE            shift and go to state 228
    ELSIF           shift and go to state 229


state 211

    (116) lista_elsif -> ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 230
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 212

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 . PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 231
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 213

    (101) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 101 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 214

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 232


state 215

    (97) loop_for_com_lista -> FOR LIST SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 233


state 216

    (98) loop_times -> INTEGER TIMES SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 234


state 217

    (99) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 235
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 22
    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 218

    (88) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 236
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 219

    (91) declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 91 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)


state 220

    (89) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 237
    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105


state 221

    (92) declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 92 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)


state 222

    (93) lista_valores -> lista_valores COMMA tipo .

    PONTO_VIRGULA   reduce using rule 93 (lista_valores -> lista_valores COMMA tipo .)
    COMMA           reduce using rule 93 (lista_valores -> lista_valores COMMA tipo .)


state 223

    (103) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 238


state 224

    (106) parametros -> parametros COMMA . ESCALAR

    ESCALAR         shift and go to state 239


state 225

    (104) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    FUNCTION        shift and go to state 37
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes_para_funcoes shift and go to state 240
    lista_declaracoes              shift and go to state 241
    declaracoes_para_funcoes       shift and go to state 242
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 226

    (110) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA completo .

    RPAREN          reduce using rule 110 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA completo .)
    COMMA           reduce using rule 110 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA completo .)


state 227

    (113) condicional -> IF exp_2 bloco ELSE bloco .

    SAY             reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    MY              reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    OUR             reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    LIST            reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    FUNCTION        reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    ESCALAR         reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    ID              reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    IF              reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    LOOP            reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    FOR             reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    INTEGER         reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    WHILE           reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    ABRE_CHAVE      reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    NOT             reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEGAC           reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    ADC_DP          reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    DECREMENTO      reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    LPAREN          reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    FLOAT           reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    STRING          reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    BOOLEAN         reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    $end            reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)
    FECHA_CHAVE     reduce using rule 113 (condicional -> IF exp_2 bloco ELSE bloco .)


state 228

    (115) condicional -> IF exp_2 bloco lista_elsif ELSE . bloco
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 40

    bloco                          shift and go to state 243

state 229

    (117) lista_elsif -> lista_elsif ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    ID              shift and go to state 100
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    ESCALAR         shift and go to state 101
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    exp_2                          shift and go to state 244
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    inteiro                        shift and go to state 44
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 230

    (116) lista_elsif -> ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105
    ABRE_CHAVE      shift and go to state 40

    bloco                          shift and go to state 245

state 231

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA . atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2

    ESCALAR         shift and go to state 247

    atribuicao                     shift and go to state 246

state 232

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 248


state 233

    (97) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes              shift and go to state 249
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 234

    (98) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes              shift and go to state 250
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 235

    (99) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 99 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 236

    (88) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 88 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 237

    (89) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 89 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 238

    (103) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    FUNCTION        shift and go to state 37
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    lista_declaracoes_para_funcoes shift and go to state 251
    lista_declaracoes              shift and go to state 241
    declaracoes_para_funcoes       shift and go to state 242
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 239

    (106) parametros -> parametros COMMA ESCALAR .

    RPAREN          reduce using rule 106 (parametros -> parametros COMMA ESCALAR .)
    COMMA           reduce using rule 106 (parametros -> parametros COMMA ESCALAR .)


state 240

    (104) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 252


state 241

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes . declaracoes_para_funcoes
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    FUNCTION        shift and go to state 37
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes_para_funcoes       shift and go to state 253
    declaracoes                    shift and go to state 97
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 242

    (5) lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .
    (119) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 5 (lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .)
    SAY             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)


state 243

    (115) condicional -> IF exp_2 bloco lista_elsif ELSE bloco .

    SAY             reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    MY              reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    OUR             reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LIST            reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FUNCTION        reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ESCALAR         reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ID              reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IF              reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LOOP            reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FOR             reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INTEGER         reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    WHILE           reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ABRE_CHAVE      reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NOT             reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEGAC           reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ADC_DP          reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    DECREMENTO      reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LPAREN          reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FLOAT           reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STRING          reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BOOLEAN         reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    $end            reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FECHA_CHAVE     reduce using rule 115 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)


state 244

    (117) lista_elsif -> lista_elsif ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 104
    XOR_S           shift and go to state 105
    ABRE_CHAVE      shift and go to state 40

    bloco                          shift and go to state 254

state 245

    (116) lista_elsif -> ELSIF exp_2 bloco .

    ELSE            reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    SAY             reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    MY              reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    OUR             reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    LIST            reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    ID              reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    IF              reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    LOOP            reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    FOR             reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    WHILE           reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    NOT             reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    STRING          reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    $end            reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 116 (lista_elsif -> ELSIF exp_2 bloco .)


state 246

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao . RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    RPAREN          shift and go to state 255


state 247

    (107) atribuicao -> ESCALAR . IGUAL exp_2

    IGUAL           shift and go to state 114


state 248

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 256


state 249

    (97) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 257
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 250

    (98) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 258
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 251

    (103) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 259


state 252

    (104) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    SAY             reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 104 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 253

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .
    (119) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 4 (lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .)
    SAY             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 119 (declaracoes -> declaracoes_para_funcoes .)


state 254

    (117) lista_elsif -> lista_elsif ELSIF exp_2 bloco .

    ELSE            reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    SAY             reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MY              reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    OUR             reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LIST            reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ID              reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IF              reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LOOP            reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FOR             reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    WHILE           reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NOT             reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STRING          reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    $end            reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 117 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)


state 255

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 260


state 256

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    inteiro                        shift and go to state 44
    lista_declaracoes              shift and go to state 261
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 257

    (97) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 97 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 258

    (98) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 98 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 259

    (103) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    SAY             reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 103 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 260

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracao_escalar_MY          shift and go to state 13
    exp_2                          shift and go to state 22
    atribuicao                     shift and go to state 20
    lista_declaracoes              shift and go to state 262
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 261

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 263
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    inteiro                        shift and go to state 44
    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    atribuicao                     shift and go to state 20
    exp_2                          shift and go to state 22
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 262

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (119) declaracoes -> . declaracoes_para_funcoes
    (120) declaracoes -> . declaracao_de_funcao
    (121) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (122) declaracoes_para_funcoes -> . say
    (123) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (124) declaracoes_para_funcoes -> . declaracao_de_condicional
    (125) declaracoes_para_funcoes -> . declaracao_loop
    (126) declaracoes_para_funcoes -> . declaracao_de_expressao
    (127) declaracoes_para_funcoes -> . declaracao_bloco
    (128) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (129) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (130) declaracoes_para_funcoes -> . declaracao_lista
    (131) declaracoes_para_funcoes -> . declaracao_lista_MY
    (132) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (134) declaracao_de_funcao -> . funcao_com_params
    (135) declaracao_de_funcao -> . funcao_sem_params
    (133) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (102) say -> . SAY exp_2 PONTO_VIRGULA
    (136) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (137) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (138) declaracao_de_condicional -> . condicional
    (139) declaracao_loop -> . loop
    (140) declaracao_loop -> . loop_for
    (141) declaracao_loop -> . loop_for_com_lista
    (142) declaracao_loop -> . loop_times
    (143) declaracao_loop -> . loop_while
    (144) declaracao_loop -> . loop_sem_condicao
    (145) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (146) declaracao_bloco -> . bloco
    (88) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (89) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (90) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (91) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (92) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (103) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (104) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (107) atribuicao -> . ESCALAR IGUAL exp_2
    (108) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (109) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (112) condicional -> . IF exp_2 bloco
    (113) condicional -> . IF exp_2 bloco ELSE bloco
    (114) condicional -> . IF exp_2 bloco lista_elsif
    (115) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (100) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (96) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (97) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (98) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (118) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP ID
    (66) posfixo_incremento -> . ID ADC_DP
    (67) prefixo_decremento -> . DECREMENTO ID
    (68) posfixo_decremento -> . ID DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . escalar
    (74) tipo -> . inteiro
    (75) tipo -> . float
    (76) tipo -> . string
    (77) tipo -> . boolean
    (87) escalar -> . ESCALAR
    (83) inteiro -> . INTEGER
    (84) float -> . FLOAT
    (85) string -> . STRING
    (86) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 264
    SAY             shift and go to state 21
    MY              shift and go to state 33
    OUR             shift and go to state 35
    LIST            shift and go to state 36
    FUNCTION        shift and go to state 37
    ESCALAR         shift and go to state 34
    ID              shift and go to state 38
    IF              shift and go to state 41
    LOOP            shift and go to state 42
    FOR             shift and go to state 43
    INTEGER         shift and go to state 45
    WHILE           shift and go to state 46
    ABRE_CHAVE      shift and go to state 40
    NOT             shift and go to state 77
    NEGAC           shift and go to state 78
    ADC_DP          shift and go to state 87
    DECREMENTO      shift and go to state 88
    LPAREN          shift and go to state 39
    FLOAT           shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96

    declaracao_escalar_MY          shift and go to state 13
    exp_2                          shift and go to state 22
    atribuicao                     shift and go to state 20
    declaracoes                    shift and go to state 97
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    funcao_com_params              shift and go to state 18
    funcao_sem_params              shift and go to state 19
    chamada_funcao                 shift and go to state 23
    chamada_funcao_sem_parametro   shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    loop_for                       shift and go to state 27
    loop_for_com_lista             shift and go to state 28
    loop_times                     shift and go to state 29
    loop_while                     shift and go to state 30
    loop_sem_condicao              shift and go to state 31
    bloco                          shift and go to state 32
    inteiro                        shift and go to state 44
    or                             shift and go to state 47
    xor                            shift and go to state 48
    exp_3                          shift and go to state 49
    and                            shift and go to state 50
    exp_4                          shift and go to state 51
    igual_dp                       shift and go to state 52
    dif                            shift and go to state 53
    maior                          shift and go to state 54
    menor                          shift and go to state 55
    maior_igual                    shift and go to state 56
    menor_igual                    shift and go to state 57
    smartmatch                     shift and go to state 58
    exp_5                          shift and go to state 59
    adicao                         shift and go to state 60
    subtracao                      shift and go to state 61
    conc                           shift and go to state 62
    exp_6                          shift and go to state 63
    mult                           shift and go to state 64
    divide                         shift and go to state 65
    div                            shift and go to state 66
    divi                           shift and go to state 67
    mod                            shift and go to state 68
    lcm                            shift and go to state 69
    gcd                            shift and go to state 70
    exp_7                          shift and go to state 71
    pow                            shift and go to state 72
    exp_8                          shift and go to state 73
    not_op                         shift and go to state 74
    not_s                          shift and go to state 75
    exp_9                          shift and go to state 76
    unario                         shift and go to state 79
    operando                       shift and go to state 80
    prefixo_incremento             shift and go to state 81
    posfixo_incremento             shift and go to state 82
    prefixo_decremento             shift and go to state 83
    posfixo_decremento             shift and go to state 84
    parenteses                     shift and go to state 85
    completo                       shift and go to state 86
    tipo                           shift and go to state 89
    escalar                        shift and go to state 90
    float                          shift and go to state 91
    string                         shift and go to state 92
    boolean                        shift and go to state 93

state 263

    (96) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 96 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 264

    (100) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 100 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)

