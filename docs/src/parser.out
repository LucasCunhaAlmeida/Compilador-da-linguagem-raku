Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    BAG
    BREAK
    COMMENT
    CONSTANT
    EXIT
    EXPORT
    FALSE
    IMPORT
    KMARK
    LAST
    LET
    MAP
    MU
    MULTI
    NEED
    NEXT
    NIL
    ONLY
    PAIR
    PONTO
    PUSH
    REDO
    REPLICARSTRING
    REQUIRE
    RETURN
    SET
    SPLICE
    STATE
    TRUE
    UNARYMINUS
    UNIT
    UNSHIFT
    USE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaracoes
Rule 2     exp_2 -> or
Rule 3     exp_2 -> xor
Rule 4     exp_2 -> exp_3
Rule 5     or -> exp_2 OR_S exp_3
Rule 6     xor -> exp_2 XOR_S exp_3
Rule 7     exp_3 -> and
Rule 8     exp_3 -> exp_4
Rule 9     and -> exp_3 AND_S exp_4
Rule 10    exp_4 -> igual_dp
Rule 11    exp_4 -> dif
Rule 12    exp_4 -> maior
Rule 13    exp_4 -> menor
Rule 14    exp_4 -> maior_igual
Rule 15    exp_4 -> menor_igual
Rule 16    exp_4 -> smartmatch
Rule 17    exp_4 -> exp_5
Rule 18    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 19    dif -> exp_4 DIF exp_5
Rule 20    maior -> exp_4 MAIOR exp_5
Rule 21    menor -> exp_4 MENOR exp_5
Rule 22    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 23    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 24    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 25    exp_5 -> adicao
Rule 26    exp_5 -> subtracao
Rule 27    exp_5 -> conc
Rule 28    exp_5 -> exp_6
Rule 29    adicao -> exp_5 ADC exp_6
Rule 30    subtracao -> exp_5 SUB exp_6
Rule 31    conc -> exp_5 CONC exp_6
Rule 32    exp_6 -> mult
Rule 33    exp_6 -> divide
Rule 34    exp_6 -> div
Rule 35    exp_6 -> divi
Rule 36    exp_6 -> mod
Rule 37    exp_6 -> lcm
Rule 38    exp_6 -> gcd
Rule 39    exp_6 -> exp_7
Rule 40    mult -> exp_6 MULT exp_7
Rule 41    divide -> exp_6 DIVIDE exp_7
Rule 42    div -> exp_6 DIV exp_7
Rule 43    divi -> exp_6 DIVI exp_7
Rule 44    mod -> exp_6 MOD exp_7
Rule 45    lcm -> exp_6 LCM exp_7
Rule 46    gcd -> exp_6 GCD exp_7
Rule 47    exp_7 -> pow
Rule 48    exp_7 -> exp_8
Rule 49    pow -> exp_7 POW exp_8
Rule 50    exp_8 -> not_op
Rule 51    exp_8 -> not_s
Rule 52    exp_8 -> exp_9
Rule 53    not_op -> NOT exp_8
Rule 54    not_s -> NEGAC exp_8
Rule 55    exp_9 -> unario
Rule 56    exp_9 -> operando
Rule 57    unario -> prefixo_incremento
Rule 58    unario -> posfixo_incremento
Rule 59    unario -> prefixo_decremento
Rule 60    unario -> posfixo_decremento
Rule 61    prefixo_incremento -> ADC_DP ID
Rule 62    posfixo_incremento -> ID ADC_DP
Rule 63    prefixo_decremento -> DECREMENTO ID
Rule 64    posfixo_decremento -> ID DECREMENTO
Rule 65    operando -> parenteses
Rule 66    operando -> completo
Rule 67    parenteses -> LPAREN exp_2 RPAREN
Rule 68    completo -> tipo
Rule 69    completo -> escalar
Rule 70    tipo -> inteiro
Rule 71    tipo -> float
Rule 72    tipo -> string
Rule 73    tipo -> boolean
Rule 74    tipo_opicional -> tipo_opicional_int
Rule 75    tipo_opicional -> STR
Rule 76    tipo_opicional -> empty
Rule 77    tipo_opicional_int -> INT
Rule 78    empty -> <empty>
Rule 79    inteiro -> INTEGER
Rule 80    float -> FLOAT
Rule 81    string -> STRING
Rule 82    boolean -> BOOLEAN
Rule 83    escalar -> ESCALAR
Rule 84    declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL tipo PONTO_VIRGULA declaracoes_para_funcoes
Rule 85    declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA declaracoes_para_funcoes
Rule 86    declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA declaracoes_para_funcoes
Rule 87    declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA declaracoes_para_funcoes
Rule 88    lista_valores -> lista_valores COMMA tipo
Rule 89    lista_valores -> lista_valores_base
Rule 90    lista_valores_base -> tipo
Rule 91    loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE declaracoes FECHA_CHAVE declaracoes_para_funcoes
Rule 92    loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE declaracoes FECHA_CHAVE declaracoes_para_funcoes
Rule 93    loop_while -> WHILE exp_2 ABRE_CHAVE declaracoes FECHA_CHAVE declaracoes_para_funcoes
Rule 94    loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE declaracoes FECHA_CHAVE declaracoes_para_funcoes
Rule 95    loop_sem_condicao -> LOOP ABRE_CHAVE declaracoes FECHA_CHAVE declaracoes_para_funcoes
Rule 96    say -> SAY exp_2 PONTO_VIRGULA declaracoes_para_funcoes
Rule 97    funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE declaracoes_para_funcoes FECHA_CHAVE declaracoes
Rule 98    funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE declaracoes_para_funcoes FECHA_CHAVE declaracoes
Rule 99    parametros -> ESCALAR
Rule 100   parametros -> parametros COMMA ESCALAR
Rule 101   atribuicao -> ESCALAR IGUAL exp_2
Rule 102   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN declaracoes
Rule 103   chamada_funcao_sem_parametro -> ID LPAREN RPAREN declaracoes
Rule 104   chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA completo
Rule 105   chamada_funcao_auxiliar -> completo
Rule 106   condicional -> IF exp_2 bloco declaracoes
Rule 107   condicional -> IF exp_2 bloco ELSE bloco declaracoes
Rule 108   condicional -> IF exp_2 bloco lista_elsif declaracoes
Rule 109   condicional -> IF exp_2 bloco lista_elsif ELSE bloco declaracoes
Rule 110   lista_elsif -> ELSIF exp_2 bloco
Rule 111   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 112   bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE
Rule 113   declaracoes -> declaracao_de_funcao
Rule 114   declaracoes -> declaracoes_para_funcoes
Rule 115   declaracoes_para_funcoes -> declaracao_de_atribuicao
Rule 116   declaracoes_para_funcoes -> say
Rule 117   declaracoes_para_funcoes -> declaracao_de_chamada_funcao
Rule 118   declaracoes_para_funcoes -> declaracao_de_condicional
Rule 119   declaracoes_para_funcoes -> declaracao_loop
Rule 120   declaracoes_para_funcoes -> declaracao_de_expressao
Rule 121   declaracoes_para_funcoes -> declaracao_bloco
Rule 122   declaracoes_para_funcoes -> declaracao_escalar_MY
Rule 123   declaracoes_para_funcoes -> declaracao_escalar_OUR
Rule 124   declaracoes_para_funcoes -> declaracao_lista
Rule 125   declaracoes_para_funcoes -> declaracao_lista_MY
Rule 126   declaracoes_para_funcoes -> declaracao_lista_OUR
Rule 127   declaracoes_para_funcoes -> empty
Rule 128   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 129   declaracao_de_funcao -> funcao_com_params
Rule 130   declaracao_de_funcao -> funcao_sem_params
Rule 131   declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA
Rule 132   declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA
Rule 133   declaracao_de_condicional -> condicional
Rule 134   declaracao_loop -> loop
Rule 135   declaracao_loop -> loop_for
Rule 136   declaracao_loop -> loop_times
Rule 137   declaracao_loop -> loop_while
Rule 138   declaracao_loop -> loop_sem_condicao
Rule 139   declaracao_de_expressao -> exp_2 PONTO_VIRGULA
Rule 140   declaracao_bloco -> bloco

Terminals, with rules where they appear

ABRE_CHAVE           : 91 92 93 94 95 97 98 112
ADC                  : 29
ADC_DP               : 61 62
AND_S                : 9
ANY                  : 
BAG                  : 
BOOLEAN              : 82
BREAK                : 
COMMA                : 88 100 104
COMMENT              : 
CONC                 : 31
CONSTANT             : 
DECREMENTO           : 63 64
DIF                  : 19
DIV                  : 42
DIVI                 : 43
DIVIDE               : 41
ELSE                 : 107 109
ELSIF                : 110 111
ESCALAR              : 83 84 91 92 99 100 101
EXIT                 : 
EXPORT               : 
FALSE                : 
FECHA_CHAVE          : 91 92 93 94 95 97 98 112
FLOAT                : 80
FOR                  : 91
FUNCTION             : 97 98
GCD                  : 46
ID                   : 61 62 63 64 97 98 102 103
IF                   : 106 107 108 109
IGUAL                : 84 85 86 87 101
IGUAL_DP             : 18
IMPORT               : 
INT                  : 77
INTEGER              : 79 92
INTERPOLACAO         : 91
KMARK                : 
LAST                 : 
LCM                  : 45
LESSEQUAL            : 23
LET                  : 
LIST                 : 85 86 87
LOOP                 : 94 95
LPAREN               : 67 94 97 98 102 103
MAIOR                : 20
MAIOR_IGL            : 22
MAP                  : 
MENOR                : 21
MOD                  : 44
MU                   : 
MULT                 : 40
MULTI                : 
MY                   : 86
NEED                 : 
NEGAC                : 54
NEXT                 : 
NIL                  : 
NOT                  : 53
ONLY                 : 
OR_S                 : 5
OUR                  : 84 87
PAIR                 : 
PONTO                : 
PONTO_VIRGULA        : 84 85 86 87 94 94 96 128 131 132 139
POW                  : 49
PUSH                 : 
REDO                 : 
REPLICARSTRING       : 
REQUIRE              : 
RETURN               : 
RPAREN               : 67 94 97 98 102 103
SAY                  : 96
SET                  : 
SETA                 : 91 92
SMARTMATCH           : 24
SPLICE               : 
STATE                : 
STR                  : 75
STRING               : 81
SUB                  : 30
TIMES                : 92
TRUE                 : 
UNARYMINUS           : 
UNIT                 : 
UNSHIFT              : 
USE                  : 
WHILE                : 93
XOR_S                : 6
error                : 

Nonterminals, with rules where they appear

adicao               : 25
and                  : 7
atribuicao           : 94 128
bloco                : 106 107 107 108 109 109 110 111 140
boolean              : 73
chamada_funcao       : 131
chamada_funcao_auxiliar : 102 104
chamada_funcao_sem_parametro : 132
completo             : 66 104 105
conc                 : 27
condicional          : 133
declaracao_bloco     : 121
declaracao_de_atribuicao : 115
declaracao_de_chamada_funcao : 117
declaracao_de_condicional : 118
declaracao_de_expressao : 120
declaracao_de_funcao : 113
declaracao_escalar_MY : 122
declaracao_escalar_OUR : 123
declaracao_lista     : 124
declaracao_lista_MY  : 125
declaracao_lista_OUR : 126
declaracao_loop      : 119
declaracoes          : 1 91 92 93 94 95 97 98 102 103 106 107 108 109 112
declaracoes_para_funcoes : 84 85 86 87 91 92 93 94 95 96 97 98 114
dif                  : 11
div                  : 34
divi                 : 35
divide               : 33
empty                : 76 127
escalar              : 69
exp_2                : 5 6 67 93 94 94 96 101 106 107 108 109 110 111 139
exp_3                : 4 5 6 9
exp_4                : 8 9 18 19 20 21 22 23 24
exp_5                : 17 18 19 20 21 22 23 24 29 30 31
exp_6                : 28 29 30 31 40 41 42 43 44 45 46
exp_7                : 39 40 41 42 43 44 45 46 49
exp_8                : 48 49 53 54
exp_9                : 52
float                : 71
funcao_com_params    : 129
funcao_sem_params    : 130
gcd                  : 38
igual_dp             : 10
inteiro              : 70 91 91
lcm                  : 37
lista_elsif          : 108 109 111
lista_valores        : 85 86 87 88
lista_valores_base   : 89
loop                 : 134
loop_for             : 135
loop_sem_condicao    : 138
loop_times           : 136
loop_while           : 137
maior                : 12
maior_igual          : 14
menor                : 13
menor_igual          : 15
mod                  : 36
mult                 : 32
not_op               : 50
not_s                : 51
operando             : 56
or                   : 2
parametros           : 97 100
parenteses           : 65
posfixo_decremento   : 60
posfixo_incremento   : 58
pow                  : 47
prefixo_decremento   : 59
prefixo_incremento   : 57
programa             : 0
say                  : 116
smartmatch           : 16
string               : 72
subtracao            : 26
tipo                 : 68 84 88 90
tipo_opicional       : 84
tipo_opicional_int   : 74
unario               : 55
xor                  : 3

