Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANY
    BAG
    BREAK
    COMMENT
    CONSTANT
    EXIT
    EXPORT
    FALSE
    HAS
    IMPORT
    INT
    KMARK
    LAST
    LET
    MAP
    MU
    MULTI
    MY
    NEED
    NEXT
    NIL
    ONLY
    OR
    OUR
    PAIR
    PUSH
    REDO
    REPLICARSTRING
    REQUIRE
    RETURN
    SET
    SPLICE
    STATE
    STR
    TRUE
    UNARYMINUS
    UNIT
    UNSHIFT
    USE
    XOR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> comando_com_main
Rule 2     comando_com_main -> funcao_main declaracoes_main
Rule 3     comando_com_main -> declaracoes comando_com_main
Rule 4     comando_com_main -> comando
Rule 5     comando -> declaracoes
Rule 6     funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
Rule 7     exp -> PONTO_VIRGULA
Rule 8     exp -> exp_2
Rule 9     exp_2 -> or
Rule 10    exp_2 -> xor
Rule 11    exp_2 -> exp_3
Rule 12    or -> exp_2 OR_S exp_3
Rule 13    xor -> exp_2 XOR_S exp_3
Rule 14    exp_3 -> and
Rule 15    exp_3 -> exp_4
Rule 16    and -> exp_3 AND_S exp_4
Rule 17    exp_4 -> igual_dp
Rule 18    exp_4 -> dif
Rule 19    exp_4 -> maior
Rule 20    exp_4 -> menor
Rule 21    exp_4 -> maior_igual
Rule 22    exp_4 -> menor_igual
Rule 23    exp_4 -> smartmatch
Rule 24    exp_4 -> exp_5
Rule 25    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 26    dif -> exp_4 DIF exp_5
Rule 27    maior -> exp_4 MAIOR exp_5
Rule 28    menor -> exp_4 MENOR exp_5
Rule 29    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 30    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 31    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 32    exp_5 -> adicao
Rule 33    exp_5 -> subtracao
Rule 34    exp_5 -> conc
Rule 35    exp_5 -> exp_6
Rule 36    adicao -> exp_5 ADC exp_6
Rule 37    subtracao -> exp_5 SUB exp_6
Rule 38    conc -> exp_5 CONC exp_6
Rule 39    exp_6 -> mult
Rule 40    exp_6 -> divide
Rule 41    exp_6 -> div
Rule 42    exp_6 -> divi
Rule 43    exp_6 -> mod
Rule 44    exp_6 -> lcm
Rule 45    exp_6 -> gcd
Rule 46    exp_6 -> exp_7
Rule 47    mult -> exp_6 MULT exp_7
Rule 48    divide -> exp_6 DIVIDE exp_7
Rule 49    div -> exp_6 DIV exp_7
Rule 50    divi -> exp_6 DIVI exp_7
Rule 51    mod -> exp_6 MOD exp_7
Rule 52    lcm -> exp_6 LCM exp_7
Rule 53    gcd -> exp_6 GCD exp_7
Rule 54    exp_7 -> pow
Rule 55    exp_7 -> exp_8
Rule 56    pow -> exp_7 POW exp_8
Rule 57    exp_8 -> not_op
Rule 58    exp_8 -> not_s
Rule 59    exp_8 -> exp_9
Rule 60    not_op -> NOT exp_8
Rule 61    not_s -> NEGAC exp_8
Rule 62    exp_9 -> unario
Rule 63    exp_9 -> operando
Rule 64    unario -> prefixo_incremento
Rule 65    unario -> posfixo_incremento
Rule 66    unario -> prefixo_decremento
Rule 67    unario -> posfixo_decremento
Rule 68    prefixo_incremento -> ADC_DP ID
Rule 69    posfixo_incremento -> ID ADC_DP
Rule 70    prefixo_decremento -> DECREMENTO ID
Rule 71    posfixo_decremento -> ID DECREMENTO
Rule 72    operando -> parenteses
Rule 73    operando -> completo
Rule 74    parenteses -> LPAREN exp RPAREN
Rule 75    completo -> variaveis
Rule 76    completo -> tipo
Rule 77    variaveis -> escalar
Rule 78    tipo -> inteiro
Rule 79    tipo -> float
Rule 80    tipo -> string
Rule 81    tipo -> boolean
Rule 82    inteiro -> INTEGER
Rule 83    float -> FLOAT
Rule 84    string -> STRING
Rule 85    boolean -> BOOLEAN
Rule 86    escalar -> ESCALAR
Rule 87    declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA
Rule 88    declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA
Rule 89    lista_valores -> lista_valores_recursiva
Rule 90    lista_valores -> lista_valores_base
Rule 91    lista_valores_recursiva -> lista_valores tipo
Rule 92    lista_valores_base -> tipo
Rule 93    loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
Rule 94    loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
Rule 95    loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
Rule 96    loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 97    loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE
Rule 98    funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 99    funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 100   parametros -> funcao_com_um_paramentro
Rule 101   parametros -> funcao_com_varios_paramentro
Rule 102   funcao_com_um_paramentro -> ESCALAR
Rule 103   funcao_com_varios_paramentro -> COMMA ESCALAR parametros
Rule 104   atribuicao -> ESCALAR IGUAL exp_2
Rule 105   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar
Rule 106   chamada_funcao_auxiliar -> parametros RPAREN
Rule 107   chamada_funcao_auxiliar -> RPAREN
Rule 108   condicional -> IF exp_2 bloco
Rule 109   condicional -> IF exp_2 bloco ELSE bloco
Rule 110   condicional -> IF exp_2 bloco lista_elsif
Rule 111   condicional -> IF exp_2 bloco lista_elsif ELSE bloco
Rule 112   lista_elsif -> ELSIF exp_2 bloco
Rule 113   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 114   bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE
Rule 115   bloco -> declaracoes
Rule 116   declaracoes -> declaracao_de_funcao
Rule 117   declaracoes -> declaracoes_main
Rule 118   declaracoes_main -> declaracao_de_atribuicao
Rule 119   declaracoes_main -> declaracao_de_chamada_funcao
Rule 120   declaracoes_main -> declaracao_de_condicional
Rule 121   declaracoes_main -> declaracao_loop
Rule 122   declaracoes_main -> declaracao_de_expressao
Rule 123   declaracoes_main -> declaracao_bloco
Rule 124   declaracoes_main -> declaracao_escalar
Rule 125   declaracoes_main -> declaracao_lista
Rule 126   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 127   declaracao_de_funcao -> funcao_com_params
Rule 128   declaracao_de_funcao -> funcao_sem_params
Rule 129   declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA
Rule 130   declaracao_de_condicional -> condicional
Rule 131   declaracao_loop -> loop
Rule 132   declaracao_de_expressao -> exp_2 PONTO_VIRGULA
Rule 133   declaracao_bloco -> bloco

Terminals, with rules where they appear

ABRE_CHAVE           : 6 93 94 95 96 97 98 99 114
ADC                  : 36
ADC_DP               : 68 69
AND                  : 
AND_S                : 16
ANY                  : 
BAG                  : 
BOOLEAN              : 85
BREAK                : 
COMMA                : 103
COMMENT              : 
CONC                 : 38
CONSTANT             : 
DECREMENTO           : 70 71
DIF                  : 26
DIV                  : 49
DIVI                 : 50
DIVIDE               : 48
ELSE                 : 109 111
ELSIF                : 112 113
ESCALAR              : 86 87 102 103 104
EXIT                 : 
EXPORT               : 
FALSE                : 
FECHA_CHAVE          : 6 93 94 95 96 97 98 99 114
FLOAT                : 83
FOR                  : 93
FUNCTION             : 6 98 99
GCD                  : 53
HAS                  : 
ID                   : 68 69 70 71 93 94 98 99 105
IF                   : 108 109 110 111
IGUAL                : 87 88 104
IGUAL_DP             : 25
IMPORT               : 
INT                  : 
INTEGER              : 82 94
KMARK                : 
LAST                 : 
LCM                  : 52
LESSEQUAL            : 30
LET                  : 
LIST                 : 88
LOOP                 : 96 97
LPAREN               : 6 74 96 98 99 105
MAIN                 : 6
MAIOR                : 27
MAIOR_IGL            : 29
MAP                  : 
MENOR                : 28
MOD                  : 51
MU                   : 
MULT                 : 47
MULTI                : 
MY                   : 
NEED                 : 
NEGAC                : 61
NEXT                 : 
NIL                  : 
NOT                  : 60
ONLY                 : 
OR                   : 
OR_S                 : 12
OUR                  : 
PAIR                 : 
PONTO                : 94
PONTO_VIRGULA        : 7 87 88 96 96 126 129 132
POW                  : 56
PUSH                 : 
REDO                 : 
REPLICARSTRING       : 
REQUIRE              : 
RETURN               : 
RPAREN               : 6 74 96 98 99 106 107
SET                  : 
SETA                 : 93 94
SMARTMATCH           : 31
SPLICE               : 
STATE                : 
STR                  : 
STRING               : 84
SUB                  : 37
TIMES                : 94
TRUE                 : 
UNARYMINUS           : 
UNIT                 : 
UNSHIFT              : 
USE                  : 
WHILE                : 95
XOR                  : 
XOR_S                : 13
error                : 

Nonterminals, with rules where they appear

adicao               : 32
and                  : 14
atribuicao           : 96 126
bloco                : 108 109 109 110 111 111 112 113 133
boolean              : 81
chamada_funcao       : 129
chamada_funcao_auxiliar : 105
comando              : 4 93 94 95 96 97 98 99
comando_com_main     : 1 3
completo             : 73
conc                 : 34
condicional          : 130
declaracao_bloco     : 123
declaracao_de_atribuicao : 118
declaracao_de_chamada_funcao : 119
declaracao_de_condicional : 120
declaracao_de_expressao : 122
declaracao_de_funcao : 116
declaracao_escalar   : 124
declaracao_lista     : 125
declaracao_loop      : 121
declaracoes          : 3 5 114 115
declaracoes_main     : 2 6 117
dif                  : 18
div                  : 41
divi                 : 42
divide               : 40
escalar              : 77
exp                  : 74
exp_2                : 8 12 13 93 95 96 96 104 108 109 110 111 112 113 132
exp_3                : 11 12 13 16
exp_4                : 15 16 25 26 27 28 29 30 31
exp_5                : 24 25 26 27 28 29 30 31 36 37 38
exp_6                : 35 36 37 38 47 48 49 50 51 52 53
exp_7                : 46 47 48 49 50 51 52 53 56
exp_8                : 55 56 60 61
exp_9                : 59
float                : 79
funcao_com_params    : 127
funcao_com_um_paramentro : 100
funcao_com_varios_paramentro : 101
funcao_main          : 2
funcao_sem_params    : 128
gcd                  : 45
igual_dp             : 17
inteiro              : 78
lcm                  : 44
lista_elsif          : 110 111 113
lista_valores        : 88 91
lista_valores_base   : 90
lista_valores_recursiva : 89
loop                 : 131
maior                : 19
maior_igual          : 21
menor                : 20
menor_igual          : 22
mod                  : 43
mult                 : 39
not_op               : 57
not_s                : 58
operando             : 63
or                   : 9
parametros           : 98 103 106
parenteses           : 72
posfixo_decremento   : 67
posfixo_incremento   : 65
pow                  : 54
prefixo_decremento   : 66
prefixo_incremento   : 64
programa             : 0
smartmatch           : 23
string               : 80
subtracao            : 33
tipo                 : 76 87 91 92
unario               : 62
variaveis            : 75
xor                  : 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . comando_com_main
    (2) comando_com_main -> . funcao_main declaracoes_main
    (3) comando_com_main -> . declaracoes comando_com_main
    (4) comando_com_main -> . comando
    (6) funcao_main -> . FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (5) comando -> . declaracoes
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 7
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    programa                       shift and go to state 1
    comando_com_main               shift and go to state 2
    funcao_main                    shift and go to state 3
    declaracoes_main               shift and go to state 4
    declaracoes                    shift and go to state 5
    comando                        shift and go to state 6
    declaracao_de_funcao           shift and go to state 10
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 1

    (0) S' -> programa .



state 2

    (1) programa -> comando_com_main .

    $end            reduce using rule 1 (programa -> comando_com_main .)


state 3

    (2) comando_com_main -> funcao_main . declaracoes_main
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    declaracoes_main               shift and go to state 87
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    declaracoes                    shift and go to state 88
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    declaracao_de_funcao           shift and go to state 10
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 4

    (117) declaracoes -> declaracoes_main .

    FUNCTION        reduce using rule 117 (declaracoes -> declaracoes_main .)
    ESCALAR         reduce using rule 117 (declaracoes -> declaracoes_main .)
    LIST            reduce using rule 117 (declaracoes -> declaracoes_main .)
    ID              reduce using rule 117 (declaracoes -> declaracoes_main .)
    IF              reduce using rule 117 (declaracoes -> declaracoes_main .)
    FOR             reduce using rule 117 (declaracoes -> declaracoes_main .)
    INTEGER         reduce using rule 117 (declaracoes -> declaracoes_main .)
    WHILE           reduce using rule 117 (declaracoes -> declaracoes_main .)
    LOOP            reduce using rule 117 (declaracoes -> declaracoes_main .)
    ABRE_CHAVE      reduce using rule 117 (declaracoes -> declaracoes_main .)
    NOT             reduce using rule 117 (declaracoes -> declaracoes_main .)
    NEGAC           reduce using rule 117 (declaracoes -> declaracoes_main .)
    ADC_DP          reduce using rule 117 (declaracoes -> declaracoes_main .)
    DECREMENTO      reduce using rule 117 (declaracoes -> declaracoes_main .)
    LPAREN          reduce using rule 117 (declaracoes -> declaracoes_main .)
    FLOAT           reduce using rule 117 (declaracoes -> declaracoes_main .)
    STRING          reduce using rule 117 (declaracoes -> declaracoes_main .)
    BOOLEAN         reduce using rule 117 (declaracoes -> declaracoes_main .)
    $end            reduce using rule 117 (declaracoes -> declaracoes_main .)
    FECHA_CHAVE     reduce using rule 117 (declaracoes -> declaracoes_main .)
    ELSE            reduce using rule 117 (declaracoes -> declaracoes_main .)
    ELSIF           reduce using rule 117 (declaracoes -> declaracoes_main .)


state 5

    (3) comando_com_main -> declaracoes . comando_com_main
    (5) comando -> declaracoes .
    (115) bloco -> declaracoes .
    (2) comando_com_main -> . funcao_main declaracoes_main
    (3) comando_com_main -> . declaracoes comando_com_main
    (4) comando_com_main -> . comando
    (6) funcao_main -> . FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (5) comando -> . declaracoes
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

  ! reduce/reduce conflict for $end resolved using rule 5 (comando -> declaracoes .)
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ESCALAR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ABRE_CHAVE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NEGAC resolved as shift
  ! shift/reduce conflict for ADC_DP resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    $end            reduce using rule 5 (comando -> declaracoes .)
    FUNCTION        shift and go to state 7
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

  ! FUNCTION        [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! ESCALAR         [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! LIST            [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! ID              [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! IF              [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! FOR             [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! INTEGER         [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! WHILE           [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! LOOP            [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! ABRE_CHAVE      [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! NOT             [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! NEGAC           [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! ADC_DP          [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! DECREMENTO      [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! LPAREN          [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! FLOAT           [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! STRING          [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! BOOLEAN         [ reduce using rule 115 (bloco -> declaracoes .) ]
  ! $end            [ reduce using rule 115 (bloco -> declaracoes .) ]

    declaracoes                    shift and go to state 5
    comando_com_main               shift and go to state 90
    funcao_main                    shift and go to state 3
    declaracoes_main               shift and go to state 4
    comando                        shift and go to state 6
    declaracao_de_funcao           shift and go to state 10
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 6

    (4) comando_com_main -> comando .

    $end            reduce using rule 4 (comando_com_main -> comando .)


state 7

    (6) funcao_main -> FUNCTION . MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (98) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    MAIN            shift and go to state 91
    ID              shift and go to state 92


state 8

    (74) parenteses -> LPAREN . exp RPAREN
    (7) exp -> . PONTO_VIRGULA
    (8) exp -> . exp_2
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    PONTO_VIRGULA   shift and go to state 94
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp                            shift and go to state 93
    exp_2                          shift and go to state 95
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 9

    (114) bloco -> ABRE_CHAVE . declaracoes FECHA_CHAVE
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    declaracoes                    shift and go to state 99
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 10

    (116) declaracoes -> declaracao_de_funcao .

    FUNCTION        reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ESCALAR         reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    LIST            reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ID              reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    IF              reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    FOR             reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    INTEGER         reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    WHILE           reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    LOOP            reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    NOT             reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    NEGAC           reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ADC_DP          reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    DECREMENTO      reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    LPAREN          reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    FLOAT           reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    STRING          reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    BOOLEAN         reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    $end            reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ELSE            reduce using rule 116 (declaracoes -> declaracao_de_funcao .)
    ELSIF           reduce using rule 116 (declaracoes -> declaracao_de_funcao .)


state 11

    (127) declaracao_de_funcao -> funcao_com_params .

    FUNCTION        reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ESCALAR         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LIST            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ID              reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    IF              reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FOR             reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    INTEGER         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    WHILE           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LOOP            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ABRE_CHAVE      reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    NOT             reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    NEGAC           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ADC_DP          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    DECREMENTO      reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LPAREN          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FLOAT           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    STRING          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    BOOLEAN         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    $end            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FECHA_CHAVE     reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ELSE            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ELSIF           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)


state 12

    (128) declaracao_de_funcao -> funcao_sem_params .

    FUNCTION        reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ESCALAR         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LIST            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ID              reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    IF              reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FOR             reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    INTEGER         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    WHILE           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LOOP            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ABRE_CHAVE      reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    NOT             reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    NEGAC           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ADC_DP          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    DECREMENTO      reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LPAREN          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FLOAT           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    STRING          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    BOOLEAN         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    $end            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FECHA_CHAVE     reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ELSE            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ELSIF           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)


state 13

    (118) declaracoes_main -> declaracao_de_atribuicao .

    FUNCTION        reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ESCALAR         reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    LIST            reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ID              reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    IF              reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    FOR             reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    INTEGER         reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    WHILE           reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    LOOP            reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ABRE_CHAVE      reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    NOT             reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    NEGAC           reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ADC_DP          reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    DECREMENTO      reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    LPAREN          reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    FLOAT           reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    STRING          reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    BOOLEAN         reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    $end            reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    FECHA_CHAVE     reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ELSE            reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)
    ELSIF           reduce using rule 118 (declaracoes_main -> declaracao_de_atribuicao .)


state 14

    (119) declaracoes_main -> declaracao_de_chamada_funcao .

    FUNCTION        reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ESCALAR         reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LIST            reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ID              reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    IF              reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FOR             reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    INTEGER         reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    WHILE           reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LOOP            reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ABRE_CHAVE      reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    NOT             reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    NEGAC           reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ADC_DP          reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    DECREMENTO      reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LPAREN          reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FLOAT           reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    STRING          reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    BOOLEAN         reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    $end            reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FECHA_CHAVE     reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ELSE            reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ELSIF           reduce using rule 119 (declaracoes_main -> declaracao_de_chamada_funcao .)


state 15

    (120) declaracoes_main -> declaracao_de_condicional .

    FUNCTION        reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ESCALAR         reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    LIST            reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ID              reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    IF              reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    FOR             reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    INTEGER         reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    WHILE           reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    LOOP            reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ABRE_CHAVE      reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    NOT             reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    NEGAC           reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ADC_DP          reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    DECREMENTO      reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    LPAREN          reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    FLOAT           reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    STRING          reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    BOOLEAN         reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    $end            reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    FECHA_CHAVE     reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ELSE            reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)
    ELSIF           reduce using rule 120 (declaracoes_main -> declaracao_de_condicional .)


state 16

    (121) declaracoes_main -> declaracao_loop .

    FUNCTION        reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ESCALAR         reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    LIST            reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ID              reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    IF              reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    FOR             reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    INTEGER         reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    WHILE           reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    LOOP            reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ABRE_CHAVE      reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    NOT             reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    NEGAC           reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ADC_DP          reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    DECREMENTO      reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    LPAREN          reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    FLOAT           reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    STRING          reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    BOOLEAN         reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    $end            reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    FECHA_CHAVE     reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ELSE            reduce using rule 121 (declaracoes_main -> declaracao_loop .)
    ELSIF           reduce using rule 121 (declaracoes_main -> declaracao_loop .)


state 17

    (122) declaracoes_main -> declaracao_de_expressao .

    FUNCTION        reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ESCALAR         reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    LIST            reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ID              reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    IF              reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    FOR             reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    INTEGER         reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    WHILE           reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    LOOP            reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ABRE_CHAVE      reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    NOT             reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    NEGAC           reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ADC_DP          reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    DECREMENTO      reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    LPAREN          reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    FLOAT           reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    STRING          reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    BOOLEAN         reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    $end            reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    FECHA_CHAVE     reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ELSE            reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)
    ELSIF           reduce using rule 122 (declaracoes_main -> declaracao_de_expressao .)


state 18

    (123) declaracoes_main -> declaracao_bloco .

    FUNCTION        reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ESCALAR         reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    LIST            reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ID              reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    IF              reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    FOR             reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    INTEGER         reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    WHILE           reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    LOOP            reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    NOT             reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    NEGAC           reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ADC_DP          reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    DECREMENTO      reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    LPAREN          reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    FLOAT           reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    STRING          reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    BOOLEAN         reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    $end            reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    FECHA_CHAVE     reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ELSE            reduce using rule 123 (declaracoes_main -> declaracao_bloco .)
    ELSIF           reduce using rule 123 (declaracoes_main -> declaracao_bloco .)


state 19

    (124) declaracoes_main -> declaracao_escalar .

    FUNCTION        reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ESCALAR         reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    LIST            reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ID              reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    IF              reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    FOR             reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    INTEGER         reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    WHILE           reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    LOOP            reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    NOT             reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    NEGAC           reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ADC_DP          reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    DECREMENTO      reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    LPAREN          reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    FLOAT           reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    STRING          reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    BOOLEAN         reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    $end            reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    FECHA_CHAVE     reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ELSE            reduce using rule 124 (declaracoes_main -> declaracao_escalar .)
    ELSIF           reduce using rule 124 (declaracoes_main -> declaracao_escalar .)


state 20

    (125) declaracoes_main -> declaracao_lista .

    FUNCTION        reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ESCALAR         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LIST            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ID              reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    IF              reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FOR             reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    INTEGER         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    WHILE           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LOOP            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ABRE_CHAVE      reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    NOT             reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    NEGAC           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ADC_DP          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    DECREMENTO      reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LPAREN          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FLOAT           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    STRING          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    BOOLEAN         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    $end            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FECHA_CHAVE     reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ELSE            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ELSIF           reduce using rule 125 (declaracoes_main -> declaracao_lista .)


state 21

    (105) chamada_funcao -> ID . LPAREN chamada_funcao_auxiliar
    (69) posfixo_incremento -> ID . ADC_DP
    (71) posfixo_decremento -> ID . DECREMENTO

    LPAREN          shift and go to state 100
    ADC_DP          shift and go to state 101
    DECREMENTO      shift and go to state 102


state 22

    (126) declaracao_de_atribuicao -> atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 103


state 23

    (129) declaracao_de_chamada_funcao -> chamada_funcao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 104


state 24

    (130) declaracao_de_condicional -> condicional .

    FUNCTION        reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ESCALAR         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LIST            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ID              reduce using rule 130 (declaracao_de_condicional -> condicional .)
    IF              reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FOR             reduce using rule 130 (declaracao_de_condicional -> condicional .)
    INTEGER         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    WHILE           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LOOP            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ABRE_CHAVE      reduce using rule 130 (declaracao_de_condicional -> condicional .)
    NOT             reduce using rule 130 (declaracao_de_condicional -> condicional .)
    NEGAC           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ADC_DP          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    DECREMENTO      reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LPAREN          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FLOAT           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    STRING          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    BOOLEAN         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    $end            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FECHA_CHAVE     reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ELSE            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ELSIF           reduce using rule 130 (declaracao_de_condicional -> condicional .)


state 25

    (131) declaracao_loop -> loop .

    FUNCTION        reduce using rule 131 (declaracao_loop -> loop .)
    ESCALAR         reduce using rule 131 (declaracao_loop -> loop .)
    LIST            reduce using rule 131 (declaracao_loop -> loop .)
    ID              reduce using rule 131 (declaracao_loop -> loop .)
    IF              reduce using rule 131 (declaracao_loop -> loop .)
    FOR             reduce using rule 131 (declaracao_loop -> loop .)
    INTEGER         reduce using rule 131 (declaracao_loop -> loop .)
    WHILE           reduce using rule 131 (declaracao_loop -> loop .)
    LOOP            reduce using rule 131 (declaracao_loop -> loop .)
    ABRE_CHAVE      reduce using rule 131 (declaracao_loop -> loop .)
    NOT             reduce using rule 131 (declaracao_loop -> loop .)
    NEGAC           reduce using rule 131 (declaracao_loop -> loop .)
    ADC_DP          reduce using rule 131 (declaracao_loop -> loop .)
    DECREMENTO      reduce using rule 131 (declaracao_loop -> loop .)
    LPAREN          reduce using rule 131 (declaracao_loop -> loop .)
    FLOAT           reduce using rule 131 (declaracao_loop -> loop .)
    STRING          reduce using rule 131 (declaracao_loop -> loop .)
    BOOLEAN         reduce using rule 131 (declaracao_loop -> loop .)
    $end            reduce using rule 131 (declaracao_loop -> loop .)
    FECHA_CHAVE     reduce using rule 131 (declaracao_loop -> loop .)
    ELSE            reduce using rule 131 (declaracao_loop -> loop .)
    ELSIF           reduce using rule 131 (declaracao_loop -> loop .)


state 26

    (132) declaracao_de_expressao -> exp_2 . PONTO_VIRGULA
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 105
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 27

    (133) declaracao_bloco -> bloco .

    FUNCTION        reduce using rule 133 (declaracao_bloco -> bloco .)
    ESCALAR         reduce using rule 133 (declaracao_bloco -> bloco .)
    LIST            reduce using rule 133 (declaracao_bloco -> bloco .)
    ID              reduce using rule 133 (declaracao_bloco -> bloco .)
    IF              reduce using rule 133 (declaracao_bloco -> bloco .)
    FOR             reduce using rule 133 (declaracao_bloco -> bloco .)
    INTEGER         reduce using rule 133 (declaracao_bloco -> bloco .)
    WHILE           reduce using rule 133 (declaracao_bloco -> bloco .)
    LOOP            reduce using rule 133 (declaracao_bloco -> bloco .)
    ABRE_CHAVE      reduce using rule 133 (declaracao_bloco -> bloco .)
    NOT             reduce using rule 133 (declaracao_bloco -> bloco .)
    NEGAC           reduce using rule 133 (declaracao_bloco -> bloco .)
    ADC_DP          reduce using rule 133 (declaracao_bloco -> bloco .)
    DECREMENTO      reduce using rule 133 (declaracao_bloco -> bloco .)
    LPAREN          reduce using rule 133 (declaracao_bloco -> bloco .)
    FLOAT           reduce using rule 133 (declaracao_bloco -> bloco .)
    STRING          reduce using rule 133 (declaracao_bloco -> bloco .)
    BOOLEAN         reduce using rule 133 (declaracao_bloco -> bloco .)
    $end            reduce using rule 133 (declaracao_bloco -> bloco .)
    FECHA_CHAVE     reduce using rule 133 (declaracao_bloco -> bloco .)


state 28

    (87) declaracao_escalar -> ESCALAR . IGUAL tipo PONTO_VIRGULA
    (104) atribuicao -> ESCALAR . IGUAL exp_2
    (86) escalar -> ESCALAR .

    IGUAL           shift and go to state 108
    POW             reduce using rule 86 (escalar -> ESCALAR .)
    MULT            reduce using rule 86 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 86 (escalar -> ESCALAR .)
    DIV             reduce using rule 86 (escalar -> ESCALAR .)
    DIVI            reduce using rule 86 (escalar -> ESCALAR .)
    MOD             reduce using rule 86 (escalar -> ESCALAR .)
    LCM             reduce using rule 86 (escalar -> ESCALAR .)
    GCD             reduce using rule 86 (escalar -> ESCALAR .)
    ADC             reduce using rule 86 (escalar -> ESCALAR .)
    SUB             reduce using rule 86 (escalar -> ESCALAR .)
    CONC            reduce using rule 86 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 86 (escalar -> ESCALAR .)
    DIF             reduce using rule 86 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 86 (escalar -> ESCALAR .)
    MENOR           reduce using rule 86 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 86 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 86 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 86 (escalar -> ESCALAR .)
    AND_S           reduce using rule 86 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 86 (escalar -> ESCALAR .)
    OR_S            reduce using rule 86 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 86 (escalar -> ESCALAR .)


state 29

    (76) completo -> tipo .

    POW             reduce using rule 76 (completo -> tipo .)
    MULT            reduce using rule 76 (completo -> tipo .)
    DIVIDE          reduce using rule 76 (completo -> tipo .)
    DIV             reduce using rule 76 (completo -> tipo .)
    DIVI            reduce using rule 76 (completo -> tipo .)
    MOD             reduce using rule 76 (completo -> tipo .)
    LCM             reduce using rule 76 (completo -> tipo .)
    GCD             reduce using rule 76 (completo -> tipo .)
    ADC             reduce using rule 76 (completo -> tipo .)
    SUB             reduce using rule 76 (completo -> tipo .)
    CONC            reduce using rule 76 (completo -> tipo .)
    IGUAL_DP        reduce using rule 76 (completo -> tipo .)
    DIF             reduce using rule 76 (completo -> tipo .)
    MAIOR           reduce using rule 76 (completo -> tipo .)
    MENOR           reduce using rule 76 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 76 (completo -> tipo .)
    LESSEQUAL       reduce using rule 76 (completo -> tipo .)
    SMARTMATCH      reduce using rule 76 (completo -> tipo .)
    AND_S           reduce using rule 76 (completo -> tipo .)
    PONTO_VIRGULA   reduce using rule 76 (completo -> tipo .)
    OR_S            reduce using rule 76 (completo -> tipo .)
    XOR_S           reduce using rule 76 (completo -> tipo .)
    RPAREN          reduce using rule 76 (completo -> tipo .)
    ABRE_CHAVE      reduce using rule 76 (completo -> tipo .)
    FUNCTION        reduce using rule 76 (completo -> tipo .)
    ESCALAR         reduce using rule 76 (completo -> tipo .)
    LIST            reduce using rule 76 (completo -> tipo .)
    ID              reduce using rule 76 (completo -> tipo .)
    IF              reduce using rule 76 (completo -> tipo .)
    FOR             reduce using rule 76 (completo -> tipo .)
    INTEGER         reduce using rule 76 (completo -> tipo .)
    WHILE           reduce using rule 76 (completo -> tipo .)
    LOOP            reduce using rule 76 (completo -> tipo .)
    NOT             reduce using rule 76 (completo -> tipo .)
    NEGAC           reduce using rule 76 (completo -> tipo .)
    ADC_DP          reduce using rule 76 (completo -> tipo .)
    DECREMENTO      reduce using rule 76 (completo -> tipo .)
    LPAREN          reduce using rule 76 (completo -> tipo .)
    FLOAT           reduce using rule 76 (completo -> tipo .)
    STRING          reduce using rule 76 (completo -> tipo .)
    BOOLEAN         reduce using rule 76 (completo -> tipo .)
    SETA            reduce using rule 76 (completo -> tipo .)


state 30

    (88) declaracao_lista -> LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 109


state 31

    (108) condicional -> IF . exp_2 bloco
    (109) condicional -> IF . exp_2 bloco ELSE bloco
    (110) condicional -> IF . exp_2 bloco lista_elsif
    (111) condicional -> IF . exp_2 bloco lista_elsif ELSE bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 110
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 32

    (93) loop -> FOR . exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 111
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 33

    (94) loop -> INTEGER . PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (82) inteiro -> INTEGER .

    PONTO           shift and go to state 112
    POW             reduce using rule 82 (inteiro -> INTEGER .)
    MULT            reduce using rule 82 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 82 (inteiro -> INTEGER .)
    DIV             reduce using rule 82 (inteiro -> INTEGER .)
    DIVI            reduce using rule 82 (inteiro -> INTEGER .)
    MOD             reduce using rule 82 (inteiro -> INTEGER .)
    LCM             reduce using rule 82 (inteiro -> INTEGER .)
    GCD             reduce using rule 82 (inteiro -> INTEGER .)
    ADC             reduce using rule 82 (inteiro -> INTEGER .)
    SUB             reduce using rule 82 (inteiro -> INTEGER .)
    CONC            reduce using rule 82 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 82 (inteiro -> INTEGER .)
    DIF             reduce using rule 82 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 82 (inteiro -> INTEGER .)
    MENOR           reduce using rule 82 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 82 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 82 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 82 (inteiro -> INTEGER .)
    AND_S           reduce using rule 82 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 82 (inteiro -> INTEGER .)
    OR_S            reduce using rule 82 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 82 (inteiro -> INTEGER .)


state 34

    (95) loop -> WHILE . exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 113
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 35

    (96) loop -> LOOP . LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> LOOP . ABRE_CHAVE comando FECHA_CHAVE

    LPAREN          shift and go to state 114
    ABRE_CHAVE      shift and go to state 115


state 36

    (9) exp_2 -> or .

    PONTO_VIRGULA   reduce using rule 9 (exp_2 -> or .)
    OR_S            reduce using rule 9 (exp_2 -> or .)
    XOR_S           reduce using rule 9 (exp_2 -> or .)
    RPAREN          reduce using rule 9 (exp_2 -> or .)
    ABRE_CHAVE      reduce using rule 9 (exp_2 -> or .)
    FUNCTION        reduce using rule 9 (exp_2 -> or .)
    ESCALAR         reduce using rule 9 (exp_2 -> or .)
    LIST            reduce using rule 9 (exp_2 -> or .)
    ID              reduce using rule 9 (exp_2 -> or .)
    IF              reduce using rule 9 (exp_2 -> or .)
    FOR             reduce using rule 9 (exp_2 -> or .)
    INTEGER         reduce using rule 9 (exp_2 -> or .)
    WHILE           reduce using rule 9 (exp_2 -> or .)
    LOOP            reduce using rule 9 (exp_2 -> or .)
    NOT             reduce using rule 9 (exp_2 -> or .)
    NEGAC           reduce using rule 9 (exp_2 -> or .)
    ADC_DP          reduce using rule 9 (exp_2 -> or .)
    DECREMENTO      reduce using rule 9 (exp_2 -> or .)
    LPAREN          reduce using rule 9 (exp_2 -> or .)
    FLOAT           reduce using rule 9 (exp_2 -> or .)
    STRING          reduce using rule 9 (exp_2 -> or .)
    BOOLEAN         reduce using rule 9 (exp_2 -> or .)
    SETA            reduce using rule 9 (exp_2 -> or .)


state 37

    (10) exp_2 -> xor .

    PONTO_VIRGULA   reduce using rule 10 (exp_2 -> xor .)
    OR_S            reduce using rule 10 (exp_2 -> xor .)
    XOR_S           reduce using rule 10 (exp_2 -> xor .)
    RPAREN          reduce using rule 10 (exp_2 -> xor .)
    ABRE_CHAVE      reduce using rule 10 (exp_2 -> xor .)
    FUNCTION        reduce using rule 10 (exp_2 -> xor .)
    ESCALAR         reduce using rule 10 (exp_2 -> xor .)
    LIST            reduce using rule 10 (exp_2 -> xor .)
    ID              reduce using rule 10 (exp_2 -> xor .)
    IF              reduce using rule 10 (exp_2 -> xor .)
    FOR             reduce using rule 10 (exp_2 -> xor .)
    INTEGER         reduce using rule 10 (exp_2 -> xor .)
    WHILE           reduce using rule 10 (exp_2 -> xor .)
    LOOP            reduce using rule 10 (exp_2 -> xor .)
    NOT             reduce using rule 10 (exp_2 -> xor .)
    NEGAC           reduce using rule 10 (exp_2 -> xor .)
    ADC_DP          reduce using rule 10 (exp_2 -> xor .)
    DECREMENTO      reduce using rule 10 (exp_2 -> xor .)
    LPAREN          reduce using rule 10 (exp_2 -> xor .)
    FLOAT           reduce using rule 10 (exp_2 -> xor .)
    STRING          reduce using rule 10 (exp_2 -> xor .)
    BOOLEAN         reduce using rule 10 (exp_2 -> xor .)
    SETA            reduce using rule 10 (exp_2 -> xor .)


state 38

    (11) exp_2 -> exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 11 (exp_2 -> exp_3 .)
    OR_S            reduce using rule 11 (exp_2 -> exp_3 .)
    XOR_S           reduce using rule 11 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 11 (exp_2 -> exp_3 .)
    ABRE_CHAVE      reduce using rule 11 (exp_2 -> exp_3 .)
    FUNCTION        reduce using rule 11 (exp_2 -> exp_3 .)
    ESCALAR         reduce using rule 11 (exp_2 -> exp_3 .)
    LIST            reduce using rule 11 (exp_2 -> exp_3 .)
    ID              reduce using rule 11 (exp_2 -> exp_3 .)
    IF              reduce using rule 11 (exp_2 -> exp_3 .)
    FOR             reduce using rule 11 (exp_2 -> exp_3 .)
    INTEGER         reduce using rule 11 (exp_2 -> exp_3 .)
    WHILE           reduce using rule 11 (exp_2 -> exp_3 .)
    LOOP            reduce using rule 11 (exp_2 -> exp_3 .)
    NOT             reduce using rule 11 (exp_2 -> exp_3 .)
    NEGAC           reduce using rule 11 (exp_2 -> exp_3 .)
    ADC_DP          reduce using rule 11 (exp_2 -> exp_3 .)
    DECREMENTO      reduce using rule 11 (exp_2 -> exp_3 .)
    LPAREN          reduce using rule 11 (exp_2 -> exp_3 .)
    FLOAT           reduce using rule 11 (exp_2 -> exp_3 .)
    STRING          reduce using rule 11 (exp_2 -> exp_3 .)
    BOOLEAN         reduce using rule 11 (exp_2 -> exp_3 .)
    SETA            reduce using rule 11 (exp_2 -> exp_3 .)
    AND_S           shift and go to state 116


state 39

    (14) exp_3 -> and .

    AND_S           reduce using rule 14 (exp_3 -> and .)
    PONTO_VIRGULA   reduce using rule 14 (exp_3 -> and .)
    OR_S            reduce using rule 14 (exp_3 -> and .)
    XOR_S           reduce using rule 14 (exp_3 -> and .)
    RPAREN          reduce using rule 14 (exp_3 -> and .)
    ABRE_CHAVE      reduce using rule 14 (exp_3 -> and .)
    FUNCTION        reduce using rule 14 (exp_3 -> and .)
    ESCALAR         reduce using rule 14 (exp_3 -> and .)
    LIST            reduce using rule 14 (exp_3 -> and .)
    ID              reduce using rule 14 (exp_3 -> and .)
    IF              reduce using rule 14 (exp_3 -> and .)
    FOR             reduce using rule 14 (exp_3 -> and .)
    INTEGER         reduce using rule 14 (exp_3 -> and .)
    WHILE           reduce using rule 14 (exp_3 -> and .)
    LOOP            reduce using rule 14 (exp_3 -> and .)
    NOT             reduce using rule 14 (exp_3 -> and .)
    NEGAC           reduce using rule 14 (exp_3 -> and .)
    ADC_DP          reduce using rule 14 (exp_3 -> and .)
    DECREMENTO      reduce using rule 14 (exp_3 -> and .)
    LPAREN          reduce using rule 14 (exp_3 -> and .)
    FLOAT           reduce using rule 14 (exp_3 -> and .)
    STRING          reduce using rule 14 (exp_3 -> and .)
    BOOLEAN         reduce using rule 14 (exp_3 -> and .)
    SETA            reduce using rule 14 (exp_3 -> and .)


state 40

    (15) exp_3 -> exp_4 .
    (25) igual_dp -> exp_4 . IGUAL_DP exp_5
    (26) dif -> exp_4 . DIF exp_5
    (27) maior -> exp_4 . MAIOR exp_5
    (28) menor -> exp_4 . MENOR exp_5
    (29) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (30) menor_igual -> exp_4 . LESSEQUAL exp_5
    (31) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 15 (exp_3 -> exp_4 .)
    PONTO_VIRGULA   reduce using rule 15 (exp_3 -> exp_4 .)
    OR_S            reduce using rule 15 (exp_3 -> exp_4 .)
    XOR_S           reduce using rule 15 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 15 (exp_3 -> exp_4 .)
    ABRE_CHAVE      reduce using rule 15 (exp_3 -> exp_4 .)
    FUNCTION        reduce using rule 15 (exp_3 -> exp_4 .)
    ESCALAR         reduce using rule 15 (exp_3 -> exp_4 .)
    LIST            reduce using rule 15 (exp_3 -> exp_4 .)
    ID              reduce using rule 15 (exp_3 -> exp_4 .)
    IF              reduce using rule 15 (exp_3 -> exp_4 .)
    FOR             reduce using rule 15 (exp_3 -> exp_4 .)
    INTEGER         reduce using rule 15 (exp_3 -> exp_4 .)
    WHILE           reduce using rule 15 (exp_3 -> exp_4 .)
    LOOP            reduce using rule 15 (exp_3 -> exp_4 .)
    NOT             reduce using rule 15 (exp_3 -> exp_4 .)
    NEGAC           reduce using rule 15 (exp_3 -> exp_4 .)
    ADC_DP          reduce using rule 15 (exp_3 -> exp_4 .)
    DECREMENTO      reduce using rule 15 (exp_3 -> exp_4 .)
    LPAREN          reduce using rule 15 (exp_3 -> exp_4 .)
    FLOAT           reduce using rule 15 (exp_3 -> exp_4 .)
    STRING          reduce using rule 15 (exp_3 -> exp_4 .)
    BOOLEAN         reduce using rule 15 (exp_3 -> exp_4 .)
    SETA            reduce using rule 15 (exp_3 -> exp_4 .)
    IGUAL_DP        shift and go to state 117
    DIF             shift and go to state 118
    MAIOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAIOR_IGL       shift and go to state 121
    LESSEQUAL       shift and go to state 122
    SMARTMATCH      shift and go to state 123


state 41

    (17) exp_4 -> igual_dp .

    IGUAL_DP        reduce using rule 17 (exp_4 -> igual_dp .)
    DIF             reduce using rule 17 (exp_4 -> igual_dp .)
    MAIOR           reduce using rule 17 (exp_4 -> igual_dp .)
    MENOR           reduce using rule 17 (exp_4 -> igual_dp .)
    MAIOR_IGL       reduce using rule 17 (exp_4 -> igual_dp .)
    LESSEQUAL       reduce using rule 17 (exp_4 -> igual_dp .)
    SMARTMATCH      reduce using rule 17 (exp_4 -> igual_dp .)
    AND_S           reduce using rule 17 (exp_4 -> igual_dp .)
    PONTO_VIRGULA   reduce using rule 17 (exp_4 -> igual_dp .)
    OR_S            reduce using rule 17 (exp_4 -> igual_dp .)
    XOR_S           reduce using rule 17 (exp_4 -> igual_dp .)
    RPAREN          reduce using rule 17 (exp_4 -> igual_dp .)
    ABRE_CHAVE      reduce using rule 17 (exp_4 -> igual_dp .)
    FUNCTION        reduce using rule 17 (exp_4 -> igual_dp .)
    ESCALAR         reduce using rule 17 (exp_4 -> igual_dp .)
    LIST            reduce using rule 17 (exp_4 -> igual_dp .)
    ID              reduce using rule 17 (exp_4 -> igual_dp .)
    IF              reduce using rule 17 (exp_4 -> igual_dp .)
    FOR             reduce using rule 17 (exp_4 -> igual_dp .)
    INTEGER         reduce using rule 17 (exp_4 -> igual_dp .)
    WHILE           reduce using rule 17 (exp_4 -> igual_dp .)
    LOOP            reduce using rule 17 (exp_4 -> igual_dp .)
    NOT             reduce using rule 17 (exp_4 -> igual_dp .)
    NEGAC           reduce using rule 17 (exp_4 -> igual_dp .)
    ADC_DP          reduce using rule 17 (exp_4 -> igual_dp .)
    DECREMENTO      reduce using rule 17 (exp_4 -> igual_dp .)
    LPAREN          reduce using rule 17 (exp_4 -> igual_dp .)
    FLOAT           reduce using rule 17 (exp_4 -> igual_dp .)
    STRING          reduce using rule 17 (exp_4 -> igual_dp .)
    BOOLEAN         reduce using rule 17 (exp_4 -> igual_dp .)
    SETA            reduce using rule 17 (exp_4 -> igual_dp .)


state 42

    (18) exp_4 -> dif .

    IGUAL_DP        reduce using rule 18 (exp_4 -> dif .)
    DIF             reduce using rule 18 (exp_4 -> dif .)
    MAIOR           reduce using rule 18 (exp_4 -> dif .)
    MENOR           reduce using rule 18 (exp_4 -> dif .)
    MAIOR_IGL       reduce using rule 18 (exp_4 -> dif .)
    LESSEQUAL       reduce using rule 18 (exp_4 -> dif .)
    SMARTMATCH      reduce using rule 18 (exp_4 -> dif .)
    AND_S           reduce using rule 18 (exp_4 -> dif .)
    PONTO_VIRGULA   reduce using rule 18 (exp_4 -> dif .)
    OR_S            reduce using rule 18 (exp_4 -> dif .)
    XOR_S           reduce using rule 18 (exp_4 -> dif .)
    RPAREN          reduce using rule 18 (exp_4 -> dif .)
    ABRE_CHAVE      reduce using rule 18 (exp_4 -> dif .)
    FUNCTION        reduce using rule 18 (exp_4 -> dif .)
    ESCALAR         reduce using rule 18 (exp_4 -> dif .)
    LIST            reduce using rule 18 (exp_4 -> dif .)
    ID              reduce using rule 18 (exp_4 -> dif .)
    IF              reduce using rule 18 (exp_4 -> dif .)
    FOR             reduce using rule 18 (exp_4 -> dif .)
    INTEGER         reduce using rule 18 (exp_4 -> dif .)
    WHILE           reduce using rule 18 (exp_4 -> dif .)
    LOOP            reduce using rule 18 (exp_4 -> dif .)
    NOT             reduce using rule 18 (exp_4 -> dif .)
    NEGAC           reduce using rule 18 (exp_4 -> dif .)
    ADC_DP          reduce using rule 18 (exp_4 -> dif .)
    DECREMENTO      reduce using rule 18 (exp_4 -> dif .)
    LPAREN          reduce using rule 18 (exp_4 -> dif .)
    FLOAT           reduce using rule 18 (exp_4 -> dif .)
    STRING          reduce using rule 18 (exp_4 -> dif .)
    BOOLEAN         reduce using rule 18 (exp_4 -> dif .)
    SETA            reduce using rule 18 (exp_4 -> dif .)


state 43

    (19) exp_4 -> maior .

    IGUAL_DP        reduce using rule 19 (exp_4 -> maior .)
    DIF             reduce using rule 19 (exp_4 -> maior .)
    MAIOR           reduce using rule 19 (exp_4 -> maior .)
    MENOR           reduce using rule 19 (exp_4 -> maior .)
    MAIOR_IGL       reduce using rule 19 (exp_4 -> maior .)
    LESSEQUAL       reduce using rule 19 (exp_4 -> maior .)
    SMARTMATCH      reduce using rule 19 (exp_4 -> maior .)
    AND_S           reduce using rule 19 (exp_4 -> maior .)
    PONTO_VIRGULA   reduce using rule 19 (exp_4 -> maior .)
    OR_S            reduce using rule 19 (exp_4 -> maior .)
    XOR_S           reduce using rule 19 (exp_4 -> maior .)
    RPAREN          reduce using rule 19 (exp_4 -> maior .)
    ABRE_CHAVE      reduce using rule 19 (exp_4 -> maior .)
    FUNCTION        reduce using rule 19 (exp_4 -> maior .)
    ESCALAR         reduce using rule 19 (exp_4 -> maior .)
    LIST            reduce using rule 19 (exp_4 -> maior .)
    ID              reduce using rule 19 (exp_4 -> maior .)
    IF              reduce using rule 19 (exp_4 -> maior .)
    FOR             reduce using rule 19 (exp_4 -> maior .)
    INTEGER         reduce using rule 19 (exp_4 -> maior .)
    WHILE           reduce using rule 19 (exp_4 -> maior .)
    LOOP            reduce using rule 19 (exp_4 -> maior .)
    NOT             reduce using rule 19 (exp_4 -> maior .)
    NEGAC           reduce using rule 19 (exp_4 -> maior .)
    ADC_DP          reduce using rule 19 (exp_4 -> maior .)
    DECREMENTO      reduce using rule 19 (exp_4 -> maior .)
    LPAREN          reduce using rule 19 (exp_4 -> maior .)
    FLOAT           reduce using rule 19 (exp_4 -> maior .)
    STRING          reduce using rule 19 (exp_4 -> maior .)
    BOOLEAN         reduce using rule 19 (exp_4 -> maior .)
    SETA            reduce using rule 19 (exp_4 -> maior .)


state 44

    (20) exp_4 -> menor .

    IGUAL_DP        reduce using rule 20 (exp_4 -> menor .)
    DIF             reduce using rule 20 (exp_4 -> menor .)
    MAIOR           reduce using rule 20 (exp_4 -> menor .)
    MENOR           reduce using rule 20 (exp_4 -> menor .)
    MAIOR_IGL       reduce using rule 20 (exp_4 -> menor .)
    LESSEQUAL       reduce using rule 20 (exp_4 -> menor .)
    SMARTMATCH      reduce using rule 20 (exp_4 -> menor .)
    AND_S           reduce using rule 20 (exp_4 -> menor .)
    PONTO_VIRGULA   reduce using rule 20 (exp_4 -> menor .)
    OR_S            reduce using rule 20 (exp_4 -> menor .)
    XOR_S           reduce using rule 20 (exp_4 -> menor .)
    RPAREN          reduce using rule 20 (exp_4 -> menor .)
    ABRE_CHAVE      reduce using rule 20 (exp_4 -> menor .)
    FUNCTION        reduce using rule 20 (exp_4 -> menor .)
    ESCALAR         reduce using rule 20 (exp_4 -> menor .)
    LIST            reduce using rule 20 (exp_4 -> menor .)
    ID              reduce using rule 20 (exp_4 -> menor .)
    IF              reduce using rule 20 (exp_4 -> menor .)
    FOR             reduce using rule 20 (exp_4 -> menor .)
    INTEGER         reduce using rule 20 (exp_4 -> menor .)
    WHILE           reduce using rule 20 (exp_4 -> menor .)
    LOOP            reduce using rule 20 (exp_4 -> menor .)
    NOT             reduce using rule 20 (exp_4 -> menor .)
    NEGAC           reduce using rule 20 (exp_4 -> menor .)
    ADC_DP          reduce using rule 20 (exp_4 -> menor .)
    DECREMENTO      reduce using rule 20 (exp_4 -> menor .)
    LPAREN          reduce using rule 20 (exp_4 -> menor .)
    FLOAT           reduce using rule 20 (exp_4 -> menor .)
    STRING          reduce using rule 20 (exp_4 -> menor .)
    BOOLEAN         reduce using rule 20 (exp_4 -> menor .)
    SETA            reduce using rule 20 (exp_4 -> menor .)


state 45

    (21) exp_4 -> maior_igual .

    IGUAL_DP        reduce using rule 21 (exp_4 -> maior_igual .)
    DIF             reduce using rule 21 (exp_4 -> maior_igual .)
    MAIOR           reduce using rule 21 (exp_4 -> maior_igual .)
    MENOR           reduce using rule 21 (exp_4 -> maior_igual .)
    MAIOR_IGL       reduce using rule 21 (exp_4 -> maior_igual .)
    LESSEQUAL       reduce using rule 21 (exp_4 -> maior_igual .)
    SMARTMATCH      reduce using rule 21 (exp_4 -> maior_igual .)
    AND_S           reduce using rule 21 (exp_4 -> maior_igual .)
    PONTO_VIRGULA   reduce using rule 21 (exp_4 -> maior_igual .)
    OR_S            reduce using rule 21 (exp_4 -> maior_igual .)
    XOR_S           reduce using rule 21 (exp_4 -> maior_igual .)
    RPAREN          reduce using rule 21 (exp_4 -> maior_igual .)
    ABRE_CHAVE      reduce using rule 21 (exp_4 -> maior_igual .)
    FUNCTION        reduce using rule 21 (exp_4 -> maior_igual .)
    ESCALAR         reduce using rule 21 (exp_4 -> maior_igual .)
    LIST            reduce using rule 21 (exp_4 -> maior_igual .)
    ID              reduce using rule 21 (exp_4 -> maior_igual .)
    IF              reduce using rule 21 (exp_4 -> maior_igual .)
    FOR             reduce using rule 21 (exp_4 -> maior_igual .)
    INTEGER         reduce using rule 21 (exp_4 -> maior_igual .)
    WHILE           reduce using rule 21 (exp_4 -> maior_igual .)
    LOOP            reduce using rule 21 (exp_4 -> maior_igual .)
    NOT             reduce using rule 21 (exp_4 -> maior_igual .)
    NEGAC           reduce using rule 21 (exp_4 -> maior_igual .)
    ADC_DP          reduce using rule 21 (exp_4 -> maior_igual .)
    DECREMENTO      reduce using rule 21 (exp_4 -> maior_igual .)
    LPAREN          reduce using rule 21 (exp_4 -> maior_igual .)
    FLOAT           reduce using rule 21 (exp_4 -> maior_igual .)
    STRING          reduce using rule 21 (exp_4 -> maior_igual .)
    BOOLEAN         reduce using rule 21 (exp_4 -> maior_igual .)
    SETA            reduce using rule 21 (exp_4 -> maior_igual .)


state 46

    (22) exp_4 -> menor_igual .

    IGUAL_DP        reduce using rule 22 (exp_4 -> menor_igual .)
    DIF             reduce using rule 22 (exp_4 -> menor_igual .)
    MAIOR           reduce using rule 22 (exp_4 -> menor_igual .)
    MENOR           reduce using rule 22 (exp_4 -> menor_igual .)
    MAIOR_IGL       reduce using rule 22 (exp_4 -> menor_igual .)
    LESSEQUAL       reduce using rule 22 (exp_4 -> menor_igual .)
    SMARTMATCH      reduce using rule 22 (exp_4 -> menor_igual .)
    AND_S           reduce using rule 22 (exp_4 -> menor_igual .)
    PONTO_VIRGULA   reduce using rule 22 (exp_4 -> menor_igual .)
    OR_S            reduce using rule 22 (exp_4 -> menor_igual .)
    XOR_S           reduce using rule 22 (exp_4 -> menor_igual .)
    RPAREN          reduce using rule 22 (exp_4 -> menor_igual .)
    ABRE_CHAVE      reduce using rule 22 (exp_4 -> menor_igual .)
    FUNCTION        reduce using rule 22 (exp_4 -> menor_igual .)
    ESCALAR         reduce using rule 22 (exp_4 -> menor_igual .)
    LIST            reduce using rule 22 (exp_4 -> menor_igual .)
    ID              reduce using rule 22 (exp_4 -> menor_igual .)
    IF              reduce using rule 22 (exp_4 -> menor_igual .)
    FOR             reduce using rule 22 (exp_4 -> menor_igual .)
    INTEGER         reduce using rule 22 (exp_4 -> menor_igual .)
    WHILE           reduce using rule 22 (exp_4 -> menor_igual .)
    LOOP            reduce using rule 22 (exp_4 -> menor_igual .)
    NOT             reduce using rule 22 (exp_4 -> menor_igual .)
    NEGAC           reduce using rule 22 (exp_4 -> menor_igual .)
    ADC_DP          reduce using rule 22 (exp_4 -> menor_igual .)
    DECREMENTO      reduce using rule 22 (exp_4 -> menor_igual .)
    LPAREN          reduce using rule 22 (exp_4 -> menor_igual .)
    FLOAT           reduce using rule 22 (exp_4 -> menor_igual .)
    STRING          reduce using rule 22 (exp_4 -> menor_igual .)
    BOOLEAN         reduce using rule 22 (exp_4 -> menor_igual .)
    SETA            reduce using rule 22 (exp_4 -> menor_igual .)


state 47

    (23) exp_4 -> smartmatch .

    IGUAL_DP        reduce using rule 23 (exp_4 -> smartmatch .)
    DIF             reduce using rule 23 (exp_4 -> smartmatch .)
    MAIOR           reduce using rule 23 (exp_4 -> smartmatch .)
    MENOR           reduce using rule 23 (exp_4 -> smartmatch .)
    MAIOR_IGL       reduce using rule 23 (exp_4 -> smartmatch .)
    LESSEQUAL       reduce using rule 23 (exp_4 -> smartmatch .)
    SMARTMATCH      reduce using rule 23 (exp_4 -> smartmatch .)
    AND_S           reduce using rule 23 (exp_4 -> smartmatch .)
    PONTO_VIRGULA   reduce using rule 23 (exp_4 -> smartmatch .)
    OR_S            reduce using rule 23 (exp_4 -> smartmatch .)
    XOR_S           reduce using rule 23 (exp_4 -> smartmatch .)
    RPAREN          reduce using rule 23 (exp_4 -> smartmatch .)
    ABRE_CHAVE      reduce using rule 23 (exp_4 -> smartmatch .)
    FUNCTION        reduce using rule 23 (exp_4 -> smartmatch .)
    ESCALAR         reduce using rule 23 (exp_4 -> smartmatch .)
    LIST            reduce using rule 23 (exp_4 -> smartmatch .)
    ID              reduce using rule 23 (exp_4 -> smartmatch .)
    IF              reduce using rule 23 (exp_4 -> smartmatch .)
    FOR             reduce using rule 23 (exp_4 -> smartmatch .)
    INTEGER         reduce using rule 23 (exp_4 -> smartmatch .)
    WHILE           reduce using rule 23 (exp_4 -> smartmatch .)
    LOOP            reduce using rule 23 (exp_4 -> smartmatch .)
    NOT             reduce using rule 23 (exp_4 -> smartmatch .)
    NEGAC           reduce using rule 23 (exp_4 -> smartmatch .)
    ADC_DP          reduce using rule 23 (exp_4 -> smartmatch .)
    DECREMENTO      reduce using rule 23 (exp_4 -> smartmatch .)
    LPAREN          reduce using rule 23 (exp_4 -> smartmatch .)
    FLOAT           reduce using rule 23 (exp_4 -> smartmatch .)
    STRING          reduce using rule 23 (exp_4 -> smartmatch .)
    BOOLEAN         reduce using rule 23 (exp_4 -> smartmatch .)
    SETA            reduce using rule 23 (exp_4 -> smartmatch .)


state 48

    (24) exp_4 -> exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 24 (exp_4 -> exp_5 .)
    DIF             reduce using rule 24 (exp_4 -> exp_5 .)
    MAIOR           reduce using rule 24 (exp_4 -> exp_5 .)
    MENOR           reduce using rule 24 (exp_4 -> exp_5 .)
    MAIOR_IGL       reduce using rule 24 (exp_4 -> exp_5 .)
    LESSEQUAL       reduce using rule 24 (exp_4 -> exp_5 .)
    SMARTMATCH      reduce using rule 24 (exp_4 -> exp_5 .)
    AND_S           reduce using rule 24 (exp_4 -> exp_5 .)
    PONTO_VIRGULA   reduce using rule 24 (exp_4 -> exp_5 .)
    OR_S            reduce using rule 24 (exp_4 -> exp_5 .)
    XOR_S           reduce using rule 24 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 24 (exp_4 -> exp_5 .)
    ABRE_CHAVE      reduce using rule 24 (exp_4 -> exp_5 .)
    FUNCTION        reduce using rule 24 (exp_4 -> exp_5 .)
    ESCALAR         reduce using rule 24 (exp_4 -> exp_5 .)
    LIST            reduce using rule 24 (exp_4 -> exp_5 .)
    ID              reduce using rule 24 (exp_4 -> exp_5 .)
    IF              reduce using rule 24 (exp_4 -> exp_5 .)
    FOR             reduce using rule 24 (exp_4 -> exp_5 .)
    INTEGER         reduce using rule 24 (exp_4 -> exp_5 .)
    WHILE           reduce using rule 24 (exp_4 -> exp_5 .)
    LOOP            reduce using rule 24 (exp_4 -> exp_5 .)
    NOT             reduce using rule 24 (exp_4 -> exp_5 .)
    NEGAC           reduce using rule 24 (exp_4 -> exp_5 .)
    ADC_DP          reduce using rule 24 (exp_4 -> exp_5 .)
    DECREMENTO      reduce using rule 24 (exp_4 -> exp_5 .)
    LPAREN          reduce using rule 24 (exp_4 -> exp_5 .)
    FLOAT           reduce using rule 24 (exp_4 -> exp_5 .)
    STRING          reduce using rule 24 (exp_4 -> exp_5 .)
    BOOLEAN         reduce using rule 24 (exp_4 -> exp_5 .)
    SETA            reduce using rule 24 (exp_4 -> exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 49

    (32) exp_5 -> adicao .

    ADC             reduce using rule 32 (exp_5 -> adicao .)
    SUB             reduce using rule 32 (exp_5 -> adicao .)
    CONC            reduce using rule 32 (exp_5 -> adicao .)
    IGUAL_DP        reduce using rule 32 (exp_5 -> adicao .)
    DIF             reduce using rule 32 (exp_5 -> adicao .)
    MAIOR           reduce using rule 32 (exp_5 -> adicao .)
    MENOR           reduce using rule 32 (exp_5 -> adicao .)
    MAIOR_IGL       reduce using rule 32 (exp_5 -> adicao .)
    LESSEQUAL       reduce using rule 32 (exp_5 -> adicao .)
    SMARTMATCH      reduce using rule 32 (exp_5 -> adicao .)
    AND_S           reduce using rule 32 (exp_5 -> adicao .)
    PONTO_VIRGULA   reduce using rule 32 (exp_5 -> adicao .)
    OR_S            reduce using rule 32 (exp_5 -> adicao .)
    XOR_S           reduce using rule 32 (exp_5 -> adicao .)
    RPAREN          reduce using rule 32 (exp_5 -> adicao .)
    ABRE_CHAVE      reduce using rule 32 (exp_5 -> adicao .)
    FUNCTION        reduce using rule 32 (exp_5 -> adicao .)
    ESCALAR         reduce using rule 32 (exp_5 -> adicao .)
    LIST            reduce using rule 32 (exp_5 -> adicao .)
    ID              reduce using rule 32 (exp_5 -> adicao .)
    IF              reduce using rule 32 (exp_5 -> adicao .)
    FOR             reduce using rule 32 (exp_5 -> adicao .)
    INTEGER         reduce using rule 32 (exp_5 -> adicao .)
    WHILE           reduce using rule 32 (exp_5 -> adicao .)
    LOOP            reduce using rule 32 (exp_5 -> adicao .)
    NOT             reduce using rule 32 (exp_5 -> adicao .)
    NEGAC           reduce using rule 32 (exp_5 -> adicao .)
    ADC_DP          reduce using rule 32 (exp_5 -> adicao .)
    DECREMENTO      reduce using rule 32 (exp_5 -> adicao .)
    LPAREN          reduce using rule 32 (exp_5 -> adicao .)
    FLOAT           reduce using rule 32 (exp_5 -> adicao .)
    STRING          reduce using rule 32 (exp_5 -> adicao .)
    BOOLEAN         reduce using rule 32 (exp_5 -> adicao .)
    SETA            reduce using rule 32 (exp_5 -> adicao .)


state 50

    (33) exp_5 -> subtracao .

    ADC             reduce using rule 33 (exp_5 -> subtracao .)
    SUB             reduce using rule 33 (exp_5 -> subtracao .)
    CONC            reduce using rule 33 (exp_5 -> subtracao .)
    IGUAL_DP        reduce using rule 33 (exp_5 -> subtracao .)
    DIF             reduce using rule 33 (exp_5 -> subtracao .)
    MAIOR           reduce using rule 33 (exp_5 -> subtracao .)
    MENOR           reduce using rule 33 (exp_5 -> subtracao .)
    MAIOR_IGL       reduce using rule 33 (exp_5 -> subtracao .)
    LESSEQUAL       reduce using rule 33 (exp_5 -> subtracao .)
    SMARTMATCH      reduce using rule 33 (exp_5 -> subtracao .)
    AND_S           reduce using rule 33 (exp_5 -> subtracao .)
    PONTO_VIRGULA   reduce using rule 33 (exp_5 -> subtracao .)
    OR_S            reduce using rule 33 (exp_5 -> subtracao .)
    XOR_S           reduce using rule 33 (exp_5 -> subtracao .)
    RPAREN          reduce using rule 33 (exp_5 -> subtracao .)
    ABRE_CHAVE      reduce using rule 33 (exp_5 -> subtracao .)
    FUNCTION        reduce using rule 33 (exp_5 -> subtracao .)
    ESCALAR         reduce using rule 33 (exp_5 -> subtracao .)
    LIST            reduce using rule 33 (exp_5 -> subtracao .)
    ID              reduce using rule 33 (exp_5 -> subtracao .)
    IF              reduce using rule 33 (exp_5 -> subtracao .)
    FOR             reduce using rule 33 (exp_5 -> subtracao .)
    INTEGER         reduce using rule 33 (exp_5 -> subtracao .)
    WHILE           reduce using rule 33 (exp_5 -> subtracao .)
    LOOP            reduce using rule 33 (exp_5 -> subtracao .)
    NOT             reduce using rule 33 (exp_5 -> subtracao .)
    NEGAC           reduce using rule 33 (exp_5 -> subtracao .)
    ADC_DP          reduce using rule 33 (exp_5 -> subtracao .)
    DECREMENTO      reduce using rule 33 (exp_5 -> subtracao .)
    LPAREN          reduce using rule 33 (exp_5 -> subtracao .)
    FLOAT           reduce using rule 33 (exp_5 -> subtracao .)
    STRING          reduce using rule 33 (exp_5 -> subtracao .)
    BOOLEAN         reduce using rule 33 (exp_5 -> subtracao .)
    SETA            reduce using rule 33 (exp_5 -> subtracao .)


state 51

    (34) exp_5 -> conc .

    ADC             reduce using rule 34 (exp_5 -> conc .)
    SUB             reduce using rule 34 (exp_5 -> conc .)
    CONC            reduce using rule 34 (exp_5 -> conc .)
    IGUAL_DP        reduce using rule 34 (exp_5 -> conc .)
    DIF             reduce using rule 34 (exp_5 -> conc .)
    MAIOR           reduce using rule 34 (exp_5 -> conc .)
    MENOR           reduce using rule 34 (exp_5 -> conc .)
    MAIOR_IGL       reduce using rule 34 (exp_5 -> conc .)
    LESSEQUAL       reduce using rule 34 (exp_5 -> conc .)
    SMARTMATCH      reduce using rule 34 (exp_5 -> conc .)
    AND_S           reduce using rule 34 (exp_5 -> conc .)
    PONTO_VIRGULA   reduce using rule 34 (exp_5 -> conc .)
    OR_S            reduce using rule 34 (exp_5 -> conc .)
    XOR_S           reduce using rule 34 (exp_5 -> conc .)
    RPAREN          reduce using rule 34 (exp_5 -> conc .)
    ABRE_CHAVE      reduce using rule 34 (exp_5 -> conc .)
    FUNCTION        reduce using rule 34 (exp_5 -> conc .)
    ESCALAR         reduce using rule 34 (exp_5 -> conc .)
    LIST            reduce using rule 34 (exp_5 -> conc .)
    ID              reduce using rule 34 (exp_5 -> conc .)
    IF              reduce using rule 34 (exp_5 -> conc .)
    FOR             reduce using rule 34 (exp_5 -> conc .)
    INTEGER         reduce using rule 34 (exp_5 -> conc .)
    WHILE           reduce using rule 34 (exp_5 -> conc .)
    LOOP            reduce using rule 34 (exp_5 -> conc .)
    NOT             reduce using rule 34 (exp_5 -> conc .)
    NEGAC           reduce using rule 34 (exp_5 -> conc .)
    ADC_DP          reduce using rule 34 (exp_5 -> conc .)
    DECREMENTO      reduce using rule 34 (exp_5 -> conc .)
    LPAREN          reduce using rule 34 (exp_5 -> conc .)
    FLOAT           reduce using rule 34 (exp_5 -> conc .)
    STRING          reduce using rule 34 (exp_5 -> conc .)
    BOOLEAN         reduce using rule 34 (exp_5 -> conc .)
    SETA            reduce using rule 34 (exp_5 -> conc .)


state 52

    (35) exp_5 -> exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 35 (exp_5 -> exp_6 .)
    SUB             reduce using rule 35 (exp_5 -> exp_6 .)
    CONC            reduce using rule 35 (exp_5 -> exp_6 .)
    IGUAL_DP        reduce using rule 35 (exp_5 -> exp_6 .)
    DIF             reduce using rule 35 (exp_5 -> exp_6 .)
    MAIOR           reduce using rule 35 (exp_5 -> exp_6 .)
    MENOR           reduce using rule 35 (exp_5 -> exp_6 .)
    MAIOR_IGL       reduce using rule 35 (exp_5 -> exp_6 .)
    LESSEQUAL       reduce using rule 35 (exp_5 -> exp_6 .)
    SMARTMATCH      reduce using rule 35 (exp_5 -> exp_6 .)
    AND_S           reduce using rule 35 (exp_5 -> exp_6 .)
    PONTO_VIRGULA   reduce using rule 35 (exp_5 -> exp_6 .)
    OR_S            reduce using rule 35 (exp_5 -> exp_6 .)
    XOR_S           reduce using rule 35 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 35 (exp_5 -> exp_6 .)
    ABRE_CHAVE      reduce using rule 35 (exp_5 -> exp_6 .)
    FUNCTION        reduce using rule 35 (exp_5 -> exp_6 .)
    ESCALAR         reduce using rule 35 (exp_5 -> exp_6 .)
    LIST            reduce using rule 35 (exp_5 -> exp_6 .)
    ID              reduce using rule 35 (exp_5 -> exp_6 .)
    IF              reduce using rule 35 (exp_5 -> exp_6 .)
    FOR             reduce using rule 35 (exp_5 -> exp_6 .)
    INTEGER         reduce using rule 35 (exp_5 -> exp_6 .)
    WHILE           reduce using rule 35 (exp_5 -> exp_6 .)
    LOOP            reduce using rule 35 (exp_5 -> exp_6 .)
    NOT             reduce using rule 35 (exp_5 -> exp_6 .)
    NEGAC           reduce using rule 35 (exp_5 -> exp_6 .)
    ADC_DP          reduce using rule 35 (exp_5 -> exp_6 .)
    DECREMENTO      reduce using rule 35 (exp_5 -> exp_6 .)
    LPAREN          reduce using rule 35 (exp_5 -> exp_6 .)
    FLOAT           reduce using rule 35 (exp_5 -> exp_6 .)
    STRING          reduce using rule 35 (exp_5 -> exp_6 .)
    BOOLEAN         reduce using rule 35 (exp_5 -> exp_6 .)
    SETA            reduce using rule 35 (exp_5 -> exp_6 .)
    MULT            shift and go to state 127
    DIVIDE          shift and go to state 128
    DIV             shift and go to state 129
    DIVI            shift and go to state 130
    MOD             shift and go to state 131
    LCM             shift and go to state 132
    GCD             shift and go to state 133


state 53

    (39) exp_6 -> mult .

    MULT            reduce using rule 39 (exp_6 -> mult .)
    DIVIDE          reduce using rule 39 (exp_6 -> mult .)
    DIV             reduce using rule 39 (exp_6 -> mult .)
    DIVI            reduce using rule 39 (exp_6 -> mult .)
    MOD             reduce using rule 39 (exp_6 -> mult .)
    LCM             reduce using rule 39 (exp_6 -> mult .)
    GCD             reduce using rule 39 (exp_6 -> mult .)
    ADC             reduce using rule 39 (exp_6 -> mult .)
    SUB             reduce using rule 39 (exp_6 -> mult .)
    CONC            reduce using rule 39 (exp_6 -> mult .)
    IGUAL_DP        reduce using rule 39 (exp_6 -> mult .)
    DIF             reduce using rule 39 (exp_6 -> mult .)
    MAIOR           reduce using rule 39 (exp_6 -> mult .)
    MENOR           reduce using rule 39 (exp_6 -> mult .)
    MAIOR_IGL       reduce using rule 39 (exp_6 -> mult .)
    LESSEQUAL       reduce using rule 39 (exp_6 -> mult .)
    SMARTMATCH      reduce using rule 39 (exp_6 -> mult .)
    AND_S           reduce using rule 39 (exp_6 -> mult .)
    PONTO_VIRGULA   reduce using rule 39 (exp_6 -> mult .)
    OR_S            reduce using rule 39 (exp_6 -> mult .)
    XOR_S           reduce using rule 39 (exp_6 -> mult .)
    RPAREN          reduce using rule 39 (exp_6 -> mult .)
    ABRE_CHAVE      reduce using rule 39 (exp_6 -> mult .)
    FUNCTION        reduce using rule 39 (exp_6 -> mult .)
    ESCALAR         reduce using rule 39 (exp_6 -> mult .)
    LIST            reduce using rule 39 (exp_6 -> mult .)
    ID              reduce using rule 39 (exp_6 -> mult .)
    IF              reduce using rule 39 (exp_6 -> mult .)
    FOR             reduce using rule 39 (exp_6 -> mult .)
    INTEGER         reduce using rule 39 (exp_6 -> mult .)
    WHILE           reduce using rule 39 (exp_6 -> mult .)
    LOOP            reduce using rule 39 (exp_6 -> mult .)
    NOT             reduce using rule 39 (exp_6 -> mult .)
    NEGAC           reduce using rule 39 (exp_6 -> mult .)
    ADC_DP          reduce using rule 39 (exp_6 -> mult .)
    DECREMENTO      reduce using rule 39 (exp_6 -> mult .)
    LPAREN          reduce using rule 39 (exp_6 -> mult .)
    FLOAT           reduce using rule 39 (exp_6 -> mult .)
    STRING          reduce using rule 39 (exp_6 -> mult .)
    BOOLEAN         reduce using rule 39 (exp_6 -> mult .)
    SETA            reduce using rule 39 (exp_6 -> mult .)


state 54

    (40) exp_6 -> divide .

    MULT            reduce using rule 40 (exp_6 -> divide .)
    DIVIDE          reduce using rule 40 (exp_6 -> divide .)
    DIV             reduce using rule 40 (exp_6 -> divide .)
    DIVI            reduce using rule 40 (exp_6 -> divide .)
    MOD             reduce using rule 40 (exp_6 -> divide .)
    LCM             reduce using rule 40 (exp_6 -> divide .)
    GCD             reduce using rule 40 (exp_6 -> divide .)
    ADC             reduce using rule 40 (exp_6 -> divide .)
    SUB             reduce using rule 40 (exp_6 -> divide .)
    CONC            reduce using rule 40 (exp_6 -> divide .)
    IGUAL_DP        reduce using rule 40 (exp_6 -> divide .)
    DIF             reduce using rule 40 (exp_6 -> divide .)
    MAIOR           reduce using rule 40 (exp_6 -> divide .)
    MENOR           reduce using rule 40 (exp_6 -> divide .)
    MAIOR_IGL       reduce using rule 40 (exp_6 -> divide .)
    LESSEQUAL       reduce using rule 40 (exp_6 -> divide .)
    SMARTMATCH      reduce using rule 40 (exp_6 -> divide .)
    AND_S           reduce using rule 40 (exp_6 -> divide .)
    PONTO_VIRGULA   reduce using rule 40 (exp_6 -> divide .)
    OR_S            reduce using rule 40 (exp_6 -> divide .)
    XOR_S           reduce using rule 40 (exp_6 -> divide .)
    RPAREN          reduce using rule 40 (exp_6 -> divide .)
    ABRE_CHAVE      reduce using rule 40 (exp_6 -> divide .)
    FUNCTION        reduce using rule 40 (exp_6 -> divide .)
    ESCALAR         reduce using rule 40 (exp_6 -> divide .)
    LIST            reduce using rule 40 (exp_6 -> divide .)
    ID              reduce using rule 40 (exp_6 -> divide .)
    IF              reduce using rule 40 (exp_6 -> divide .)
    FOR             reduce using rule 40 (exp_6 -> divide .)
    INTEGER         reduce using rule 40 (exp_6 -> divide .)
    WHILE           reduce using rule 40 (exp_6 -> divide .)
    LOOP            reduce using rule 40 (exp_6 -> divide .)
    NOT             reduce using rule 40 (exp_6 -> divide .)
    NEGAC           reduce using rule 40 (exp_6 -> divide .)
    ADC_DP          reduce using rule 40 (exp_6 -> divide .)
    DECREMENTO      reduce using rule 40 (exp_6 -> divide .)
    LPAREN          reduce using rule 40 (exp_6 -> divide .)
    FLOAT           reduce using rule 40 (exp_6 -> divide .)
    STRING          reduce using rule 40 (exp_6 -> divide .)
    BOOLEAN         reduce using rule 40 (exp_6 -> divide .)
    SETA            reduce using rule 40 (exp_6 -> divide .)


state 55

    (41) exp_6 -> div .

    MULT            reduce using rule 41 (exp_6 -> div .)
    DIVIDE          reduce using rule 41 (exp_6 -> div .)
    DIV             reduce using rule 41 (exp_6 -> div .)
    DIVI            reduce using rule 41 (exp_6 -> div .)
    MOD             reduce using rule 41 (exp_6 -> div .)
    LCM             reduce using rule 41 (exp_6 -> div .)
    GCD             reduce using rule 41 (exp_6 -> div .)
    ADC             reduce using rule 41 (exp_6 -> div .)
    SUB             reduce using rule 41 (exp_6 -> div .)
    CONC            reduce using rule 41 (exp_6 -> div .)
    IGUAL_DP        reduce using rule 41 (exp_6 -> div .)
    DIF             reduce using rule 41 (exp_6 -> div .)
    MAIOR           reduce using rule 41 (exp_6 -> div .)
    MENOR           reduce using rule 41 (exp_6 -> div .)
    MAIOR_IGL       reduce using rule 41 (exp_6 -> div .)
    LESSEQUAL       reduce using rule 41 (exp_6 -> div .)
    SMARTMATCH      reduce using rule 41 (exp_6 -> div .)
    AND_S           reduce using rule 41 (exp_6 -> div .)
    PONTO_VIRGULA   reduce using rule 41 (exp_6 -> div .)
    OR_S            reduce using rule 41 (exp_6 -> div .)
    XOR_S           reduce using rule 41 (exp_6 -> div .)
    RPAREN          reduce using rule 41 (exp_6 -> div .)
    ABRE_CHAVE      reduce using rule 41 (exp_6 -> div .)
    FUNCTION        reduce using rule 41 (exp_6 -> div .)
    ESCALAR         reduce using rule 41 (exp_6 -> div .)
    LIST            reduce using rule 41 (exp_6 -> div .)
    ID              reduce using rule 41 (exp_6 -> div .)
    IF              reduce using rule 41 (exp_6 -> div .)
    FOR             reduce using rule 41 (exp_6 -> div .)
    INTEGER         reduce using rule 41 (exp_6 -> div .)
    WHILE           reduce using rule 41 (exp_6 -> div .)
    LOOP            reduce using rule 41 (exp_6 -> div .)
    NOT             reduce using rule 41 (exp_6 -> div .)
    NEGAC           reduce using rule 41 (exp_6 -> div .)
    ADC_DP          reduce using rule 41 (exp_6 -> div .)
    DECREMENTO      reduce using rule 41 (exp_6 -> div .)
    LPAREN          reduce using rule 41 (exp_6 -> div .)
    FLOAT           reduce using rule 41 (exp_6 -> div .)
    STRING          reduce using rule 41 (exp_6 -> div .)
    BOOLEAN         reduce using rule 41 (exp_6 -> div .)
    SETA            reduce using rule 41 (exp_6 -> div .)


state 56

    (42) exp_6 -> divi .

    MULT            reduce using rule 42 (exp_6 -> divi .)
    DIVIDE          reduce using rule 42 (exp_6 -> divi .)
    DIV             reduce using rule 42 (exp_6 -> divi .)
    DIVI            reduce using rule 42 (exp_6 -> divi .)
    MOD             reduce using rule 42 (exp_6 -> divi .)
    LCM             reduce using rule 42 (exp_6 -> divi .)
    GCD             reduce using rule 42 (exp_6 -> divi .)
    ADC             reduce using rule 42 (exp_6 -> divi .)
    SUB             reduce using rule 42 (exp_6 -> divi .)
    CONC            reduce using rule 42 (exp_6 -> divi .)
    IGUAL_DP        reduce using rule 42 (exp_6 -> divi .)
    DIF             reduce using rule 42 (exp_6 -> divi .)
    MAIOR           reduce using rule 42 (exp_6 -> divi .)
    MENOR           reduce using rule 42 (exp_6 -> divi .)
    MAIOR_IGL       reduce using rule 42 (exp_6 -> divi .)
    LESSEQUAL       reduce using rule 42 (exp_6 -> divi .)
    SMARTMATCH      reduce using rule 42 (exp_6 -> divi .)
    AND_S           reduce using rule 42 (exp_6 -> divi .)
    PONTO_VIRGULA   reduce using rule 42 (exp_6 -> divi .)
    OR_S            reduce using rule 42 (exp_6 -> divi .)
    XOR_S           reduce using rule 42 (exp_6 -> divi .)
    RPAREN          reduce using rule 42 (exp_6 -> divi .)
    ABRE_CHAVE      reduce using rule 42 (exp_6 -> divi .)
    FUNCTION        reduce using rule 42 (exp_6 -> divi .)
    ESCALAR         reduce using rule 42 (exp_6 -> divi .)
    LIST            reduce using rule 42 (exp_6 -> divi .)
    ID              reduce using rule 42 (exp_6 -> divi .)
    IF              reduce using rule 42 (exp_6 -> divi .)
    FOR             reduce using rule 42 (exp_6 -> divi .)
    INTEGER         reduce using rule 42 (exp_6 -> divi .)
    WHILE           reduce using rule 42 (exp_6 -> divi .)
    LOOP            reduce using rule 42 (exp_6 -> divi .)
    NOT             reduce using rule 42 (exp_6 -> divi .)
    NEGAC           reduce using rule 42 (exp_6 -> divi .)
    ADC_DP          reduce using rule 42 (exp_6 -> divi .)
    DECREMENTO      reduce using rule 42 (exp_6 -> divi .)
    LPAREN          reduce using rule 42 (exp_6 -> divi .)
    FLOAT           reduce using rule 42 (exp_6 -> divi .)
    STRING          reduce using rule 42 (exp_6 -> divi .)
    BOOLEAN         reduce using rule 42 (exp_6 -> divi .)
    SETA            reduce using rule 42 (exp_6 -> divi .)


state 57

    (43) exp_6 -> mod .

    MULT            reduce using rule 43 (exp_6 -> mod .)
    DIVIDE          reduce using rule 43 (exp_6 -> mod .)
    DIV             reduce using rule 43 (exp_6 -> mod .)
    DIVI            reduce using rule 43 (exp_6 -> mod .)
    MOD             reduce using rule 43 (exp_6 -> mod .)
    LCM             reduce using rule 43 (exp_6 -> mod .)
    GCD             reduce using rule 43 (exp_6 -> mod .)
    ADC             reduce using rule 43 (exp_6 -> mod .)
    SUB             reduce using rule 43 (exp_6 -> mod .)
    CONC            reduce using rule 43 (exp_6 -> mod .)
    IGUAL_DP        reduce using rule 43 (exp_6 -> mod .)
    DIF             reduce using rule 43 (exp_6 -> mod .)
    MAIOR           reduce using rule 43 (exp_6 -> mod .)
    MENOR           reduce using rule 43 (exp_6 -> mod .)
    MAIOR_IGL       reduce using rule 43 (exp_6 -> mod .)
    LESSEQUAL       reduce using rule 43 (exp_6 -> mod .)
    SMARTMATCH      reduce using rule 43 (exp_6 -> mod .)
    AND_S           reduce using rule 43 (exp_6 -> mod .)
    PONTO_VIRGULA   reduce using rule 43 (exp_6 -> mod .)
    OR_S            reduce using rule 43 (exp_6 -> mod .)
    XOR_S           reduce using rule 43 (exp_6 -> mod .)
    RPAREN          reduce using rule 43 (exp_6 -> mod .)
    ABRE_CHAVE      reduce using rule 43 (exp_6 -> mod .)
    FUNCTION        reduce using rule 43 (exp_6 -> mod .)
    ESCALAR         reduce using rule 43 (exp_6 -> mod .)
    LIST            reduce using rule 43 (exp_6 -> mod .)
    ID              reduce using rule 43 (exp_6 -> mod .)
    IF              reduce using rule 43 (exp_6 -> mod .)
    FOR             reduce using rule 43 (exp_6 -> mod .)
    INTEGER         reduce using rule 43 (exp_6 -> mod .)
    WHILE           reduce using rule 43 (exp_6 -> mod .)
    LOOP            reduce using rule 43 (exp_6 -> mod .)
    NOT             reduce using rule 43 (exp_6 -> mod .)
    NEGAC           reduce using rule 43 (exp_6 -> mod .)
    ADC_DP          reduce using rule 43 (exp_6 -> mod .)
    DECREMENTO      reduce using rule 43 (exp_6 -> mod .)
    LPAREN          reduce using rule 43 (exp_6 -> mod .)
    FLOAT           reduce using rule 43 (exp_6 -> mod .)
    STRING          reduce using rule 43 (exp_6 -> mod .)
    BOOLEAN         reduce using rule 43 (exp_6 -> mod .)
    SETA            reduce using rule 43 (exp_6 -> mod .)


state 58

    (44) exp_6 -> lcm .

    MULT            reduce using rule 44 (exp_6 -> lcm .)
    DIVIDE          reduce using rule 44 (exp_6 -> lcm .)
    DIV             reduce using rule 44 (exp_6 -> lcm .)
    DIVI            reduce using rule 44 (exp_6 -> lcm .)
    MOD             reduce using rule 44 (exp_6 -> lcm .)
    LCM             reduce using rule 44 (exp_6 -> lcm .)
    GCD             reduce using rule 44 (exp_6 -> lcm .)
    ADC             reduce using rule 44 (exp_6 -> lcm .)
    SUB             reduce using rule 44 (exp_6 -> lcm .)
    CONC            reduce using rule 44 (exp_6 -> lcm .)
    IGUAL_DP        reduce using rule 44 (exp_6 -> lcm .)
    DIF             reduce using rule 44 (exp_6 -> lcm .)
    MAIOR           reduce using rule 44 (exp_6 -> lcm .)
    MENOR           reduce using rule 44 (exp_6 -> lcm .)
    MAIOR_IGL       reduce using rule 44 (exp_6 -> lcm .)
    LESSEQUAL       reduce using rule 44 (exp_6 -> lcm .)
    SMARTMATCH      reduce using rule 44 (exp_6 -> lcm .)
    AND_S           reduce using rule 44 (exp_6 -> lcm .)
    PONTO_VIRGULA   reduce using rule 44 (exp_6 -> lcm .)
    OR_S            reduce using rule 44 (exp_6 -> lcm .)
    XOR_S           reduce using rule 44 (exp_6 -> lcm .)
    RPAREN          reduce using rule 44 (exp_6 -> lcm .)
    ABRE_CHAVE      reduce using rule 44 (exp_6 -> lcm .)
    FUNCTION        reduce using rule 44 (exp_6 -> lcm .)
    ESCALAR         reduce using rule 44 (exp_6 -> lcm .)
    LIST            reduce using rule 44 (exp_6 -> lcm .)
    ID              reduce using rule 44 (exp_6 -> lcm .)
    IF              reduce using rule 44 (exp_6 -> lcm .)
    FOR             reduce using rule 44 (exp_6 -> lcm .)
    INTEGER         reduce using rule 44 (exp_6 -> lcm .)
    WHILE           reduce using rule 44 (exp_6 -> lcm .)
    LOOP            reduce using rule 44 (exp_6 -> lcm .)
    NOT             reduce using rule 44 (exp_6 -> lcm .)
    NEGAC           reduce using rule 44 (exp_6 -> lcm .)
    ADC_DP          reduce using rule 44 (exp_6 -> lcm .)
    DECREMENTO      reduce using rule 44 (exp_6 -> lcm .)
    LPAREN          reduce using rule 44 (exp_6 -> lcm .)
    FLOAT           reduce using rule 44 (exp_6 -> lcm .)
    STRING          reduce using rule 44 (exp_6 -> lcm .)
    BOOLEAN         reduce using rule 44 (exp_6 -> lcm .)
    SETA            reduce using rule 44 (exp_6 -> lcm .)


state 59

    (45) exp_6 -> gcd .

    MULT            reduce using rule 45 (exp_6 -> gcd .)
    DIVIDE          reduce using rule 45 (exp_6 -> gcd .)
    DIV             reduce using rule 45 (exp_6 -> gcd .)
    DIVI            reduce using rule 45 (exp_6 -> gcd .)
    MOD             reduce using rule 45 (exp_6 -> gcd .)
    LCM             reduce using rule 45 (exp_6 -> gcd .)
    GCD             reduce using rule 45 (exp_6 -> gcd .)
    ADC             reduce using rule 45 (exp_6 -> gcd .)
    SUB             reduce using rule 45 (exp_6 -> gcd .)
    CONC            reduce using rule 45 (exp_6 -> gcd .)
    IGUAL_DP        reduce using rule 45 (exp_6 -> gcd .)
    DIF             reduce using rule 45 (exp_6 -> gcd .)
    MAIOR           reduce using rule 45 (exp_6 -> gcd .)
    MENOR           reduce using rule 45 (exp_6 -> gcd .)
    MAIOR_IGL       reduce using rule 45 (exp_6 -> gcd .)
    LESSEQUAL       reduce using rule 45 (exp_6 -> gcd .)
    SMARTMATCH      reduce using rule 45 (exp_6 -> gcd .)
    AND_S           reduce using rule 45 (exp_6 -> gcd .)
    PONTO_VIRGULA   reduce using rule 45 (exp_6 -> gcd .)
    OR_S            reduce using rule 45 (exp_6 -> gcd .)
    XOR_S           reduce using rule 45 (exp_6 -> gcd .)
    RPAREN          reduce using rule 45 (exp_6 -> gcd .)
    ABRE_CHAVE      reduce using rule 45 (exp_6 -> gcd .)
    FUNCTION        reduce using rule 45 (exp_6 -> gcd .)
    ESCALAR         reduce using rule 45 (exp_6 -> gcd .)
    LIST            reduce using rule 45 (exp_6 -> gcd .)
    ID              reduce using rule 45 (exp_6 -> gcd .)
    IF              reduce using rule 45 (exp_6 -> gcd .)
    FOR             reduce using rule 45 (exp_6 -> gcd .)
    INTEGER         reduce using rule 45 (exp_6 -> gcd .)
    WHILE           reduce using rule 45 (exp_6 -> gcd .)
    LOOP            reduce using rule 45 (exp_6 -> gcd .)
    NOT             reduce using rule 45 (exp_6 -> gcd .)
    NEGAC           reduce using rule 45 (exp_6 -> gcd .)
    ADC_DP          reduce using rule 45 (exp_6 -> gcd .)
    DECREMENTO      reduce using rule 45 (exp_6 -> gcd .)
    LPAREN          reduce using rule 45 (exp_6 -> gcd .)
    FLOAT           reduce using rule 45 (exp_6 -> gcd .)
    STRING          reduce using rule 45 (exp_6 -> gcd .)
    BOOLEAN         reduce using rule 45 (exp_6 -> gcd .)
    SETA            reduce using rule 45 (exp_6 -> gcd .)


state 60

    (46) exp_6 -> exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 46 (exp_6 -> exp_7 .)
    DIVIDE          reduce using rule 46 (exp_6 -> exp_7 .)
    DIV             reduce using rule 46 (exp_6 -> exp_7 .)
    DIVI            reduce using rule 46 (exp_6 -> exp_7 .)
    MOD             reduce using rule 46 (exp_6 -> exp_7 .)
    LCM             reduce using rule 46 (exp_6 -> exp_7 .)
    GCD             reduce using rule 46 (exp_6 -> exp_7 .)
    ADC             reduce using rule 46 (exp_6 -> exp_7 .)
    SUB             reduce using rule 46 (exp_6 -> exp_7 .)
    CONC            reduce using rule 46 (exp_6 -> exp_7 .)
    IGUAL_DP        reduce using rule 46 (exp_6 -> exp_7 .)
    DIF             reduce using rule 46 (exp_6 -> exp_7 .)
    MAIOR           reduce using rule 46 (exp_6 -> exp_7 .)
    MENOR           reduce using rule 46 (exp_6 -> exp_7 .)
    MAIOR_IGL       reduce using rule 46 (exp_6 -> exp_7 .)
    LESSEQUAL       reduce using rule 46 (exp_6 -> exp_7 .)
    SMARTMATCH      reduce using rule 46 (exp_6 -> exp_7 .)
    AND_S           reduce using rule 46 (exp_6 -> exp_7 .)
    PONTO_VIRGULA   reduce using rule 46 (exp_6 -> exp_7 .)
    OR_S            reduce using rule 46 (exp_6 -> exp_7 .)
    XOR_S           reduce using rule 46 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 46 (exp_6 -> exp_7 .)
    ABRE_CHAVE      reduce using rule 46 (exp_6 -> exp_7 .)
    FUNCTION        reduce using rule 46 (exp_6 -> exp_7 .)
    ESCALAR         reduce using rule 46 (exp_6 -> exp_7 .)
    LIST            reduce using rule 46 (exp_6 -> exp_7 .)
    ID              reduce using rule 46 (exp_6 -> exp_7 .)
    IF              reduce using rule 46 (exp_6 -> exp_7 .)
    FOR             reduce using rule 46 (exp_6 -> exp_7 .)
    INTEGER         reduce using rule 46 (exp_6 -> exp_7 .)
    WHILE           reduce using rule 46 (exp_6 -> exp_7 .)
    LOOP            reduce using rule 46 (exp_6 -> exp_7 .)
    NOT             reduce using rule 46 (exp_6 -> exp_7 .)
    NEGAC           reduce using rule 46 (exp_6 -> exp_7 .)
    ADC_DP          reduce using rule 46 (exp_6 -> exp_7 .)
    DECREMENTO      reduce using rule 46 (exp_6 -> exp_7 .)
    LPAREN          reduce using rule 46 (exp_6 -> exp_7 .)
    FLOAT           reduce using rule 46 (exp_6 -> exp_7 .)
    STRING          reduce using rule 46 (exp_6 -> exp_7 .)
    BOOLEAN         reduce using rule 46 (exp_6 -> exp_7 .)
    SETA            reduce using rule 46 (exp_6 -> exp_7 .)
    POW             shift and go to state 134


state 61

    (54) exp_7 -> pow .

    POW             reduce using rule 54 (exp_7 -> pow .)
    MULT            reduce using rule 54 (exp_7 -> pow .)
    DIVIDE          reduce using rule 54 (exp_7 -> pow .)
    DIV             reduce using rule 54 (exp_7 -> pow .)
    DIVI            reduce using rule 54 (exp_7 -> pow .)
    MOD             reduce using rule 54 (exp_7 -> pow .)
    LCM             reduce using rule 54 (exp_7 -> pow .)
    GCD             reduce using rule 54 (exp_7 -> pow .)
    ADC             reduce using rule 54 (exp_7 -> pow .)
    SUB             reduce using rule 54 (exp_7 -> pow .)
    CONC            reduce using rule 54 (exp_7 -> pow .)
    IGUAL_DP        reduce using rule 54 (exp_7 -> pow .)
    DIF             reduce using rule 54 (exp_7 -> pow .)
    MAIOR           reduce using rule 54 (exp_7 -> pow .)
    MENOR           reduce using rule 54 (exp_7 -> pow .)
    MAIOR_IGL       reduce using rule 54 (exp_7 -> pow .)
    LESSEQUAL       reduce using rule 54 (exp_7 -> pow .)
    SMARTMATCH      reduce using rule 54 (exp_7 -> pow .)
    AND_S           reduce using rule 54 (exp_7 -> pow .)
    PONTO_VIRGULA   reduce using rule 54 (exp_7 -> pow .)
    OR_S            reduce using rule 54 (exp_7 -> pow .)
    XOR_S           reduce using rule 54 (exp_7 -> pow .)
    RPAREN          reduce using rule 54 (exp_7 -> pow .)
    ABRE_CHAVE      reduce using rule 54 (exp_7 -> pow .)
    FUNCTION        reduce using rule 54 (exp_7 -> pow .)
    ESCALAR         reduce using rule 54 (exp_7 -> pow .)
    LIST            reduce using rule 54 (exp_7 -> pow .)
    ID              reduce using rule 54 (exp_7 -> pow .)
    IF              reduce using rule 54 (exp_7 -> pow .)
    FOR             reduce using rule 54 (exp_7 -> pow .)
    INTEGER         reduce using rule 54 (exp_7 -> pow .)
    WHILE           reduce using rule 54 (exp_7 -> pow .)
    LOOP            reduce using rule 54 (exp_7 -> pow .)
    NOT             reduce using rule 54 (exp_7 -> pow .)
    NEGAC           reduce using rule 54 (exp_7 -> pow .)
    ADC_DP          reduce using rule 54 (exp_7 -> pow .)
    DECREMENTO      reduce using rule 54 (exp_7 -> pow .)
    LPAREN          reduce using rule 54 (exp_7 -> pow .)
    FLOAT           reduce using rule 54 (exp_7 -> pow .)
    STRING          reduce using rule 54 (exp_7 -> pow .)
    BOOLEAN         reduce using rule 54 (exp_7 -> pow .)
    SETA            reduce using rule 54 (exp_7 -> pow .)


state 62

    (55) exp_7 -> exp_8 .

    POW             reduce using rule 55 (exp_7 -> exp_8 .)
    MULT            reduce using rule 55 (exp_7 -> exp_8 .)
    DIVIDE          reduce using rule 55 (exp_7 -> exp_8 .)
    DIV             reduce using rule 55 (exp_7 -> exp_8 .)
    DIVI            reduce using rule 55 (exp_7 -> exp_8 .)
    MOD             reduce using rule 55 (exp_7 -> exp_8 .)
    LCM             reduce using rule 55 (exp_7 -> exp_8 .)
    GCD             reduce using rule 55 (exp_7 -> exp_8 .)
    ADC             reduce using rule 55 (exp_7 -> exp_8 .)
    SUB             reduce using rule 55 (exp_7 -> exp_8 .)
    CONC            reduce using rule 55 (exp_7 -> exp_8 .)
    IGUAL_DP        reduce using rule 55 (exp_7 -> exp_8 .)
    DIF             reduce using rule 55 (exp_7 -> exp_8 .)
    MAIOR           reduce using rule 55 (exp_7 -> exp_8 .)
    MENOR           reduce using rule 55 (exp_7 -> exp_8 .)
    MAIOR_IGL       reduce using rule 55 (exp_7 -> exp_8 .)
    LESSEQUAL       reduce using rule 55 (exp_7 -> exp_8 .)
    SMARTMATCH      reduce using rule 55 (exp_7 -> exp_8 .)
    AND_S           reduce using rule 55 (exp_7 -> exp_8 .)
    PONTO_VIRGULA   reduce using rule 55 (exp_7 -> exp_8 .)
    OR_S            reduce using rule 55 (exp_7 -> exp_8 .)
    XOR_S           reduce using rule 55 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 55 (exp_7 -> exp_8 .)
    ABRE_CHAVE      reduce using rule 55 (exp_7 -> exp_8 .)
    FUNCTION        reduce using rule 55 (exp_7 -> exp_8 .)
    ESCALAR         reduce using rule 55 (exp_7 -> exp_8 .)
    LIST            reduce using rule 55 (exp_7 -> exp_8 .)
    ID              reduce using rule 55 (exp_7 -> exp_8 .)
    IF              reduce using rule 55 (exp_7 -> exp_8 .)
    FOR             reduce using rule 55 (exp_7 -> exp_8 .)
    INTEGER         reduce using rule 55 (exp_7 -> exp_8 .)
    WHILE           reduce using rule 55 (exp_7 -> exp_8 .)
    LOOP            reduce using rule 55 (exp_7 -> exp_8 .)
    NOT             reduce using rule 55 (exp_7 -> exp_8 .)
    NEGAC           reduce using rule 55 (exp_7 -> exp_8 .)
    ADC_DP          reduce using rule 55 (exp_7 -> exp_8 .)
    DECREMENTO      reduce using rule 55 (exp_7 -> exp_8 .)
    LPAREN          reduce using rule 55 (exp_7 -> exp_8 .)
    FLOAT           reduce using rule 55 (exp_7 -> exp_8 .)
    STRING          reduce using rule 55 (exp_7 -> exp_8 .)
    BOOLEAN         reduce using rule 55 (exp_7 -> exp_8 .)
    SETA            reduce using rule 55 (exp_7 -> exp_8 .)


state 63

    (57) exp_8 -> not_op .

    POW             reduce using rule 57 (exp_8 -> not_op .)
    MULT            reduce using rule 57 (exp_8 -> not_op .)
    DIVIDE          reduce using rule 57 (exp_8 -> not_op .)
    DIV             reduce using rule 57 (exp_8 -> not_op .)
    DIVI            reduce using rule 57 (exp_8 -> not_op .)
    MOD             reduce using rule 57 (exp_8 -> not_op .)
    LCM             reduce using rule 57 (exp_8 -> not_op .)
    GCD             reduce using rule 57 (exp_8 -> not_op .)
    ADC             reduce using rule 57 (exp_8 -> not_op .)
    SUB             reduce using rule 57 (exp_8 -> not_op .)
    CONC            reduce using rule 57 (exp_8 -> not_op .)
    IGUAL_DP        reduce using rule 57 (exp_8 -> not_op .)
    DIF             reduce using rule 57 (exp_8 -> not_op .)
    MAIOR           reduce using rule 57 (exp_8 -> not_op .)
    MENOR           reduce using rule 57 (exp_8 -> not_op .)
    MAIOR_IGL       reduce using rule 57 (exp_8 -> not_op .)
    LESSEQUAL       reduce using rule 57 (exp_8 -> not_op .)
    SMARTMATCH      reduce using rule 57 (exp_8 -> not_op .)
    AND_S           reduce using rule 57 (exp_8 -> not_op .)
    PONTO_VIRGULA   reduce using rule 57 (exp_8 -> not_op .)
    OR_S            reduce using rule 57 (exp_8 -> not_op .)
    XOR_S           reduce using rule 57 (exp_8 -> not_op .)
    RPAREN          reduce using rule 57 (exp_8 -> not_op .)
    ABRE_CHAVE      reduce using rule 57 (exp_8 -> not_op .)
    FUNCTION        reduce using rule 57 (exp_8 -> not_op .)
    ESCALAR         reduce using rule 57 (exp_8 -> not_op .)
    LIST            reduce using rule 57 (exp_8 -> not_op .)
    ID              reduce using rule 57 (exp_8 -> not_op .)
    IF              reduce using rule 57 (exp_8 -> not_op .)
    FOR             reduce using rule 57 (exp_8 -> not_op .)
    INTEGER         reduce using rule 57 (exp_8 -> not_op .)
    WHILE           reduce using rule 57 (exp_8 -> not_op .)
    LOOP            reduce using rule 57 (exp_8 -> not_op .)
    NOT             reduce using rule 57 (exp_8 -> not_op .)
    NEGAC           reduce using rule 57 (exp_8 -> not_op .)
    ADC_DP          reduce using rule 57 (exp_8 -> not_op .)
    DECREMENTO      reduce using rule 57 (exp_8 -> not_op .)
    LPAREN          reduce using rule 57 (exp_8 -> not_op .)
    FLOAT           reduce using rule 57 (exp_8 -> not_op .)
    STRING          reduce using rule 57 (exp_8 -> not_op .)
    BOOLEAN         reduce using rule 57 (exp_8 -> not_op .)
    SETA            reduce using rule 57 (exp_8 -> not_op .)


state 64

    (58) exp_8 -> not_s .

    POW             reduce using rule 58 (exp_8 -> not_s .)
    MULT            reduce using rule 58 (exp_8 -> not_s .)
    DIVIDE          reduce using rule 58 (exp_8 -> not_s .)
    DIV             reduce using rule 58 (exp_8 -> not_s .)
    DIVI            reduce using rule 58 (exp_8 -> not_s .)
    MOD             reduce using rule 58 (exp_8 -> not_s .)
    LCM             reduce using rule 58 (exp_8 -> not_s .)
    GCD             reduce using rule 58 (exp_8 -> not_s .)
    ADC             reduce using rule 58 (exp_8 -> not_s .)
    SUB             reduce using rule 58 (exp_8 -> not_s .)
    CONC            reduce using rule 58 (exp_8 -> not_s .)
    IGUAL_DP        reduce using rule 58 (exp_8 -> not_s .)
    DIF             reduce using rule 58 (exp_8 -> not_s .)
    MAIOR           reduce using rule 58 (exp_8 -> not_s .)
    MENOR           reduce using rule 58 (exp_8 -> not_s .)
    MAIOR_IGL       reduce using rule 58 (exp_8 -> not_s .)
    LESSEQUAL       reduce using rule 58 (exp_8 -> not_s .)
    SMARTMATCH      reduce using rule 58 (exp_8 -> not_s .)
    AND_S           reduce using rule 58 (exp_8 -> not_s .)
    PONTO_VIRGULA   reduce using rule 58 (exp_8 -> not_s .)
    OR_S            reduce using rule 58 (exp_8 -> not_s .)
    XOR_S           reduce using rule 58 (exp_8 -> not_s .)
    RPAREN          reduce using rule 58 (exp_8 -> not_s .)
    ABRE_CHAVE      reduce using rule 58 (exp_8 -> not_s .)
    FUNCTION        reduce using rule 58 (exp_8 -> not_s .)
    ESCALAR         reduce using rule 58 (exp_8 -> not_s .)
    LIST            reduce using rule 58 (exp_8 -> not_s .)
    ID              reduce using rule 58 (exp_8 -> not_s .)
    IF              reduce using rule 58 (exp_8 -> not_s .)
    FOR             reduce using rule 58 (exp_8 -> not_s .)
    INTEGER         reduce using rule 58 (exp_8 -> not_s .)
    WHILE           reduce using rule 58 (exp_8 -> not_s .)
    LOOP            reduce using rule 58 (exp_8 -> not_s .)
    NOT             reduce using rule 58 (exp_8 -> not_s .)
    NEGAC           reduce using rule 58 (exp_8 -> not_s .)
    ADC_DP          reduce using rule 58 (exp_8 -> not_s .)
    DECREMENTO      reduce using rule 58 (exp_8 -> not_s .)
    LPAREN          reduce using rule 58 (exp_8 -> not_s .)
    FLOAT           reduce using rule 58 (exp_8 -> not_s .)
    STRING          reduce using rule 58 (exp_8 -> not_s .)
    BOOLEAN         reduce using rule 58 (exp_8 -> not_s .)
    SETA            reduce using rule 58 (exp_8 -> not_s .)


state 65

    (59) exp_8 -> exp_9 .

    POW             reduce using rule 59 (exp_8 -> exp_9 .)
    MULT            reduce using rule 59 (exp_8 -> exp_9 .)
    DIVIDE          reduce using rule 59 (exp_8 -> exp_9 .)
    DIV             reduce using rule 59 (exp_8 -> exp_9 .)
    DIVI            reduce using rule 59 (exp_8 -> exp_9 .)
    MOD             reduce using rule 59 (exp_8 -> exp_9 .)
    LCM             reduce using rule 59 (exp_8 -> exp_9 .)
    GCD             reduce using rule 59 (exp_8 -> exp_9 .)
    ADC             reduce using rule 59 (exp_8 -> exp_9 .)
    SUB             reduce using rule 59 (exp_8 -> exp_9 .)
    CONC            reduce using rule 59 (exp_8 -> exp_9 .)
    IGUAL_DP        reduce using rule 59 (exp_8 -> exp_9 .)
    DIF             reduce using rule 59 (exp_8 -> exp_9 .)
    MAIOR           reduce using rule 59 (exp_8 -> exp_9 .)
    MENOR           reduce using rule 59 (exp_8 -> exp_9 .)
    MAIOR_IGL       reduce using rule 59 (exp_8 -> exp_9 .)
    LESSEQUAL       reduce using rule 59 (exp_8 -> exp_9 .)
    SMARTMATCH      reduce using rule 59 (exp_8 -> exp_9 .)
    AND_S           reduce using rule 59 (exp_8 -> exp_9 .)
    PONTO_VIRGULA   reduce using rule 59 (exp_8 -> exp_9 .)
    OR_S            reduce using rule 59 (exp_8 -> exp_9 .)
    XOR_S           reduce using rule 59 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 59 (exp_8 -> exp_9 .)
    ABRE_CHAVE      reduce using rule 59 (exp_8 -> exp_9 .)
    FUNCTION        reduce using rule 59 (exp_8 -> exp_9 .)
    ESCALAR         reduce using rule 59 (exp_8 -> exp_9 .)
    LIST            reduce using rule 59 (exp_8 -> exp_9 .)
    ID              reduce using rule 59 (exp_8 -> exp_9 .)
    IF              reduce using rule 59 (exp_8 -> exp_9 .)
    FOR             reduce using rule 59 (exp_8 -> exp_9 .)
    INTEGER         reduce using rule 59 (exp_8 -> exp_9 .)
    WHILE           reduce using rule 59 (exp_8 -> exp_9 .)
    LOOP            reduce using rule 59 (exp_8 -> exp_9 .)
    NOT             reduce using rule 59 (exp_8 -> exp_9 .)
    NEGAC           reduce using rule 59 (exp_8 -> exp_9 .)
    ADC_DP          reduce using rule 59 (exp_8 -> exp_9 .)
    DECREMENTO      reduce using rule 59 (exp_8 -> exp_9 .)
    LPAREN          reduce using rule 59 (exp_8 -> exp_9 .)
    FLOAT           reduce using rule 59 (exp_8 -> exp_9 .)
    STRING          reduce using rule 59 (exp_8 -> exp_9 .)
    BOOLEAN         reduce using rule 59 (exp_8 -> exp_9 .)
    SETA            reduce using rule 59 (exp_8 -> exp_9 .)


state 66

    (60) not_op -> NOT . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_8                          shift and go to state 135
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 67

    (61) not_s -> NEGAC . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_8                          shift and go to state 136
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 68

    (62) exp_9 -> unario .

    POW             reduce using rule 62 (exp_9 -> unario .)
    MULT            reduce using rule 62 (exp_9 -> unario .)
    DIVIDE          reduce using rule 62 (exp_9 -> unario .)
    DIV             reduce using rule 62 (exp_9 -> unario .)
    DIVI            reduce using rule 62 (exp_9 -> unario .)
    MOD             reduce using rule 62 (exp_9 -> unario .)
    LCM             reduce using rule 62 (exp_9 -> unario .)
    GCD             reduce using rule 62 (exp_9 -> unario .)
    ADC             reduce using rule 62 (exp_9 -> unario .)
    SUB             reduce using rule 62 (exp_9 -> unario .)
    CONC            reduce using rule 62 (exp_9 -> unario .)
    IGUAL_DP        reduce using rule 62 (exp_9 -> unario .)
    DIF             reduce using rule 62 (exp_9 -> unario .)
    MAIOR           reduce using rule 62 (exp_9 -> unario .)
    MENOR           reduce using rule 62 (exp_9 -> unario .)
    MAIOR_IGL       reduce using rule 62 (exp_9 -> unario .)
    LESSEQUAL       reduce using rule 62 (exp_9 -> unario .)
    SMARTMATCH      reduce using rule 62 (exp_9 -> unario .)
    AND_S           reduce using rule 62 (exp_9 -> unario .)
    PONTO_VIRGULA   reduce using rule 62 (exp_9 -> unario .)
    OR_S            reduce using rule 62 (exp_9 -> unario .)
    XOR_S           reduce using rule 62 (exp_9 -> unario .)
    RPAREN          reduce using rule 62 (exp_9 -> unario .)
    ABRE_CHAVE      reduce using rule 62 (exp_9 -> unario .)
    FUNCTION        reduce using rule 62 (exp_9 -> unario .)
    ESCALAR         reduce using rule 62 (exp_9 -> unario .)
    LIST            reduce using rule 62 (exp_9 -> unario .)
    ID              reduce using rule 62 (exp_9 -> unario .)
    IF              reduce using rule 62 (exp_9 -> unario .)
    FOR             reduce using rule 62 (exp_9 -> unario .)
    INTEGER         reduce using rule 62 (exp_9 -> unario .)
    WHILE           reduce using rule 62 (exp_9 -> unario .)
    LOOP            reduce using rule 62 (exp_9 -> unario .)
    NOT             reduce using rule 62 (exp_9 -> unario .)
    NEGAC           reduce using rule 62 (exp_9 -> unario .)
    ADC_DP          reduce using rule 62 (exp_9 -> unario .)
    DECREMENTO      reduce using rule 62 (exp_9 -> unario .)
    LPAREN          reduce using rule 62 (exp_9 -> unario .)
    FLOAT           reduce using rule 62 (exp_9 -> unario .)
    STRING          reduce using rule 62 (exp_9 -> unario .)
    BOOLEAN         reduce using rule 62 (exp_9 -> unario .)
    SETA            reduce using rule 62 (exp_9 -> unario .)


state 69

    (63) exp_9 -> operando .

    POW             reduce using rule 63 (exp_9 -> operando .)
    MULT            reduce using rule 63 (exp_9 -> operando .)
    DIVIDE          reduce using rule 63 (exp_9 -> operando .)
    DIV             reduce using rule 63 (exp_9 -> operando .)
    DIVI            reduce using rule 63 (exp_9 -> operando .)
    MOD             reduce using rule 63 (exp_9 -> operando .)
    LCM             reduce using rule 63 (exp_9 -> operando .)
    GCD             reduce using rule 63 (exp_9 -> operando .)
    ADC             reduce using rule 63 (exp_9 -> operando .)
    SUB             reduce using rule 63 (exp_9 -> operando .)
    CONC            reduce using rule 63 (exp_9 -> operando .)
    IGUAL_DP        reduce using rule 63 (exp_9 -> operando .)
    DIF             reduce using rule 63 (exp_9 -> operando .)
    MAIOR           reduce using rule 63 (exp_9 -> operando .)
    MENOR           reduce using rule 63 (exp_9 -> operando .)
    MAIOR_IGL       reduce using rule 63 (exp_9 -> operando .)
    LESSEQUAL       reduce using rule 63 (exp_9 -> operando .)
    SMARTMATCH      reduce using rule 63 (exp_9 -> operando .)
    AND_S           reduce using rule 63 (exp_9 -> operando .)
    PONTO_VIRGULA   reduce using rule 63 (exp_9 -> operando .)
    OR_S            reduce using rule 63 (exp_9 -> operando .)
    XOR_S           reduce using rule 63 (exp_9 -> operando .)
    RPAREN          reduce using rule 63 (exp_9 -> operando .)
    ABRE_CHAVE      reduce using rule 63 (exp_9 -> operando .)
    FUNCTION        reduce using rule 63 (exp_9 -> operando .)
    ESCALAR         reduce using rule 63 (exp_9 -> operando .)
    LIST            reduce using rule 63 (exp_9 -> operando .)
    ID              reduce using rule 63 (exp_9 -> operando .)
    IF              reduce using rule 63 (exp_9 -> operando .)
    FOR             reduce using rule 63 (exp_9 -> operando .)
    INTEGER         reduce using rule 63 (exp_9 -> operando .)
    WHILE           reduce using rule 63 (exp_9 -> operando .)
    LOOP            reduce using rule 63 (exp_9 -> operando .)
    NOT             reduce using rule 63 (exp_9 -> operando .)
    NEGAC           reduce using rule 63 (exp_9 -> operando .)
    ADC_DP          reduce using rule 63 (exp_9 -> operando .)
    DECREMENTO      reduce using rule 63 (exp_9 -> operando .)
    LPAREN          reduce using rule 63 (exp_9 -> operando .)
    FLOAT           reduce using rule 63 (exp_9 -> operando .)
    STRING          reduce using rule 63 (exp_9 -> operando .)
    BOOLEAN         reduce using rule 63 (exp_9 -> operando .)
    SETA            reduce using rule 63 (exp_9 -> operando .)


state 70

    (64) unario -> prefixo_incremento .

    POW             reduce using rule 64 (unario -> prefixo_incremento .)
    MULT            reduce using rule 64 (unario -> prefixo_incremento .)
    DIVIDE          reduce using rule 64 (unario -> prefixo_incremento .)
    DIV             reduce using rule 64 (unario -> prefixo_incremento .)
    DIVI            reduce using rule 64 (unario -> prefixo_incremento .)
    MOD             reduce using rule 64 (unario -> prefixo_incremento .)
    LCM             reduce using rule 64 (unario -> prefixo_incremento .)
    GCD             reduce using rule 64 (unario -> prefixo_incremento .)
    ADC             reduce using rule 64 (unario -> prefixo_incremento .)
    SUB             reduce using rule 64 (unario -> prefixo_incremento .)
    CONC            reduce using rule 64 (unario -> prefixo_incremento .)
    IGUAL_DP        reduce using rule 64 (unario -> prefixo_incremento .)
    DIF             reduce using rule 64 (unario -> prefixo_incremento .)
    MAIOR           reduce using rule 64 (unario -> prefixo_incremento .)
    MENOR           reduce using rule 64 (unario -> prefixo_incremento .)
    MAIOR_IGL       reduce using rule 64 (unario -> prefixo_incremento .)
    LESSEQUAL       reduce using rule 64 (unario -> prefixo_incremento .)
    SMARTMATCH      reduce using rule 64 (unario -> prefixo_incremento .)
    AND_S           reduce using rule 64 (unario -> prefixo_incremento .)
    PONTO_VIRGULA   reduce using rule 64 (unario -> prefixo_incremento .)
    OR_S            reduce using rule 64 (unario -> prefixo_incremento .)
    XOR_S           reduce using rule 64 (unario -> prefixo_incremento .)
    RPAREN          reduce using rule 64 (unario -> prefixo_incremento .)
    ABRE_CHAVE      reduce using rule 64 (unario -> prefixo_incremento .)
    FUNCTION        reduce using rule 64 (unario -> prefixo_incremento .)
    ESCALAR         reduce using rule 64 (unario -> prefixo_incremento .)
    LIST            reduce using rule 64 (unario -> prefixo_incremento .)
    ID              reduce using rule 64 (unario -> prefixo_incremento .)
    IF              reduce using rule 64 (unario -> prefixo_incremento .)
    FOR             reduce using rule 64 (unario -> prefixo_incremento .)
    INTEGER         reduce using rule 64 (unario -> prefixo_incremento .)
    WHILE           reduce using rule 64 (unario -> prefixo_incremento .)
    LOOP            reduce using rule 64 (unario -> prefixo_incremento .)
    NOT             reduce using rule 64 (unario -> prefixo_incremento .)
    NEGAC           reduce using rule 64 (unario -> prefixo_incremento .)
    ADC_DP          reduce using rule 64 (unario -> prefixo_incremento .)
    DECREMENTO      reduce using rule 64 (unario -> prefixo_incremento .)
    LPAREN          reduce using rule 64 (unario -> prefixo_incremento .)
    FLOAT           reduce using rule 64 (unario -> prefixo_incremento .)
    STRING          reduce using rule 64 (unario -> prefixo_incremento .)
    BOOLEAN         reduce using rule 64 (unario -> prefixo_incremento .)
    SETA            reduce using rule 64 (unario -> prefixo_incremento .)


state 71

    (65) unario -> posfixo_incremento .

    POW             reduce using rule 65 (unario -> posfixo_incremento .)
    MULT            reduce using rule 65 (unario -> posfixo_incremento .)
    DIVIDE          reduce using rule 65 (unario -> posfixo_incremento .)
    DIV             reduce using rule 65 (unario -> posfixo_incremento .)
    DIVI            reduce using rule 65 (unario -> posfixo_incremento .)
    MOD             reduce using rule 65 (unario -> posfixo_incremento .)
    LCM             reduce using rule 65 (unario -> posfixo_incremento .)
    GCD             reduce using rule 65 (unario -> posfixo_incremento .)
    ADC             reduce using rule 65 (unario -> posfixo_incremento .)
    SUB             reduce using rule 65 (unario -> posfixo_incremento .)
    CONC            reduce using rule 65 (unario -> posfixo_incremento .)
    IGUAL_DP        reduce using rule 65 (unario -> posfixo_incremento .)
    DIF             reduce using rule 65 (unario -> posfixo_incremento .)
    MAIOR           reduce using rule 65 (unario -> posfixo_incremento .)
    MENOR           reduce using rule 65 (unario -> posfixo_incremento .)
    MAIOR_IGL       reduce using rule 65 (unario -> posfixo_incremento .)
    LESSEQUAL       reduce using rule 65 (unario -> posfixo_incremento .)
    SMARTMATCH      reduce using rule 65 (unario -> posfixo_incremento .)
    AND_S           reduce using rule 65 (unario -> posfixo_incremento .)
    PONTO_VIRGULA   reduce using rule 65 (unario -> posfixo_incremento .)
    OR_S            reduce using rule 65 (unario -> posfixo_incremento .)
    XOR_S           reduce using rule 65 (unario -> posfixo_incremento .)
    RPAREN          reduce using rule 65 (unario -> posfixo_incremento .)
    ABRE_CHAVE      reduce using rule 65 (unario -> posfixo_incremento .)
    FUNCTION        reduce using rule 65 (unario -> posfixo_incremento .)
    ESCALAR         reduce using rule 65 (unario -> posfixo_incremento .)
    LIST            reduce using rule 65 (unario -> posfixo_incremento .)
    ID              reduce using rule 65 (unario -> posfixo_incremento .)
    IF              reduce using rule 65 (unario -> posfixo_incremento .)
    FOR             reduce using rule 65 (unario -> posfixo_incremento .)
    INTEGER         reduce using rule 65 (unario -> posfixo_incremento .)
    WHILE           reduce using rule 65 (unario -> posfixo_incremento .)
    LOOP            reduce using rule 65 (unario -> posfixo_incremento .)
    NOT             reduce using rule 65 (unario -> posfixo_incremento .)
    NEGAC           reduce using rule 65 (unario -> posfixo_incremento .)
    ADC_DP          reduce using rule 65 (unario -> posfixo_incremento .)
    DECREMENTO      reduce using rule 65 (unario -> posfixo_incremento .)
    LPAREN          reduce using rule 65 (unario -> posfixo_incremento .)
    FLOAT           reduce using rule 65 (unario -> posfixo_incremento .)
    STRING          reduce using rule 65 (unario -> posfixo_incremento .)
    BOOLEAN         reduce using rule 65 (unario -> posfixo_incremento .)
    SETA            reduce using rule 65 (unario -> posfixo_incremento .)


state 72

    (66) unario -> prefixo_decremento .

    POW             reduce using rule 66 (unario -> prefixo_decremento .)
    MULT            reduce using rule 66 (unario -> prefixo_decremento .)
    DIVIDE          reduce using rule 66 (unario -> prefixo_decremento .)
    DIV             reduce using rule 66 (unario -> prefixo_decremento .)
    DIVI            reduce using rule 66 (unario -> prefixo_decremento .)
    MOD             reduce using rule 66 (unario -> prefixo_decremento .)
    LCM             reduce using rule 66 (unario -> prefixo_decremento .)
    GCD             reduce using rule 66 (unario -> prefixo_decremento .)
    ADC             reduce using rule 66 (unario -> prefixo_decremento .)
    SUB             reduce using rule 66 (unario -> prefixo_decremento .)
    CONC            reduce using rule 66 (unario -> prefixo_decremento .)
    IGUAL_DP        reduce using rule 66 (unario -> prefixo_decremento .)
    DIF             reduce using rule 66 (unario -> prefixo_decremento .)
    MAIOR           reduce using rule 66 (unario -> prefixo_decremento .)
    MENOR           reduce using rule 66 (unario -> prefixo_decremento .)
    MAIOR_IGL       reduce using rule 66 (unario -> prefixo_decremento .)
    LESSEQUAL       reduce using rule 66 (unario -> prefixo_decremento .)
    SMARTMATCH      reduce using rule 66 (unario -> prefixo_decremento .)
    AND_S           reduce using rule 66 (unario -> prefixo_decremento .)
    PONTO_VIRGULA   reduce using rule 66 (unario -> prefixo_decremento .)
    OR_S            reduce using rule 66 (unario -> prefixo_decremento .)
    XOR_S           reduce using rule 66 (unario -> prefixo_decremento .)
    RPAREN          reduce using rule 66 (unario -> prefixo_decremento .)
    ABRE_CHAVE      reduce using rule 66 (unario -> prefixo_decremento .)
    FUNCTION        reduce using rule 66 (unario -> prefixo_decremento .)
    ESCALAR         reduce using rule 66 (unario -> prefixo_decremento .)
    LIST            reduce using rule 66 (unario -> prefixo_decremento .)
    ID              reduce using rule 66 (unario -> prefixo_decremento .)
    IF              reduce using rule 66 (unario -> prefixo_decremento .)
    FOR             reduce using rule 66 (unario -> prefixo_decremento .)
    INTEGER         reduce using rule 66 (unario -> prefixo_decremento .)
    WHILE           reduce using rule 66 (unario -> prefixo_decremento .)
    LOOP            reduce using rule 66 (unario -> prefixo_decremento .)
    NOT             reduce using rule 66 (unario -> prefixo_decremento .)
    NEGAC           reduce using rule 66 (unario -> prefixo_decremento .)
    ADC_DP          reduce using rule 66 (unario -> prefixo_decremento .)
    DECREMENTO      reduce using rule 66 (unario -> prefixo_decremento .)
    LPAREN          reduce using rule 66 (unario -> prefixo_decremento .)
    FLOAT           reduce using rule 66 (unario -> prefixo_decremento .)
    STRING          reduce using rule 66 (unario -> prefixo_decremento .)
    BOOLEAN         reduce using rule 66 (unario -> prefixo_decremento .)
    SETA            reduce using rule 66 (unario -> prefixo_decremento .)


state 73

    (67) unario -> posfixo_decremento .

    POW             reduce using rule 67 (unario -> posfixo_decremento .)
    MULT            reduce using rule 67 (unario -> posfixo_decremento .)
    DIVIDE          reduce using rule 67 (unario -> posfixo_decremento .)
    DIV             reduce using rule 67 (unario -> posfixo_decremento .)
    DIVI            reduce using rule 67 (unario -> posfixo_decremento .)
    MOD             reduce using rule 67 (unario -> posfixo_decremento .)
    LCM             reduce using rule 67 (unario -> posfixo_decremento .)
    GCD             reduce using rule 67 (unario -> posfixo_decremento .)
    ADC             reduce using rule 67 (unario -> posfixo_decremento .)
    SUB             reduce using rule 67 (unario -> posfixo_decremento .)
    CONC            reduce using rule 67 (unario -> posfixo_decremento .)
    IGUAL_DP        reduce using rule 67 (unario -> posfixo_decremento .)
    DIF             reduce using rule 67 (unario -> posfixo_decremento .)
    MAIOR           reduce using rule 67 (unario -> posfixo_decremento .)
    MENOR           reduce using rule 67 (unario -> posfixo_decremento .)
    MAIOR_IGL       reduce using rule 67 (unario -> posfixo_decremento .)
    LESSEQUAL       reduce using rule 67 (unario -> posfixo_decremento .)
    SMARTMATCH      reduce using rule 67 (unario -> posfixo_decremento .)
    AND_S           reduce using rule 67 (unario -> posfixo_decremento .)
    PONTO_VIRGULA   reduce using rule 67 (unario -> posfixo_decremento .)
    OR_S            reduce using rule 67 (unario -> posfixo_decremento .)
    XOR_S           reduce using rule 67 (unario -> posfixo_decremento .)
    RPAREN          reduce using rule 67 (unario -> posfixo_decremento .)
    ABRE_CHAVE      reduce using rule 67 (unario -> posfixo_decremento .)
    FUNCTION        reduce using rule 67 (unario -> posfixo_decremento .)
    ESCALAR         reduce using rule 67 (unario -> posfixo_decremento .)
    LIST            reduce using rule 67 (unario -> posfixo_decremento .)
    ID              reduce using rule 67 (unario -> posfixo_decremento .)
    IF              reduce using rule 67 (unario -> posfixo_decremento .)
    FOR             reduce using rule 67 (unario -> posfixo_decremento .)
    INTEGER         reduce using rule 67 (unario -> posfixo_decremento .)
    WHILE           reduce using rule 67 (unario -> posfixo_decremento .)
    LOOP            reduce using rule 67 (unario -> posfixo_decremento .)
    NOT             reduce using rule 67 (unario -> posfixo_decremento .)
    NEGAC           reduce using rule 67 (unario -> posfixo_decremento .)
    ADC_DP          reduce using rule 67 (unario -> posfixo_decremento .)
    DECREMENTO      reduce using rule 67 (unario -> posfixo_decremento .)
    LPAREN          reduce using rule 67 (unario -> posfixo_decremento .)
    FLOAT           reduce using rule 67 (unario -> posfixo_decremento .)
    STRING          reduce using rule 67 (unario -> posfixo_decremento .)
    BOOLEAN         reduce using rule 67 (unario -> posfixo_decremento .)
    SETA            reduce using rule 67 (unario -> posfixo_decremento .)


state 74

    (72) operando -> parenteses .

    POW             reduce using rule 72 (operando -> parenteses .)
    MULT            reduce using rule 72 (operando -> parenteses .)
    DIVIDE          reduce using rule 72 (operando -> parenteses .)
    DIV             reduce using rule 72 (operando -> parenteses .)
    DIVI            reduce using rule 72 (operando -> parenteses .)
    MOD             reduce using rule 72 (operando -> parenteses .)
    LCM             reduce using rule 72 (operando -> parenteses .)
    GCD             reduce using rule 72 (operando -> parenteses .)
    ADC             reduce using rule 72 (operando -> parenteses .)
    SUB             reduce using rule 72 (operando -> parenteses .)
    CONC            reduce using rule 72 (operando -> parenteses .)
    IGUAL_DP        reduce using rule 72 (operando -> parenteses .)
    DIF             reduce using rule 72 (operando -> parenteses .)
    MAIOR           reduce using rule 72 (operando -> parenteses .)
    MENOR           reduce using rule 72 (operando -> parenteses .)
    MAIOR_IGL       reduce using rule 72 (operando -> parenteses .)
    LESSEQUAL       reduce using rule 72 (operando -> parenteses .)
    SMARTMATCH      reduce using rule 72 (operando -> parenteses .)
    AND_S           reduce using rule 72 (operando -> parenteses .)
    PONTO_VIRGULA   reduce using rule 72 (operando -> parenteses .)
    OR_S            reduce using rule 72 (operando -> parenteses .)
    XOR_S           reduce using rule 72 (operando -> parenteses .)
    RPAREN          reduce using rule 72 (operando -> parenteses .)
    ABRE_CHAVE      reduce using rule 72 (operando -> parenteses .)
    FUNCTION        reduce using rule 72 (operando -> parenteses .)
    ESCALAR         reduce using rule 72 (operando -> parenteses .)
    LIST            reduce using rule 72 (operando -> parenteses .)
    ID              reduce using rule 72 (operando -> parenteses .)
    IF              reduce using rule 72 (operando -> parenteses .)
    FOR             reduce using rule 72 (operando -> parenteses .)
    INTEGER         reduce using rule 72 (operando -> parenteses .)
    WHILE           reduce using rule 72 (operando -> parenteses .)
    LOOP            reduce using rule 72 (operando -> parenteses .)
    NOT             reduce using rule 72 (operando -> parenteses .)
    NEGAC           reduce using rule 72 (operando -> parenteses .)
    ADC_DP          reduce using rule 72 (operando -> parenteses .)
    DECREMENTO      reduce using rule 72 (operando -> parenteses .)
    LPAREN          reduce using rule 72 (operando -> parenteses .)
    FLOAT           reduce using rule 72 (operando -> parenteses .)
    STRING          reduce using rule 72 (operando -> parenteses .)
    BOOLEAN         reduce using rule 72 (operando -> parenteses .)
    SETA            reduce using rule 72 (operando -> parenteses .)


state 75

    (73) operando -> completo .

    POW             reduce using rule 73 (operando -> completo .)
    MULT            reduce using rule 73 (operando -> completo .)
    DIVIDE          reduce using rule 73 (operando -> completo .)
    DIV             reduce using rule 73 (operando -> completo .)
    DIVI            reduce using rule 73 (operando -> completo .)
    MOD             reduce using rule 73 (operando -> completo .)
    LCM             reduce using rule 73 (operando -> completo .)
    GCD             reduce using rule 73 (operando -> completo .)
    ADC             reduce using rule 73 (operando -> completo .)
    SUB             reduce using rule 73 (operando -> completo .)
    CONC            reduce using rule 73 (operando -> completo .)
    IGUAL_DP        reduce using rule 73 (operando -> completo .)
    DIF             reduce using rule 73 (operando -> completo .)
    MAIOR           reduce using rule 73 (operando -> completo .)
    MENOR           reduce using rule 73 (operando -> completo .)
    MAIOR_IGL       reduce using rule 73 (operando -> completo .)
    LESSEQUAL       reduce using rule 73 (operando -> completo .)
    SMARTMATCH      reduce using rule 73 (operando -> completo .)
    AND_S           reduce using rule 73 (operando -> completo .)
    PONTO_VIRGULA   reduce using rule 73 (operando -> completo .)
    OR_S            reduce using rule 73 (operando -> completo .)
    XOR_S           reduce using rule 73 (operando -> completo .)
    RPAREN          reduce using rule 73 (operando -> completo .)
    ABRE_CHAVE      reduce using rule 73 (operando -> completo .)
    FUNCTION        reduce using rule 73 (operando -> completo .)
    ESCALAR         reduce using rule 73 (operando -> completo .)
    LIST            reduce using rule 73 (operando -> completo .)
    ID              reduce using rule 73 (operando -> completo .)
    IF              reduce using rule 73 (operando -> completo .)
    FOR             reduce using rule 73 (operando -> completo .)
    INTEGER         reduce using rule 73 (operando -> completo .)
    WHILE           reduce using rule 73 (operando -> completo .)
    LOOP            reduce using rule 73 (operando -> completo .)
    NOT             reduce using rule 73 (operando -> completo .)
    NEGAC           reduce using rule 73 (operando -> completo .)
    ADC_DP          reduce using rule 73 (operando -> completo .)
    DECREMENTO      reduce using rule 73 (operando -> completo .)
    LPAREN          reduce using rule 73 (operando -> completo .)
    FLOAT           reduce using rule 73 (operando -> completo .)
    STRING          reduce using rule 73 (operando -> completo .)
    BOOLEAN         reduce using rule 73 (operando -> completo .)
    SETA            reduce using rule 73 (operando -> completo .)


state 76

    (68) prefixo_incremento -> ADC_DP . ID

    ID              shift and go to state 137


state 77

    (70) prefixo_decremento -> DECREMENTO . ID

    ID              shift and go to state 138


state 78

    (75) completo -> variaveis .

    POW             reduce using rule 75 (completo -> variaveis .)
    MULT            reduce using rule 75 (completo -> variaveis .)
    DIVIDE          reduce using rule 75 (completo -> variaveis .)
    DIV             reduce using rule 75 (completo -> variaveis .)
    DIVI            reduce using rule 75 (completo -> variaveis .)
    MOD             reduce using rule 75 (completo -> variaveis .)
    LCM             reduce using rule 75 (completo -> variaveis .)
    GCD             reduce using rule 75 (completo -> variaveis .)
    ADC             reduce using rule 75 (completo -> variaveis .)
    SUB             reduce using rule 75 (completo -> variaveis .)
    CONC            reduce using rule 75 (completo -> variaveis .)
    IGUAL_DP        reduce using rule 75 (completo -> variaveis .)
    DIF             reduce using rule 75 (completo -> variaveis .)
    MAIOR           reduce using rule 75 (completo -> variaveis .)
    MENOR           reduce using rule 75 (completo -> variaveis .)
    MAIOR_IGL       reduce using rule 75 (completo -> variaveis .)
    LESSEQUAL       reduce using rule 75 (completo -> variaveis .)
    SMARTMATCH      reduce using rule 75 (completo -> variaveis .)
    AND_S           reduce using rule 75 (completo -> variaveis .)
    PONTO_VIRGULA   reduce using rule 75 (completo -> variaveis .)
    OR_S            reduce using rule 75 (completo -> variaveis .)
    XOR_S           reduce using rule 75 (completo -> variaveis .)
    RPAREN          reduce using rule 75 (completo -> variaveis .)
    ABRE_CHAVE      reduce using rule 75 (completo -> variaveis .)
    FUNCTION        reduce using rule 75 (completo -> variaveis .)
    ESCALAR         reduce using rule 75 (completo -> variaveis .)
    LIST            reduce using rule 75 (completo -> variaveis .)
    ID              reduce using rule 75 (completo -> variaveis .)
    IF              reduce using rule 75 (completo -> variaveis .)
    FOR             reduce using rule 75 (completo -> variaveis .)
    INTEGER         reduce using rule 75 (completo -> variaveis .)
    WHILE           reduce using rule 75 (completo -> variaveis .)
    LOOP            reduce using rule 75 (completo -> variaveis .)
    NOT             reduce using rule 75 (completo -> variaveis .)
    NEGAC           reduce using rule 75 (completo -> variaveis .)
    ADC_DP          reduce using rule 75 (completo -> variaveis .)
    DECREMENTO      reduce using rule 75 (completo -> variaveis .)
    LPAREN          reduce using rule 75 (completo -> variaveis .)
    FLOAT           reduce using rule 75 (completo -> variaveis .)
    STRING          reduce using rule 75 (completo -> variaveis .)
    BOOLEAN         reduce using rule 75 (completo -> variaveis .)
    SETA            reduce using rule 75 (completo -> variaveis .)


state 79

    (77) variaveis -> escalar .

    POW             reduce using rule 77 (variaveis -> escalar .)
    MULT            reduce using rule 77 (variaveis -> escalar .)
    DIVIDE          reduce using rule 77 (variaveis -> escalar .)
    DIV             reduce using rule 77 (variaveis -> escalar .)
    DIVI            reduce using rule 77 (variaveis -> escalar .)
    MOD             reduce using rule 77 (variaveis -> escalar .)
    LCM             reduce using rule 77 (variaveis -> escalar .)
    GCD             reduce using rule 77 (variaveis -> escalar .)
    ADC             reduce using rule 77 (variaveis -> escalar .)
    SUB             reduce using rule 77 (variaveis -> escalar .)
    CONC            reduce using rule 77 (variaveis -> escalar .)
    IGUAL_DP        reduce using rule 77 (variaveis -> escalar .)
    DIF             reduce using rule 77 (variaveis -> escalar .)
    MAIOR           reduce using rule 77 (variaveis -> escalar .)
    MENOR           reduce using rule 77 (variaveis -> escalar .)
    MAIOR_IGL       reduce using rule 77 (variaveis -> escalar .)
    LESSEQUAL       reduce using rule 77 (variaveis -> escalar .)
    SMARTMATCH      reduce using rule 77 (variaveis -> escalar .)
    AND_S           reduce using rule 77 (variaveis -> escalar .)
    PONTO_VIRGULA   reduce using rule 77 (variaveis -> escalar .)
    OR_S            reduce using rule 77 (variaveis -> escalar .)
    XOR_S           reduce using rule 77 (variaveis -> escalar .)
    RPAREN          reduce using rule 77 (variaveis -> escalar .)
    ABRE_CHAVE      reduce using rule 77 (variaveis -> escalar .)
    FUNCTION        reduce using rule 77 (variaveis -> escalar .)
    ESCALAR         reduce using rule 77 (variaveis -> escalar .)
    LIST            reduce using rule 77 (variaveis -> escalar .)
    ID              reduce using rule 77 (variaveis -> escalar .)
    IF              reduce using rule 77 (variaveis -> escalar .)
    FOR             reduce using rule 77 (variaveis -> escalar .)
    INTEGER         reduce using rule 77 (variaveis -> escalar .)
    WHILE           reduce using rule 77 (variaveis -> escalar .)
    LOOP            reduce using rule 77 (variaveis -> escalar .)
    NOT             reduce using rule 77 (variaveis -> escalar .)
    NEGAC           reduce using rule 77 (variaveis -> escalar .)
    ADC_DP          reduce using rule 77 (variaveis -> escalar .)
    DECREMENTO      reduce using rule 77 (variaveis -> escalar .)
    LPAREN          reduce using rule 77 (variaveis -> escalar .)
    FLOAT           reduce using rule 77 (variaveis -> escalar .)
    STRING          reduce using rule 77 (variaveis -> escalar .)
    BOOLEAN         reduce using rule 77 (variaveis -> escalar .)
    SETA            reduce using rule 77 (variaveis -> escalar .)


state 80

    (78) tipo -> inteiro .

    POW             reduce using rule 78 (tipo -> inteiro .)
    MULT            reduce using rule 78 (tipo -> inteiro .)
    DIVIDE          reduce using rule 78 (tipo -> inteiro .)
    DIV             reduce using rule 78 (tipo -> inteiro .)
    DIVI            reduce using rule 78 (tipo -> inteiro .)
    MOD             reduce using rule 78 (tipo -> inteiro .)
    LCM             reduce using rule 78 (tipo -> inteiro .)
    GCD             reduce using rule 78 (tipo -> inteiro .)
    ADC             reduce using rule 78 (tipo -> inteiro .)
    SUB             reduce using rule 78 (tipo -> inteiro .)
    CONC            reduce using rule 78 (tipo -> inteiro .)
    IGUAL_DP        reduce using rule 78 (tipo -> inteiro .)
    DIF             reduce using rule 78 (tipo -> inteiro .)
    MAIOR           reduce using rule 78 (tipo -> inteiro .)
    MENOR           reduce using rule 78 (tipo -> inteiro .)
    MAIOR_IGL       reduce using rule 78 (tipo -> inteiro .)
    LESSEQUAL       reduce using rule 78 (tipo -> inteiro .)
    SMARTMATCH      reduce using rule 78 (tipo -> inteiro .)
    AND_S           reduce using rule 78 (tipo -> inteiro .)
    PONTO_VIRGULA   reduce using rule 78 (tipo -> inteiro .)
    OR_S            reduce using rule 78 (tipo -> inteiro .)
    XOR_S           reduce using rule 78 (tipo -> inteiro .)
    RPAREN          reduce using rule 78 (tipo -> inteiro .)
    ABRE_CHAVE      reduce using rule 78 (tipo -> inteiro .)
    FUNCTION        reduce using rule 78 (tipo -> inteiro .)
    ESCALAR         reduce using rule 78 (tipo -> inteiro .)
    LIST            reduce using rule 78 (tipo -> inteiro .)
    ID              reduce using rule 78 (tipo -> inteiro .)
    IF              reduce using rule 78 (tipo -> inteiro .)
    FOR             reduce using rule 78 (tipo -> inteiro .)
    INTEGER         reduce using rule 78 (tipo -> inteiro .)
    WHILE           reduce using rule 78 (tipo -> inteiro .)
    LOOP            reduce using rule 78 (tipo -> inteiro .)
    NOT             reduce using rule 78 (tipo -> inteiro .)
    NEGAC           reduce using rule 78 (tipo -> inteiro .)
    ADC_DP          reduce using rule 78 (tipo -> inteiro .)
    DECREMENTO      reduce using rule 78 (tipo -> inteiro .)
    LPAREN          reduce using rule 78 (tipo -> inteiro .)
    FLOAT           reduce using rule 78 (tipo -> inteiro .)
    STRING          reduce using rule 78 (tipo -> inteiro .)
    BOOLEAN         reduce using rule 78 (tipo -> inteiro .)
    SETA            reduce using rule 78 (tipo -> inteiro .)


state 81

    (79) tipo -> float .

    POW             reduce using rule 79 (tipo -> float .)
    MULT            reduce using rule 79 (tipo -> float .)
    DIVIDE          reduce using rule 79 (tipo -> float .)
    DIV             reduce using rule 79 (tipo -> float .)
    DIVI            reduce using rule 79 (tipo -> float .)
    MOD             reduce using rule 79 (tipo -> float .)
    LCM             reduce using rule 79 (tipo -> float .)
    GCD             reduce using rule 79 (tipo -> float .)
    ADC             reduce using rule 79 (tipo -> float .)
    SUB             reduce using rule 79 (tipo -> float .)
    CONC            reduce using rule 79 (tipo -> float .)
    IGUAL_DP        reduce using rule 79 (tipo -> float .)
    DIF             reduce using rule 79 (tipo -> float .)
    MAIOR           reduce using rule 79 (tipo -> float .)
    MENOR           reduce using rule 79 (tipo -> float .)
    MAIOR_IGL       reduce using rule 79 (tipo -> float .)
    LESSEQUAL       reduce using rule 79 (tipo -> float .)
    SMARTMATCH      reduce using rule 79 (tipo -> float .)
    AND_S           reduce using rule 79 (tipo -> float .)
    PONTO_VIRGULA   reduce using rule 79 (tipo -> float .)
    OR_S            reduce using rule 79 (tipo -> float .)
    XOR_S           reduce using rule 79 (tipo -> float .)
    RPAREN          reduce using rule 79 (tipo -> float .)
    ABRE_CHAVE      reduce using rule 79 (tipo -> float .)
    FUNCTION        reduce using rule 79 (tipo -> float .)
    ESCALAR         reduce using rule 79 (tipo -> float .)
    LIST            reduce using rule 79 (tipo -> float .)
    ID              reduce using rule 79 (tipo -> float .)
    IF              reduce using rule 79 (tipo -> float .)
    FOR             reduce using rule 79 (tipo -> float .)
    INTEGER         reduce using rule 79 (tipo -> float .)
    WHILE           reduce using rule 79 (tipo -> float .)
    LOOP            reduce using rule 79 (tipo -> float .)
    NOT             reduce using rule 79 (tipo -> float .)
    NEGAC           reduce using rule 79 (tipo -> float .)
    ADC_DP          reduce using rule 79 (tipo -> float .)
    DECREMENTO      reduce using rule 79 (tipo -> float .)
    LPAREN          reduce using rule 79 (tipo -> float .)
    FLOAT           reduce using rule 79 (tipo -> float .)
    STRING          reduce using rule 79 (tipo -> float .)
    BOOLEAN         reduce using rule 79 (tipo -> float .)
    SETA            reduce using rule 79 (tipo -> float .)


state 82

    (80) tipo -> string .

    POW             reduce using rule 80 (tipo -> string .)
    MULT            reduce using rule 80 (tipo -> string .)
    DIVIDE          reduce using rule 80 (tipo -> string .)
    DIV             reduce using rule 80 (tipo -> string .)
    DIVI            reduce using rule 80 (tipo -> string .)
    MOD             reduce using rule 80 (tipo -> string .)
    LCM             reduce using rule 80 (tipo -> string .)
    GCD             reduce using rule 80 (tipo -> string .)
    ADC             reduce using rule 80 (tipo -> string .)
    SUB             reduce using rule 80 (tipo -> string .)
    CONC            reduce using rule 80 (tipo -> string .)
    IGUAL_DP        reduce using rule 80 (tipo -> string .)
    DIF             reduce using rule 80 (tipo -> string .)
    MAIOR           reduce using rule 80 (tipo -> string .)
    MENOR           reduce using rule 80 (tipo -> string .)
    MAIOR_IGL       reduce using rule 80 (tipo -> string .)
    LESSEQUAL       reduce using rule 80 (tipo -> string .)
    SMARTMATCH      reduce using rule 80 (tipo -> string .)
    AND_S           reduce using rule 80 (tipo -> string .)
    PONTO_VIRGULA   reduce using rule 80 (tipo -> string .)
    OR_S            reduce using rule 80 (tipo -> string .)
    XOR_S           reduce using rule 80 (tipo -> string .)
    RPAREN          reduce using rule 80 (tipo -> string .)
    ABRE_CHAVE      reduce using rule 80 (tipo -> string .)
    FUNCTION        reduce using rule 80 (tipo -> string .)
    ESCALAR         reduce using rule 80 (tipo -> string .)
    LIST            reduce using rule 80 (tipo -> string .)
    ID              reduce using rule 80 (tipo -> string .)
    IF              reduce using rule 80 (tipo -> string .)
    FOR             reduce using rule 80 (tipo -> string .)
    INTEGER         reduce using rule 80 (tipo -> string .)
    WHILE           reduce using rule 80 (tipo -> string .)
    LOOP            reduce using rule 80 (tipo -> string .)
    NOT             reduce using rule 80 (tipo -> string .)
    NEGAC           reduce using rule 80 (tipo -> string .)
    ADC_DP          reduce using rule 80 (tipo -> string .)
    DECREMENTO      reduce using rule 80 (tipo -> string .)
    LPAREN          reduce using rule 80 (tipo -> string .)
    FLOAT           reduce using rule 80 (tipo -> string .)
    STRING          reduce using rule 80 (tipo -> string .)
    BOOLEAN         reduce using rule 80 (tipo -> string .)
    SETA            reduce using rule 80 (tipo -> string .)


state 83

    (81) tipo -> boolean .

    POW             reduce using rule 81 (tipo -> boolean .)
    MULT            reduce using rule 81 (tipo -> boolean .)
    DIVIDE          reduce using rule 81 (tipo -> boolean .)
    DIV             reduce using rule 81 (tipo -> boolean .)
    DIVI            reduce using rule 81 (tipo -> boolean .)
    MOD             reduce using rule 81 (tipo -> boolean .)
    LCM             reduce using rule 81 (tipo -> boolean .)
    GCD             reduce using rule 81 (tipo -> boolean .)
    ADC             reduce using rule 81 (tipo -> boolean .)
    SUB             reduce using rule 81 (tipo -> boolean .)
    CONC            reduce using rule 81 (tipo -> boolean .)
    IGUAL_DP        reduce using rule 81 (tipo -> boolean .)
    DIF             reduce using rule 81 (tipo -> boolean .)
    MAIOR           reduce using rule 81 (tipo -> boolean .)
    MENOR           reduce using rule 81 (tipo -> boolean .)
    MAIOR_IGL       reduce using rule 81 (tipo -> boolean .)
    LESSEQUAL       reduce using rule 81 (tipo -> boolean .)
    SMARTMATCH      reduce using rule 81 (tipo -> boolean .)
    AND_S           reduce using rule 81 (tipo -> boolean .)
    PONTO_VIRGULA   reduce using rule 81 (tipo -> boolean .)
    OR_S            reduce using rule 81 (tipo -> boolean .)
    XOR_S           reduce using rule 81 (tipo -> boolean .)
    RPAREN          reduce using rule 81 (tipo -> boolean .)
    ABRE_CHAVE      reduce using rule 81 (tipo -> boolean .)
    FUNCTION        reduce using rule 81 (tipo -> boolean .)
    ESCALAR         reduce using rule 81 (tipo -> boolean .)
    LIST            reduce using rule 81 (tipo -> boolean .)
    ID              reduce using rule 81 (tipo -> boolean .)
    IF              reduce using rule 81 (tipo -> boolean .)
    FOR             reduce using rule 81 (tipo -> boolean .)
    INTEGER         reduce using rule 81 (tipo -> boolean .)
    WHILE           reduce using rule 81 (tipo -> boolean .)
    LOOP            reduce using rule 81 (tipo -> boolean .)
    NOT             reduce using rule 81 (tipo -> boolean .)
    NEGAC           reduce using rule 81 (tipo -> boolean .)
    ADC_DP          reduce using rule 81 (tipo -> boolean .)
    DECREMENTO      reduce using rule 81 (tipo -> boolean .)
    LPAREN          reduce using rule 81 (tipo -> boolean .)
    FLOAT           reduce using rule 81 (tipo -> boolean .)
    STRING          reduce using rule 81 (tipo -> boolean .)
    BOOLEAN         reduce using rule 81 (tipo -> boolean .)
    SETA            reduce using rule 81 (tipo -> boolean .)


state 84

    (83) float -> FLOAT .

    POW             reduce using rule 83 (float -> FLOAT .)
    MULT            reduce using rule 83 (float -> FLOAT .)
    DIVIDE          reduce using rule 83 (float -> FLOAT .)
    DIV             reduce using rule 83 (float -> FLOAT .)
    DIVI            reduce using rule 83 (float -> FLOAT .)
    MOD             reduce using rule 83 (float -> FLOAT .)
    LCM             reduce using rule 83 (float -> FLOAT .)
    GCD             reduce using rule 83 (float -> FLOAT .)
    ADC             reduce using rule 83 (float -> FLOAT .)
    SUB             reduce using rule 83 (float -> FLOAT .)
    CONC            reduce using rule 83 (float -> FLOAT .)
    IGUAL_DP        reduce using rule 83 (float -> FLOAT .)
    DIF             reduce using rule 83 (float -> FLOAT .)
    MAIOR           reduce using rule 83 (float -> FLOAT .)
    MENOR           reduce using rule 83 (float -> FLOAT .)
    MAIOR_IGL       reduce using rule 83 (float -> FLOAT .)
    LESSEQUAL       reduce using rule 83 (float -> FLOAT .)
    SMARTMATCH      reduce using rule 83 (float -> FLOAT .)
    AND_S           reduce using rule 83 (float -> FLOAT .)
    PONTO_VIRGULA   reduce using rule 83 (float -> FLOAT .)
    OR_S            reduce using rule 83 (float -> FLOAT .)
    XOR_S           reduce using rule 83 (float -> FLOAT .)
    RPAREN          reduce using rule 83 (float -> FLOAT .)
    ABRE_CHAVE      reduce using rule 83 (float -> FLOAT .)
    FUNCTION        reduce using rule 83 (float -> FLOAT .)
    ESCALAR         reduce using rule 83 (float -> FLOAT .)
    LIST            reduce using rule 83 (float -> FLOAT .)
    ID              reduce using rule 83 (float -> FLOAT .)
    IF              reduce using rule 83 (float -> FLOAT .)
    FOR             reduce using rule 83 (float -> FLOAT .)
    INTEGER         reduce using rule 83 (float -> FLOAT .)
    WHILE           reduce using rule 83 (float -> FLOAT .)
    LOOP            reduce using rule 83 (float -> FLOAT .)
    NOT             reduce using rule 83 (float -> FLOAT .)
    NEGAC           reduce using rule 83 (float -> FLOAT .)
    ADC_DP          reduce using rule 83 (float -> FLOAT .)
    DECREMENTO      reduce using rule 83 (float -> FLOAT .)
    LPAREN          reduce using rule 83 (float -> FLOAT .)
    FLOAT           reduce using rule 83 (float -> FLOAT .)
    STRING          reduce using rule 83 (float -> FLOAT .)
    BOOLEAN         reduce using rule 83 (float -> FLOAT .)
    SETA            reduce using rule 83 (float -> FLOAT .)


state 85

    (84) string -> STRING .

    POW             reduce using rule 84 (string -> STRING .)
    MULT            reduce using rule 84 (string -> STRING .)
    DIVIDE          reduce using rule 84 (string -> STRING .)
    DIV             reduce using rule 84 (string -> STRING .)
    DIVI            reduce using rule 84 (string -> STRING .)
    MOD             reduce using rule 84 (string -> STRING .)
    LCM             reduce using rule 84 (string -> STRING .)
    GCD             reduce using rule 84 (string -> STRING .)
    ADC             reduce using rule 84 (string -> STRING .)
    SUB             reduce using rule 84 (string -> STRING .)
    CONC            reduce using rule 84 (string -> STRING .)
    IGUAL_DP        reduce using rule 84 (string -> STRING .)
    DIF             reduce using rule 84 (string -> STRING .)
    MAIOR           reduce using rule 84 (string -> STRING .)
    MENOR           reduce using rule 84 (string -> STRING .)
    MAIOR_IGL       reduce using rule 84 (string -> STRING .)
    LESSEQUAL       reduce using rule 84 (string -> STRING .)
    SMARTMATCH      reduce using rule 84 (string -> STRING .)
    AND_S           reduce using rule 84 (string -> STRING .)
    PONTO_VIRGULA   reduce using rule 84 (string -> STRING .)
    OR_S            reduce using rule 84 (string -> STRING .)
    XOR_S           reduce using rule 84 (string -> STRING .)
    RPAREN          reduce using rule 84 (string -> STRING .)
    ABRE_CHAVE      reduce using rule 84 (string -> STRING .)
    FUNCTION        reduce using rule 84 (string -> STRING .)
    ESCALAR         reduce using rule 84 (string -> STRING .)
    LIST            reduce using rule 84 (string -> STRING .)
    ID              reduce using rule 84 (string -> STRING .)
    IF              reduce using rule 84 (string -> STRING .)
    FOR             reduce using rule 84 (string -> STRING .)
    INTEGER         reduce using rule 84 (string -> STRING .)
    WHILE           reduce using rule 84 (string -> STRING .)
    LOOP            reduce using rule 84 (string -> STRING .)
    NOT             reduce using rule 84 (string -> STRING .)
    NEGAC           reduce using rule 84 (string -> STRING .)
    ADC_DP          reduce using rule 84 (string -> STRING .)
    DECREMENTO      reduce using rule 84 (string -> STRING .)
    LPAREN          reduce using rule 84 (string -> STRING .)
    FLOAT           reduce using rule 84 (string -> STRING .)
    STRING          reduce using rule 84 (string -> STRING .)
    BOOLEAN         reduce using rule 84 (string -> STRING .)
    SETA            reduce using rule 84 (string -> STRING .)


state 86

    (85) boolean -> BOOLEAN .

    POW             reduce using rule 85 (boolean -> BOOLEAN .)
    MULT            reduce using rule 85 (boolean -> BOOLEAN .)
    DIVIDE          reduce using rule 85 (boolean -> BOOLEAN .)
    DIV             reduce using rule 85 (boolean -> BOOLEAN .)
    DIVI            reduce using rule 85 (boolean -> BOOLEAN .)
    MOD             reduce using rule 85 (boolean -> BOOLEAN .)
    LCM             reduce using rule 85 (boolean -> BOOLEAN .)
    GCD             reduce using rule 85 (boolean -> BOOLEAN .)
    ADC             reduce using rule 85 (boolean -> BOOLEAN .)
    SUB             reduce using rule 85 (boolean -> BOOLEAN .)
    CONC            reduce using rule 85 (boolean -> BOOLEAN .)
    IGUAL_DP        reduce using rule 85 (boolean -> BOOLEAN .)
    DIF             reduce using rule 85 (boolean -> BOOLEAN .)
    MAIOR           reduce using rule 85 (boolean -> BOOLEAN .)
    MENOR           reduce using rule 85 (boolean -> BOOLEAN .)
    MAIOR_IGL       reduce using rule 85 (boolean -> BOOLEAN .)
    LESSEQUAL       reduce using rule 85 (boolean -> BOOLEAN .)
    SMARTMATCH      reduce using rule 85 (boolean -> BOOLEAN .)
    AND_S           reduce using rule 85 (boolean -> BOOLEAN .)
    PONTO_VIRGULA   reduce using rule 85 (boolean -> BOOLEAN .)
    OR_S            reduce using rule 85 (boolean -> BOOLEAN .)
    XOR_S           reduce using rule 85 (boolean -> BOOLEAN .)
    RPAREN          reduce using rule 85 (boolean -> BOOLEAN .)
    ABRE_CHAVE      reduce using rule 85 (boolean -> BOOLEAN .)
    FUNCTION        reduce using rule 85 (boolean -> BOOLEAN .)
    ESCALAR         reduce using rule 85 (boolean -> BOOLEAN .)
    LIST            reduce using rule 85 (boolean -> BOOLEAN .)
    ID              reduce using rule 85 (boolean -> BOOLEAN .)
    IF              reduce using rule 85 (boolean -> BOOLEAN .)
    FOR             reduce using rule 85 (boolean -> BOOLEAN .)
    INTEGER         reduce using rule 85 (boolean -> BOOLEAN .)
    WHILE           reduce using rule 85 (boolean -> BOOLEAN .)
    LOOP            reduce using rule 85 (boolean -> BOOLEAN .)
    NOT             reduce using rule 85 (boolean -> BOOLEAN .)
    NEGAC           reduce using rule 85 (boolean -> BOOLEAN .)
    ADC_DP          reduce using rule 85 (boolean -> BOOLEAN .)
    DECREMENTO      reduce using rule 85 (boolean -> BOOLEAN .)
    LPAREN          reduce using rule 85 (boolean -> BOOLEAN .)
    FLOAT           reduce using rule 85 (boolean -> BOOLEAN .)
    STRING          reduce using rule 85 (boolean -> BOOLEAN .)
    BOOLEAN         reduce using rule 85 (boolean -> BOOLEAN .)
    SETA            reduce using rule 85 (boolean -> BOOLEAN .)


state 87

    (2) comando_com_main -> funcao_main declaracoes_main .
    (117) declaracoes -> declaracoes_main .

  ! reduce/reduce conflict for $end resolved using rule 2 (comando_com_main -> funcao_main declaracoes_main .)
    $end            reduce using rule 2 (comando_com_main -> funcao_main declaracoes_main .)

  ! $end            [ reduce using rule 117 (declaracoes -> declaracoes_main .) ]


state 88

    (115) bloco -> declaracoes .

    $end            reduce using rule 115 (bloco -> declaracoes .)
    ELSE            reduce using rule 115 (bloco -> declaracoes .)
    ELSIF           reduce using rule 115 (bloco -> declaracoes .)
    FUNCTION        reduce using rule 115 (bloco -> declaracoes .)
    ESCALAR         reduce using rule 115 (bloco -> declaracoes .)
    LIST            reduce using rule 115 (bloco -> declaracoes .)
    ID              reduce using rule 115 (bloco -> declaracoes .)
    IF              reduce using rule 115 (bloco -> declaracoes .)
    FOR             reduce using rule 115 (bloco -> declaracoes .)
    INTEGER         reduce using rule 115 (bloco -> declaracoes .)
    WHILE           reduce using rule 115 (bloco -> declaracoes .)
    LOOP            reduce using rule 115 (bloco -> declaracoes .)
    ABRE_CHAVE      reduce using rule 115 (bloco -> declaracoes .)
    NOT             reduce using rule 115 (bloco -> declaracoes .)
    NEGAC           reduce using rule 115 (bloco -> declaracoes .)
    ADC_DP          reduce using rule 115 (bloco -> declaracoes .)
    DECREMENTO      reduce using rule 115 (bloco -> declaracoes .)
    LPAREN          reduce using rule 115 (bloco -> declaracoes .)
    FLOAT           reduce using rule 115 (bloco -> declaracoes .)
    STRING          reduce using rule 115 (bloco -> declaracoes .)
    BOOLEAN         reduce using rule 115 (bloco -> declaracoes .)
    FECHA_CHAVE     reduce using rule 115 (bloco -> declaracoes .)


state 89

    (98) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 92


state 90

    (3) comando_com_main -> declaracoes comando_com_main .

    $end            reduce using rule 3 (comando_com_main -> declaracoes comando_com_main .)


state 91

    (6) funcao_main -> FUNCTION MAIN . LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE

    LPAREN          shift and go to state 139


state 92

    (98) funcao_com_params -> FUNCTION ID . LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION ID . LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    LPAREN          shift and go to state 140


state 93

    (74) parenteses -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 141


state 94

    (7) exp -> PONTO_VIRGULA .

    RPAREN          reduce using rule 7 (exp -> PONTO_VIRGULA .)


state 95

    (8) exp -> exp_2 .
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 8 (exp -> exp_2 .)
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 96

    (69) posfixo_incremento -> ID . ADC_DP
    (71) posfixo_decremento -> ID . DECREMENTO

    ADC_DP          shift and go to state 101
    DECREMENTO      shift and go to state 102


state 97

    (86) escalar -> ESCALAR .

    POW             reduce using rule 86 (escalar -> ESCALAR .)
    MULT            reduce using rule 86 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 86 (escalar -> ESCALAR .)
    DIV             reduce using rule 86 (escalar -> ESCALAR .)
    DIVI            reduce using rule 86 (escalar -> ESCALAR .)
    MOD             reduce using rule 86 (escalar -> ESCALAR .)
    LCM             reduce using rule 86 (escalar -> ESCALAR .)
    GCD             reduce using rule 86 (escalar -> ESCALAR .)
    ADC             reduce using rule 86 (escalar -> ESCALAR .)
    SUB             reduce using rule 86 (escalar -> ESCALAR .)
    CONC            reduce using rule 86 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 86 (escalar -> ESCALAR .)
    DIF             reduce using rule 86 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 86 (escalar -> ESCALAR .)
    MENOR           reduce using rule 86 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 86 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 86 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 86 (escalar -> ESCALAR .)
    AND_S           reduce using rule 86 (escalar -> ESCALAR .)
    OR_S            reduce using rule 86 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 86 (escalar -> ESCALAR .)
    RPAREN          reduce using rule 86 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 86 (escalar -> ESCALAR .)
    FUNCTION        reduce using rule 86 (escalar -> ESCALAR .)
    ESCALAR         reduce using rule 86 (escalar -> ESCALAR .)
    LIST            reduce using rule 86 (escalar -> ESCALAR .)
    ID              reduce using rule 86 (escalar -> ESCALAR .)
    IF              reduce using rule 86 (escalar -> ESCALAR .)
    FOR             reduce using rule 86 (escalar -> ESCALAR .)
    INTEGER         reduce using rule 86 (escalar -> ESCALAR .)
    WHILE           reduce using rule 86 (escalar -> ESCALAR .)
    LOOP            reduce using rule 86 (escalar -> ESCALAR .)
    NOT             reduce using rule 86 (escalar -> ESCALAR .)
    NEGAC           reduce using rule 86 (escalar -> ESCALAR .)
    ADC_DP          reduce using rule 86 (escalar -> ESCALAR .)
    DECREMENTO      reduce using rule 86 (escalar -> ESCALAR .)
    LPAREN          reduce using rule 86 (escalar -> ESCALAR .)
    FLOAT           reduce using rule 86 (escalar -> ESCALAR .)
    STRING          reduce using rule 86 (escalar -> ESCALAR .)
    BOOLEAN         reduce using rule 86 (escalar -> ESCALAR .)
    SETA            reduce using rule 86 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 86 (escalar -> ESCALAR .)


state 98

    (82) inteiro -> INTEGER .

    POW             reduce using rule 82 (inteiro -> INTEGER .)
    MULT            reduce using rule 82 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 82 (inteiro -> INTEGER .)
    DIV             reduce using rule 82 (inteiro -> INTEGER .)
    DIVI            reduce using rule 82 (inteiro -> INTEGER .)
    MOD             reduce using rule 82 (inteiro -> INTEGER .)
    LCM             reduce using rule 82 (inteiro -> INTEGER .)
    GCD             reduce using rule 82 (inteiro -> INTEGER .)
    ADC             reduce using rule 82 (inteiro -> INTEGER .)
    SUB             reduce using rule 82 (inteiro -> INTEGER .)
    CONC            reduce using rule 82 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 82 (inteiro -> INTEGER .)
    DIF             reduce using rule 82 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 82 (inteiro -> INTEGER .)
    MENOR           reduce using rule 82 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 82 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 82 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 82 (inteiro -> INTEGER .)
    AND_S           reduce using rule 82 (inteiro -> INTEGER .)
    OR_S            reduce using rule 82 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 82 (inteiro -> INTEGER .)
    RPAREN          reduce using rule 82 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 82 (inteiro -> INTEGER .)
    FUNCTION        reduce using rule 82 (inteiro -> INTEGER .)
    ESCALAR         reduce using rule 82 (inteiro -> INTEGER .)
    LIST            reduce using rule 82 (inteiro -> INTEGER .)
    ID              reduce using rule 82 (inteiro -> INTEGER .)
    IF              reduce using rule 82 (inteiro -> INTEGER .)
    FOR             reduce using rule 82 (inteiro -> INTEGER .)
    INTEGER         reduce using rule 82 (inteiro -> INTEGER .)
    WHILE           reduce using rule 82 (inteiro -> INTEGER .)
    LOOP            reduce using rule 82 (inteiro -> INTEGER .)
    NOT             reduce using rule 82 (inteiro -> INTEGER .)
    NEGAC           reduce using rule 82 (inteiro -> INTEGER .)
    ADC_DP          reduce using rule 82 (inteiro -> INTEGER .)
    DECREMENTO      reduce using rule 82 (inteiro -> INTEGER .)
    LPAREN          reduce using rule 82 (inteiro -> INTEGER .)
    FLOAT           reduce using rule 82 (inteiro -> INTEGER .)
    STRING          reduce using rule 82 (inteiro -> INTEGER .)
    BOOLEAN         reduce using rule 82 (inteiro -> INTEGER .)
    SETA            reduce using rule 82 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 82 (inteiro -> INTEGER .)


state 99

    (114) bloco -> ABRE_CHAVE declaracoes . FECHA_CHAVE
    (115) bloco -> declaracoes .

  ! shift/reduce conflict for FECHA_CHAVE resolved as shift
    FECHA_CHAVE     shift and go to state 142

  ! FECHA_CHAVE     [ reduce using rule 115 (bloco -> declaracoes .) ]


state 100

    (105) chamada_funcao -> ID LPAREN . chamada_funcao_auxiliar
    (106) chamada_funcao_auxiliar -> . parametros RPAREN
    (107) chamada_funcao_auxiliar -> . RPAREN
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    RPAREN          shift and go to state 145
    ESCALAR         shift and go to state 148
    COMMA           shift and go to state 149

    chamada_funcao_auxiliar        shift and go to state 143
    parametros                     shift and go to state 144
    funcao_com_um_paramentro       shift and go to state 146
    funcao_com_varios_paramentro   shift and go to state 147

state 101

    (69) posfixo_incremento -> ID ADC_DP .

    POW             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MULT            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIVIDE          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIV             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIVI            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MOD             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LCM             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    GCD             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ADC             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SUB             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    CONC            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    IGUAL_DP        reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIF             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MAIOR           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MENOR           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MAIOR_IGL       reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LESSEQUAL       reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SMARTMATCH      reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    AND_S           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    PONTO_VIRGULA   reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    OR_S            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    XOR_S           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    RPAREN          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ABRE_CHAVE      reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    FUNCTION        reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ESCALAR         reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LIST            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ID              reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    IF              reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    FOR             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    INTEGER         reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    WHILE           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LOOP            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    NOT             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    NEGAC           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ADC_DP          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DECREMENTO      reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LPAREN          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    FLOAT           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    STRING          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    BOOLEAN         reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SETA            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)


state 102

    (71) posfixo_decremento -> ID DECREMENTO .

    POW             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MULT            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIVIDE          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIV             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIVI            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MOD             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LCM             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    GCD             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ADC             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SUB             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    CONC            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    IGUAL_DP        reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIF             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MENOR           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR_IGL       reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LESSEQUAL       reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SMARTMATCH      reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    AND_S           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    PONTO_VIRGULA   reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    OR_S            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    XOR_S           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    RPAREN          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ABRE_CHAVE      reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    FUNCTION        reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ESCALAR         reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LIST            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ID              reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    IF              reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    FOR             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    INTEGER         reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    WHILE           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LOOP            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    NOT             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    NEGAC           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ADC_DP          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LPAREN          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    FLOAT           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    STRING          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    BOOLEAN         reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SETA            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)


state 103

    (126) declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .

    FUNCTION        reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LIST            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INTEGER         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LOOP            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NOT             reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEGAC           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LPAREN          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FLOAT           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    $end            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ELSE            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ELSIF           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)


state 104

    (129) declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .

    FUNCTION        reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LIST            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ID              reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    IF              reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FOR             reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    INTEGER         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    WHILE           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LOOP            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NOT             reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEGAC           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LPAREN          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FLOAT           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    STRING          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    $end            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ELSE            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ELSIF           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)


state 105

    (132) declaracao_de_expressao -> exp_2 PONTO_VIRGULA .

    FUNCTION        reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ELSE            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ELSIF           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)


state 106

    (12) or -> exp_2 OR_S . exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_3                          shift and go to state 150
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 107

    (13) xor -> exp_2 XOR_S . exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_3                          shift and go to state 151
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 108

    (87) declaracao_escalar -> ESCALAR IGUAL . tipo PONTO_VIRGULA
    (104) atribuicao -> ESCALAR IGUAL . exp_2
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (86) escalar -> . ESCALAR

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97

    tipo                           shift and go to state 152
    exp_2                          shift and go to state 153
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79

state 109

    (88) declaracao_lista -> LIST IGUAL . lista_valores PONTO_VIRGULA
    (89) lista_valores -> . lista_valores_recursiva
    (90) lista_valores -> . lista_valores_base
    (91) lista_valores_recursiva -> . lista_valores tipo
    (92) lista_valores_base -> . tipo
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    lista_valores                  shift and go to state 154
    lista_valores_recursiva        shift and go to state 155
    lista_valores_base             shift and go to state 156
    tipo                           shift and go to state 157
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 110

    (108) condicional -> IF exp_2 . bloco
    (109) condicional -> IF exp_2 . bloco ELSE bloco
    (110) condicional -> IF exp_2 . bloco lista_elsif
    (111) condicional -> IF exp_2 . bloco lista_elsif ELSE bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107
    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    bloco                          shift and go to state 158
    exp_3                          shift and go to state 38
    declaracoes                    shift and go to state 88
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 111

    (93) loop -> FOR exp_2 . SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    SETA            shift and go to state 159
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 112

    (94) loop -> INTEGER PONTO . TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE

    TIMES           shift and go to state 160


state 113

    (95) loop -> WHILE exp_2 . ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    ABRE_CHAVE      shift and go to state 161
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 114

    (96) loop -> LOOP LPAREN . atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (104) atribuicao -> . ESCALAR IGUAL exp_2

    ESCALAR         shift and go to state 163

    atribuicao                     shift and go to state 162

state 115

    (97) loop -> LOOP ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    comando                        shift and go to state 164
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 116

    (16) and -> exp_3 AND_S . exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_4                          shift and go to state 166
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 117

    (25) igual_dp -> exp_4 IGUAL_DP . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 167
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 118

    (26) dif -> exp_4 DIF . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 168
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 119

    (27) maior -> exp_4 MAIOR . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 169
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 120

    (28) menor -> exp_4 MENOR . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 170
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 121

    (29) maior_igual -> exp_4 MAIOR_IGL . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 171
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 122

    (30) menor_igual -> exp_4 LESSEQUAL . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 172
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 123

    (31) smartmatch -> exp_4 SMARTMATCH . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_5                          shift and go to state 173
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 124

    (36) adicao -> exp_5 ADC . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_6                          shift and go to state 174
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 125

    (37) subtracao -> exp_5 SUB . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_6                          shift and go to state 175
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 126

    (38) conc -> exp_5 CONC . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_6                          shift and go to state 176
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 127

    (47) mult -> exp_6 MULT . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 177
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 128

    (48) divide -> exp_6 DIVIDE . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 178
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 129

    (49) div -> exp_6 DIV . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 179
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 130

    (50) divi -> exp_6 DIVI . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 180
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 131

    (51) mod -> exp_6 MOD . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 181
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 132

    (52) lcm -> exp_6 LCM . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 182
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 133

    (53) gcd -> exp_6 GCD . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_7                          shift and go to state 183
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 134

    (56) pow -> exp_7 POW . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_8                          shift and go to state 184
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 135

    (60) not_op -> NOT exp_8 .

    POW             reduce using rule 60 (not_op -> NOT exp_8 .)
    MULT            reduce using rule 60 (not_op -> NOT exp_8 .)
    DIVIDE          reduce using rule 60 (not_op -> NOT exp_8 .)
    DIV             reduce using rule 60 (not_op -> NOT exp_8 .)
    DIVI            reduce using rule 60 (not_op -> NOT exp_8 .)
    MOD             reduce using rule 60 (not_op -> NOT exp_8 .)
    LCM             reduce using rule 60 (not_op -> NOT exp_8 .)
    GCD             reduce using rule 60 (not_op -> NOT exp_8 .)
    ADC             reduce using rule 60 (not_op -> NOT exp_8 .)
    SUB             reduce using rule 60 (not_op -> NOT exp_8 .)
    CONC            reduce using rule 60 (not_op -> NOT exp_8 .)
    IGUAL_DP        reduce using rule 60 (not_op -> NOT exp_8 .)
    DIF             reduce using rule 60 (not_op -> NOT exp_8 .)
    MAIOR           reduce using rule 60 (not_op -> NOT exp_8 .)
    MENOR           reduce using rule 60 (not_op -> NOT exp_8 .)
    MAIOR_IGL       reduce using rule 60 (not_op -> NOT exp_8 .)
    LESSEQUAL       reduce using rule 60 (not_op -> NOT exp_8 .)
    SMARTMATCH      reduce using rule 60 (not_op -> NOT exp_8 .)
    AND_S           reduce using rule 60 (not_op -> NOT exp_8 .)
    PONTO_VIRGULA   reduce using rule 60 (not_op -> NOT exp_8 .)
    OR_S            reduce using rule 60 (not_op -> NOT exp_8 .)
    XOR_S           reduce using rule 60 (not_op -> NOT exp_8 .)
    RPAREN          reduce using rule 60 (not_op -> NOT exp_8 .)
    ABRE_CHAVE      reduce using rule 60 (not_op -> NOT exp_8 .)
    FUNCTION        reduce using rule 60 (not_op -> NOT exp_8 .)
    ESCALAR         reduce using rule 60 (not_op -> NOT exp_8 .)
    LIST            reduce using rule 60 (not_op -> NOT exp_8 .)
    ID              reduce using rule 60 (not_op -> NOT exp_8 .)
    IF              reduce using rule 60 (not_op -> NOT exp_8 .)
    FOR             reduce using rule 60 (not_op -> NOT exp_8 .)
    INTEGER         reduce using rule 60 (not_op -> NOT exp_8 .)
    WHILE           reduce using rule 60 (not_op -> NOT exp_8 .)
    LOOP            reduce using rule 60 (not_op -> NOT exp_8 .)
    NOT             reduce using rule 60 (not_op -> NOT exp_8 .)
    NEGAC           reduce using rule 60 (not_op -> NOT exp_8 .)
    ADC_DP          reduce using rule 60 (not_op -> NOT exp_8 .)
    DECREMENTO      reduce using rule 60 (not_op -> NOT exp_8 .)
    LPAREN          reduce using rule 60 (not_op -> NOT exp_8 .)
    FLOAT           reduce using rule 60 (not_op -> NOT exp_8 .)
    STRING          reduce using rule 60 (not_op -> NOT exp_8 .)
    BOOLEAN         reduce using rule 60 (not_op -> NOT exp_8 .)
    SETA            reduce using rule 60 (not_op -> NOT exp_8 .)


state 136

    (61) not_s -> NEGAC exp_8 .

    POW             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MULT            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIVIDE          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIV             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIVI            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MOD             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LCM             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    GCD             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ADC             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SUB             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    CONC            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    IGUAL_DP        reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIF             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MAIOR           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MENOR           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MAIOR_IGL       reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LESSEQUAL       reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SMARTMATCH      reduce using rule 61 (not_s -> NEGAC exp_8 .)
    AND_S           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    PONTO_VIRGULA   reduce using rule 61 (not_s -> NEGAC exp_8 .)
    OR_S            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    XOR_S           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    RPAREN          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ABRE_CHAVE      reduce using rule 61 (not_s -> NEGAC exp_8 .)
    FUNCTION        reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ESCALAR         reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LIST            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ID              reduce using rule 61 (not_s -> NEGAC exp_8 .)
    IF              reduce using rule 61 (not_s -> NEGAC exp_8 .)
    FOR             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    INTEGER         reduce using rule 61 (not_s -> NEGAC exp_8 .)
    WHILE           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LOOP            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    NOT             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    NEGAC           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ADC_DP          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DECREMENTO      reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LPAREN          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    FLOAT           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    STRING          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    BOOLEAN         reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SETA            reduce using rule 61 (not_s -> NEGAC exp_8 .)


state 137

    (68) prefixo_incremento -> ADC_DP ID .

    POW             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MULT            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIVIDE          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIV             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIVI            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MOD             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LCM             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    GCD             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ADC             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SUB             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    CONC            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    IGUAL_DP        reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIF             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MAIOR           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MENOR           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MAIOR_IGL       reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LESSEQUAL       reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SMARTMATCH      reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    AND_S           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    PONTO_VIRGULA   reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    OR_S            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    XOR_S           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    RPAREN          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ABRE_CHAVE      reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    FUNCTION        reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ESCALAR         reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LIST            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ID              reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    IF              reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    FOR             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    INTEGER         reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    WHILE           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LOOP            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    NOT             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    NEGAC           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ADC_DP          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DECREMENTO      reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LPAREN          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    FLOAT           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    STRING          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    BOOLEAN         reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SETA            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)


state 138

    (70) prefixo_decremento -> DECREMENTO ID .

    POW             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MULT            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIVIDE          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIV             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIVI            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MOD             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LCM             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    GCD             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ADC             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SUB             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    CONC            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    IGUAL_DP        reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIF             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MENOR           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR_IGL       reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LESSEQUAL       reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SMARTMATCH      reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    AND_S           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    PONTO_VIRGULA   reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    OR_S            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    XOR_S           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    RPAREN          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ABRE_CHAVE      reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    FUNCTION        reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ESCALAR         reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LIST            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ID              reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    IF              reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    FOR             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    INTEGER         reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    WHILE           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LOOP            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    NOT             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    NEGAC           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ADC_DP          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LPAREN          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    FLOAT           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    STRING          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    BOOLEAN         reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SETA            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)


state 139

    (6) funcao_main -> FUNCTION MAIN LPAREN . RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE

    RPAREN          shift and go to state 185


state 140

    (98) funcao_com_params -> FUNCTION ID LPAREN . parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION ID LPAREN . RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    RPAREN          shift and go to state 187
    ESCALAR         shift and go to state 148
    COMMA           shift and go to state 149

    parametros                     shift and go to state 186
    funcao_com_um_paramentro       shift and go to state 146
    funcao_com_varios_paramentro   shift and go to state 147

state 141

    (74) parenteses -> LPAREN exp RPAREN .

    POW             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MULT            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIV             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIVI            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MOD             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LCM             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    GCD             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ADC             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SUB             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    CONC            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    IGUAL_DP        reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIF             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MAIOR           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MENOR           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MAIOR_IGL       reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LESSEQUAL       reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SMARTMATCH      reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    AND_S           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    PONTO_VIRGULA   reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    OR_S            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    XOR_S           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ABRE_CHAVE      reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    FUNCTION        reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ESCALAR         reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LIST            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ID              reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    IF              reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    FOR             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    INTEGER         reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    WHILE           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LOOP            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    NOT             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    NEGAC           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ADC_DP          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DECREMENTO      reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    FLOAT           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    STRING          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    BOOLEAN         reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SETA            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)


state 142

    (114) bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .

    FUNCTION        reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ID              reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    IF              reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    $end            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ELSE            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ELSIF           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)


state 143

    (105) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar .

    PONTO_VIRGULA   reduce using rule 105 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar .)


state 144

    (106) chamada_funcao_auxiliar -> parametros . RPAREN

    RPAREN          shift and go to state 188


state 145

    (107) chamada_funcao_auxiliar -> RPAREN .

    PONTO_VIRGULA   reduce using rule 107 (chamada_funcao_auxiliar -> RPAREN .)


state 146

    (100) parametros -> funcao_com_um_paramentro .

    RPAREN          reduce using rule 100 (parametros -> funcao_com_um_paramentro .)


state 147

    (101) parametros -> funcao_com_varios_paramentro .

    RPAREN          reduce using rule 101 (parametros -> funcao_com_varios_paramentro .)


state 148

    (102) funcao_com_um_paramentro -> ESCALAR .

    RPAREN          reduce using rule 102 (funcao_com_um_paramentro -> ESCALAR .)


state 149

    (103) funcao_com_varios_paramentro -> COMMA . ESCALAR parametros

    ESCALAR         shift and go to state 189


state 150

    (12) or -> exp_2 OR_S exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    OR_S            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    XOR_S           reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    RPAREN          reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    FUNCTION        reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    ESCALAR         reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    LIST            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    ID              reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    IF              reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    FOR             reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    INTEGER         reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    WHILE           reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    LOOP            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    NOT             reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    NEGAC           reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    ADC_DP          reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    DECREMENTO      reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    LPAREN          reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    FLOAT           reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    STRING          reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    BOOLEAN         reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    SETA            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    AND_S           shift and go to state 116


state 151

    (13) xor -> exp_2 XOR_S exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    OR_S            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    XOR_S           reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    RPAREN          reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    FUNCTION        reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    ESCALAR         reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    LIST            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    ID              reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    IF              reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    FOR             reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    INTEGER         reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    WHILE           reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    LOOP            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    NOT             reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    NEGAC           reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    ADC_DP          reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    DECREMENTO      reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    LPAREN          reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    FLOAT           reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    STRING          reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    BOOLEAN         reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    SETA            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    AND_S           shift and go to state 116


state 152

    (87) declaracao_escalar -> ESCALAR IGUAL tipo . PONTO_VIRGULA
    (76) completo -> tipo .

  ! shift/reduce conflict for PONTO_VIRGULA resolved as shift
    PONTO_VIRGULA   shift and go to state 190
    POW             reduce using rule 76 (completo -> tipo .)
    MULT            reduce using rule 76 (completo -> tipo .)
    DIVIDE          reduce using rule 76 (completo -> tipo .)
    DIV             reduce using rule 76 (completo -> tipo .)
    DIVI            reduce using rule 76 (completo -> tipo .)
    MOD             reduce using rule 76 (completo -> tipo .)
    LCM             reduce using rule 76 (completo -> tipo .)
    GCD             reduce using rule 76 (completo -> tipo .)
    ADC             reduce using rule 76 (completo -> tipo .)
    SUB             reduce using rule 76 (completo -> tipo .)
    CONC            reduce using rule 76 (completo -> tipo .)
    IGUAL_DP        reduce using rule 76 (completo -> tipo .)
    DIF             reduce using rule 76 (completo -> tipo .)
    MAIOR           reduce using rule 76 (completo -> tipo .)
    MENOR           reduce using rule 76 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 76 (completo -> tipo .)
    LESSEQUAL       reduce using rule 76 (completo -> tipo .)
    SMARTMATCH      reduce using rule 76 (completo -> tipo .)
    AND_S           reduce using rule 76 (completo -> tipo .)
    OR_S            reduce using rule 76 (completo -> tipo .)
    XOR_S           reduce using rule 76 (completo -> tipo .)

  ! PONTO_VIRGULA   [ reduce using rule 76 (completo -> tipo .) ]


state 153

    (104) atribuicao -> ESCALAR IGUAL exp_2 .
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 104 (atribuicao -> ESCALAR IGUAL exp_2 .)
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 154

    (88) declaracao_lista -> LIST IGUAL lista_valores . PONTO_VIRGULA
    (91) lista_valores_recursiva -> lista_valores . tipo
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    PONTO_VIRGULA   shift and go to state 191
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    tipo                           shift and go to state 192
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 155

    (89) lista_valores -> lista_valores_recursiva .

    PONTO_VIRGULA   reduce using rule 89 (lista_valores -> lista_valores_recursiva .)
    INTEGER         reduce using rule 89 (lista_valores -> lista_valores_recursiva .)
    FLOAT           reduce using rule 89 (lista_valores -> lista_valores_recursiva .)
    STRING          reduce using rule 89 (lista_valores -> lista_valores_recursiva .)
    BOOLEAN         reduce using rule 89 (lista_valores -> lista_valores_recursiva .)


state 156

    (90) lista_valores -> lista_valores_base .

    PONTO_VIRGULA   reduce using rule 90 (lista_valores -> lista_valores_base .)
    INTEGER         reduce using rule 90 (lista_valores -> lista_valores_base .)
    FLOAT           reduce using rule 90 (lista_valores -> lista_valores_base .)
    STRING          reduce using rule 90 (lista_valores -> lista_valores_base .)
    BOOLEAN         reduce using rule 90 (lista_valores -> lista_valores_base .)


state 157

    (92) lista_valores_base -> tipo .

    PONTO_VIRGULA   reduce using rule 92 (lista_valores_base -> tipo .)
    INTEGER         reduce using rule 92 (lista_valores_base -> tipo .)
    FLOAT           reduce using rule 92 (lista_valores_base -> tipo .)
    STRING          reduce using rule 92 (lista_valores_base -> tipo .)
    BOOLEAN         reduce using rule 92 (lista_valores_base -> tipo .)


state 158

    (108) condicional -> IF exp_2 bloco .
    (109) condicional -> IF exp_2 bloco . ELSE bloco
    (110) condicional -> IF exp_2 bloco . lista_elsif
    (111) condicional -> IF exp_2 bloco . lista_elsif ELSE bloco
    (133) declaracao_bloco -> bloco .
    (112) lista_elsif -> . ELSIF exp_2 bloco
    (113) lista_elsif -> . lista_elsif ELSIF exp_2 bloco

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for ELSIF resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for ESCALAR resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for LIST resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for ID resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for IF resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for FOR resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for INTEGER resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for WHILE resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for LOOP resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for ABRE_CHAVE resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for NOT resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for NEGAC resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for ADC_DP resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for LPAREN resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for FLOAT resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for STRING resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for $end resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 108 (condicional -> IF exp_2 bloco .)
  ! shift/reduce conflict for ELSIF resolved as shift
    FUNCTION        reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ESCALAR         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LIST            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ID              reduce using rule 108 (condicional -> IF exp_2 bloco .)
    IF              reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FOR             reduce using rule 108 (condicional -> IF exp_2 bloco .)
    INTEGER         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    WHILE           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LOOP            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 108 (condicional -> IF exp_2 bloco .)
    NOT             reduce using rule 108 (condicional -> IF exp_2 bloco .)
    NEGAC           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ADC_DP          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    DECREMENTO      reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LPAREN          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FLOAT           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    STRING          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    BOOLEAN         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    $end            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ELSE            shift and go to state 193
    ELSIF           shift and go to state 195

  ! ELSE            [ reduce using rule 108 (condicional -> IF exp_2 bloco .) ]
  ! ELSIF           [ reduce using rule 108 (condicional -> IF exp_2 bloco .) ]
  ! ELSE            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ELSIF           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FUNCTION        [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ESCALAR         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LIST            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ID              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! IF              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FOR             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! INTEGER         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! WHILE           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LOOP            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ABRE_CHAVE      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NOT             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NEGAC           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ADC_DP          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! DECREMENTO      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LPAREN          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FLOAT           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! STRING          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! BOOLEAN         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! $end            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FECHA_CHAVE     [ reduce using rule 133 (declaracao_bloco -> bloco .) ]

    lista_elsif                    shift and go to state 194

state 159

    (93) loop -> FOR exp_2 SETA . ID ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 196


state 160

    (94) loop -> INTEGER PONTO TIMES . SETA ID ABRE_CHAVE comando FECHA_CHAVE

    SETA            shift and go to state 197


state 161

    (95) loop -> WHILE exp_2 ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    comando                        shift and go to state 198
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 162

    (96) loop -> LOOP LPAREN atribuicao . PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE

    PONTO_VIRGULA   shift and go to state 199


state 163

    (104) atribuicao -> ESCALAR . IGUAL exp_2

    IGUAL           shift and go to state 200


state 164

    (97) loop -> LOOP ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 201


state 165

    (5) comando -> declaracoes .
    (115) bloco -> declaracoes .

  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 5 (comando -> declaracoes .)
    FECHA_CHAVE     reduce using rule 5 (comando -> declaracoes .)

  ! FECHA_CHAVE     [ reduce using rule 115 (bloco -> declaracoes .) ]


state 166

    (16) and -> exp_3 AND_S exp_4 .
    (25) igual_dp -> exp_4 . IGUAL_DP exp_5
    (26) dif -> exp_4 . DIF exp_5
    (27) maior -> exp_4 . MAIOR exp_5
    (28) menor -> exp_4 . MENOR exp_5
    (29) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (30) menor_igual -> exp_4 . LESSEQUAL exp_5
    (31) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    PONTO_VIRGULA   reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    OR_S            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    XOR_S           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    RPAREN          reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    ABRE_CHAVE      reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    FUNCTION        reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    ESCALAR         reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    LIST            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    ID              reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    IF              reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    FOR             reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    INTEGER         reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    WHILE           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    LOOP            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    NOT             reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    NEGAC           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    ADC_DP          reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    DECREMENTO      reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    LPAREN          reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    FLOAT           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    STRING          reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    BOOLEAN         reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    SETA            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    IGUAL_DP        shift and go to state 117
    DIF             shift and go to state 118
    MAIOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAIOR_IGL       shift and go to state 121
    LESSEQUAL       shift and go to state 122
    SMARTMATCH      shift and go to state 123


state 167

    (25) igual_dp -> exp_4 IGUAL_DP exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DIF             reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MENOR           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR_IGL       reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LESSEQUAL       reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SMARTMATCH      reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    AND_S           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PONTO_VIRGULA   reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OR_S            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    XOR_S           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RPAREN          reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ABRE_CHAVE      reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FUNCTION        reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ESCALAR         reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LIST            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ID              reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    IF              reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FOR             reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    INTEGER         reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    WHILE           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LOOP            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NOT             reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NEGAC           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC_DP          reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DECREMENTO      reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LPAREN          reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FLOAT           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    STRING          reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    BOOLEAN         reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SETA            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 168

    (26) dif -> exp_4 DIF exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    DIF             reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MAIOR           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MENOR           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MAIOR_IGL       reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    LESSEQUAL       reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    SMARTMATCH      reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    AND_S           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    PONTO_VIRGULA   reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    OR_S            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    XOR_S           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    RPAREN          reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ABRE_CHAVE      reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    FUNCTION        reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ESCALAR         reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    LIST            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ID              reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    IF              reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    FOR             reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    INTEGER         reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    WHILE           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    LOOP            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    NOT             reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    NEGAC           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ADC_DP          reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    DECREMENTO      reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    LPAREN          reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    FLOAT           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    STRING          reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    BOOLEAN         reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    SETA            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 169

    (27) maior -> exp_4 MAIOR exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    DIF             reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MENOR           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR_IGL       reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    LESSEQUAL       reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    SMARTMATCH      reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    AND_S           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    OR_S            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    XOR_S           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    RPAREN          reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ABRE_CHAVE      reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    FUNCTION        reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ESCALAR         reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    LIST            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ID              reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    IF              reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    FOR             reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    INTEGER         reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    WHILE           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    LOOP            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    NOT             reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    NEGAC           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ADC_DP          reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    DECREMENTO      reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    LPAREN          reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    FLOAT           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    STRING          reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    BOOLEAN         reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    SETA            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 170

    (28) menor -> exp_4 MENOR exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    DIF             reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MAIOR           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MENOR           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MAIOR_IGL       reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    LESSEQUAL       reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    SMARTMATCH      reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    AND_S           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    OR_S            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    XOR_S           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    RPAREN          reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ABRE_CHAVE      reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    FUNCTION        reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ESCALAR         reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    LIST            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ID              reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    IF              reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    FOR             reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    INTEGER         reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    WHILE           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    LOOP            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    NOT             reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    NEGAC           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ADC_DP          reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    DECREMENTO      reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    LPAREN          reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    FLOAT           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    STRING          reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    BOOLEAN         reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    SETA            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 171

    (29) maior_igual -> exp_4 MAIOR_IGL exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DIF             reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MENOR           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR_IGL       reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LESSEQUAL       reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SMARTMATCH      reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    AND_S           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PONTO_VIRGULA   reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OR_S            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    XOR_S           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RPAREN          reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ABRE_CHAVE      reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FUNCTION        reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ESCALAR         reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LIST            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ID              reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    IF              reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FOR             reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    INTEGER         reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    WHILE           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LOOP            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NOT             reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NEGAC           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC_DP          reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DECREMENTO      reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LPAREN          reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FLOAT           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    STRING          reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    BOOLEAN         reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SETA            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 172

    (30) menor_igual -> exp_4 LESSEQUAL exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DIF             reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MENOR           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR_IGL       reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LESSEQUAL       reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SMARTMATCH      reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    AND_S           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PONTO_VIRGULA   reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OR_S            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    XOR_S           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RPAREN          reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ABRE_CHAVE      reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FUNCTION        reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ESCALAR         reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LIST            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ID              reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    IF              reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FOR             reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    INTEGER         reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    WHILE           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LOOP            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NOT             reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NEGAC           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC_DP          reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DECREMENTO      reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LPAREN          reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FLOAT           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    STRING          reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    BOOLEAN         reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SETA            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 173

    (31) smartmatch -> exp_4 SMARTMATCH exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DIF             reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MENOR           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR_IGL       reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LESSEQUAL       reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SMARTMATCH      reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    AND_S           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PONTO_VIRGULA   reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OR_S            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    XOR_S           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RPAREN          reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ABRE_CHAVE      reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FUNCTION        reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ESCALAR         reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LIST            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ID              reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    IF              reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FOR             reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    INTEGER         reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    WHILE           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LOOP            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NOT             reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NEGAC           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC_DP          reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DECREMENTO      reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LPAREN          reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FLOAT           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    STRING          reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    BOOLEAN         reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SETA            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC             shift and go to state 124
    SUB             shift and go to state 125
    CONC            shift and go to state 126


state 174

    (36) adicao -> exp_5 ADC exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SUB             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    CONC            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    IGUAL_DP        reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    DIF             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MAIOR           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MENOR           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MAIOR_IGL       reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    LESSEQUAL       reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SMARTMATCH      reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    AND_S           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    PONTO_VIRGULA   reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    OR_S            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    XOR_S           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    RPAREN          reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    ABRE_CHAVE      reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    FUNCTION        reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    ESCALAR         reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    LIST            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    ID              reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    IF              reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    FOR             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    INTEGER         reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    WHILE           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    LOOP            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    NOT             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    NEGAC           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    ADC_DP          reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    DECREMENTO      reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    LPAREN          reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    FLOAT           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    STRING          reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    BOOLEAN         reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SETA            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MULT            shift and go to state 127
    DIVIDE          shift and go to state 128
    DIV             shift and go to state 129
    DIVI            shift and go to state 130
    MOD             shift and go to state 131
    LCM             shift and go to state 132
    GCD             shift and go to state 133


state 175

    (37) subtracao -> exp_5 SUB exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SUB             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    CONC            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    IGUAL_DP        reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    DIF             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MENOR           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR_IGL       reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    LESSEQUAL       reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SMARTMATCH      reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    AND_S           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    PONTO_VIRGULA   reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    OR_S            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    XOR_S           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    RPAREN          reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    ABRE_CHAVE      reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    FUNCTION        reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    ESCALAR         reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    LIST            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    ID              reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    IF              reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    FOR             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    INTEGER         reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    WHILE           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    LOOP            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    NOT             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    NEGAC           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    ADC_DP          reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    DECREMENTO      reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    LPAREN          reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    FLOAT           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    STRING          reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    BOOLEAN         reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SETA            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MULT            shift and go to state 127
    DIVIDE          shift and go to state 128
    DIV             shift and go to state 129
    DIVI            shift and go to state 130
    MOD             shift and go to state 131
    LCM             shift and go to state 132
    GCD             shift and go to state 133


state 176

    (38) conc -> exp_5 CONC exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SUB             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    CONC            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    IGUAL_DP        reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    DIF             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MAIOR           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MENOR           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MAIOR_IGL       reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    LESSEQUAL       reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SMARTMATCH      reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    AND_S           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    PONTO_VIRGULA   reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    OR_S            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    XOR_S           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    RPAREN          reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    ABRE_CHAVE      reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    FUNCTION        reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    ESCALAR         reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    LIST            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    ID              reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    IF              reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    FOR             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    INTEGER         reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    WHILE           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    LOOP            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    NOT             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    NEGAC           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    ADC_DP          reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    DECREMENTO      reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    LPAREN          reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    FLOAT           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    STRING          reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    BOOLEAN         reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SETA            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MULT            shift and go to state 127
    DIVIDE          shift and go to state 128
    DIV             shift and go to state 129
    DIVI            shift and go to state 130
    MOD             shift and go to state 131
    LCM             shift and go to state 132
    GCD             shift and go to state 133


state 177

    (47) mult -> exp_6 MULT exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIVIDE          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIV             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIVI            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MOD             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LCM             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    GCD             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ADC             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SUB             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    CONC            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    IGUAL_DP        reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIF             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MAIOR           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MENOR           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MAIOR_IGL       reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LESSEQUAL       reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SMARTMATCH      reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    AND_S           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    PONTO_VIRGULA   reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    OR_S            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    XOR_S           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    RPAREN          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ABRE_CHAVE      reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    FUNCTION        reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ESCALAR         reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LIST            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ID              reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    IF              reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    FOR             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    INTEGER         reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    WHILE           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LOOP            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    NOT             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    NEGAC           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ADC_DP          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DECREMENTO      reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LPAREN          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    FLOAT           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    STRING          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    BOOLEAN         reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SETA            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    POW             shift and go to state 134


state 178

    (48) divide -> exp_6 DIVIDE exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIVIDE          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIV             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIVI            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MOD             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LCM             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    GCD             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ADC             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SUB             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    CONC            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    IGUAL_DP        reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIF             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MENOR           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR_IGL       reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LESSEQUAL       reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SMARTMATCH      reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    AND_S           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    PONTO_VIRGULA   reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    OR_S            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    XOR_S           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    RPAREN          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ABRE_CHAVE      reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    FUNCTION        reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ESCALAR         reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LIST            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ID              reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    IF              reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    FOR             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    INTEGER         reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    WHILE           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LOOP            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    NOT             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    NEGAC           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ADC_DP          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DECREMENTO      reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LPAREN          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    FLOAT           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    STRING          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    BOOLEAN         reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SETA            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    POW             shift and go to state 134


state 179

    (49) div -> exp_6 DIV exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIVIDE          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIV             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIVI            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MOD             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LCM             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    GCD             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ADC             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SUB             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    CONC            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    IGUAL_DP        reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIF             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MAIOR           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MENOR           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MAIOR_IGL       reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LESSEQUAL       reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SMARTMATCH      reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    AND_S           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    PONTO_VIRGULA   reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    OR_S            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    XOR_S           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    RPAREN          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ABRE_CHAVE      reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    FUNCTION        reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ESCALAR         reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LIST            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ID              reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    IF              reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    FOR             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    INTEGER         reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    WHILE           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LOOP            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    NOT             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    NEGAC           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ADC_DP          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DECREMENTO      reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LPAREN          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    FLOAT           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    STRING          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    BOOLEAN         reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SETA            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    POW             shift and go to state 134


state 180

    (50) divi -> exp_6 DIVI exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIVIDE          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIV             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIVI            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MOD             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LCM             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    GCD             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ADC             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SUB             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    CONC            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    IGUAL_DP        reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIF             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MAIOR           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MENOR           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MAIOR_IGL       reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LESSEQUAL       reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SMARTMATCH      reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    AND_S           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    PONTO_VIRGULA   reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    OR_S            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    XOR_S           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    RPAREN          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ABRE_CHAVE      reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    FUNCTION        reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ESCALAR         reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LIST            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ID              reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    IF              reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    FOR             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    INTEGER         reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    WHILE           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LOOP            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    NOT             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    NEGAC           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ADC_DP          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DECREMENTO      reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LPAREN          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    FLOAT           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    STRING          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    BOOLEAN         reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SETA            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    POW             shift and go to state 134


state 181

    (51) mod -> exp_6 MOD exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIVIDE          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIV             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIVI            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MOD             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LCM             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    GCD             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ADC             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SUB             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    CONC            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    IGUAL_DP        reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIF             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MAIOR           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MENOR           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MAIOR_IGL       reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LESSEQUAL       reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SMARTMATCH      reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    AND_S           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    PONTO_VIRGULA   reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    OR_S            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    XOR_S           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    RPAREN          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ABRE_CHAVE      reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    FUNCTION        reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ESCALAR         reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LIST            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ID              reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    IF              reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    FOR             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    INTEGER         reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    WHILE           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LOOP            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    NOT             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    NEGAC           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ADC_DP          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DECREMENTO      reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LPAREN          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    FLOAT           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    STRING          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    BOOLEAN         reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SETA            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    POW             shift and go to state 134


state 182

    (52) lcm -> exp_6 LCM exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIVIDE          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIV             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIVI            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MOD             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LCM             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    GCD             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ADC             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SUB             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    CONC            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    IGUAL_DP        reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIF             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MAIOR           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MENOR           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MAIOR_IGL       reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LESSEQUAL       reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SMARTMATCH      reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    AND_S           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    PONTO_VIRGULA   reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    OR_S            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    XOR_S           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    RPAREN          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ABRE_CHAVE      reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    FUNCTION        reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ESCALAR         reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LIST            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ID              reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    IF              reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    FOR             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    INTEGER         reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    WHILE           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LOOP            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    NOT             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    NEGAC           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ADC_DP          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DECREMENTO      reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LPAREN          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    FLOAT           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    STRING          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    BOOLEAN         reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SETA            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    POW             shift and go to state 134


state 183

    (53) gcd -> exp_6 GCD exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIVIDE          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIV             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIVI            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MOD             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LCM             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    GCD             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ADC             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SUB             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    CONC            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    IGUAL_DP        reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIF             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MAIOR           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MENOR           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MAIOR_IGL       reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LESSEQUAL       reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SMARTMATCH      reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    AND_S           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    PONTO_VIRGULA   reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    OR_S            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    XOR_S           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    RPAREN          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ABRE_CHAVE      reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    FUNCTION        reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ESCALAR         reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LIST            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ID              reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    IF              reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    FOR             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    INTEGER         reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    WHILE           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LOOP            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    NOT             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    NEGAC           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ADC_DP          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DECREMENTO      reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LPAREN          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    FLOAT           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    STRING          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    BOOLEAN         reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SETA            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    POW             shift and go to state 134


state 184

    (56) pow -> exp_7 POW exp_8 .

    POW             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MULT            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIVIDE          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIV             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIVI            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MOD             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LCM             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    GCD             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ADC             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SUB             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    CONC            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    IGUAL_DP        reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIF             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MAIOR           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MENOR           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MAIOR_IGL       reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LESSEQUAL       reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SMARTMATCH      reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    AND_S           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    PONTO_VIRGULA   reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    OR_S            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    XOR_S           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    RPAREN          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ABRE_CHAVE      reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    FUNCTION        reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ESCALAR         reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LIST            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ID              reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    IF              reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    FOR             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    INTEGER         reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    WHILE           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LOOP            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    NOT             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    NEGAC           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ADC_DP          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DECREMENTO      reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LPAREN          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    FLOAT           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    STRING          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    BOOLEAN         reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SETA            reduce using rule 56 (pow -> exp_7 POW exp_8 .)


state 185

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN . ABRE_CHAVE declaracoes_main FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 202


state 186

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros . RPAREN ABRE_CHAVE comando FECHA_CHAVE

    RPAREN          shift and go to state 203


state 187

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 204


state 188

    (106) chamada_funcao_auxiliar -> parametros RPAREN .

    PONTO_VIRGULA   reduce using rule 106 (chamada_funcao_auxiliar -> parametros RPAREN .)


state 189

    (103) funcao_com_varios_paramentro -> COMMA ESCALAR . parametros
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    ESCALAR         shift and go to state 148
    COMMA           shift and go to state 149

    parametros                     shift and go to state 205
    funcao_com_um_paramentro       shift and go to state 146
    funcao_com_varios_paramentro   shift and go to state 147

state 190

    (87) declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .

    FUNCTION        reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ESCALAR         reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LIST            reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ID              reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    IF              reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FOR             reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    INTEGER         reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    WHILE           reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LOOP            reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NOT             reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NEGAC           reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ADC_DP          reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LPAREN          reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FLOAT           reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    STRING          reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    $end            reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ELSE            reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ELSIF           reduce using rule 87 (declaracao_escalar -> ESCALAR IGUAL tipo PONTO_VIRGULA .)


state 191

    (88) declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .

    FUNCTION        reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ELSE            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ELSIF           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)


state 192

    (91) lista_valores_recursiva -> lista_valores tipo .

    PONTO_VIRGULA   reduce using rule 91 (lista_valores_recursiva -> lista_valores tipo .)
    INTEGER         reduce using rule 91 (lista_valores_recursiva -> lista_valores tipo .)
    FLOAT           reduce using rule 91 (lista_valores_recursiva -> lista_valores tipo .)
    STRING          reduce using rule 91 (lista_valores_recursiva -> lista_valores tipo .)
    BOOLEAN         reduce using rule 91 (lista_valores_recursiva -> lista_valores tipo .)


state 193

    (109) condicional -> IF exp_2 bloco ELSE . bloco
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    bloco                          shift and go to state 206
    declaracoes                    shift and go to state 88
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 194

    (110) condicional -> IF exp_2 bloco lista_elsif .
    (111) condicional -> IF exp_2 bloco lista_elsif . ELSE bloco
    (113) lista_elsif -> lista_elsif . ELSIF exp_2 bloco

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSIF resolved as shift
    FUNCTION        reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ESCALAR         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LIST            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ID              reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    IF              reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FOR             reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    INTEGER         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    WHILE           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LOOP            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ABRE_CHAVE      reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    NOT             reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    NEGAC           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ADC_DP          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    DECREMENTO      reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LPAREN          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FLOAT           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    STRING          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    BOOLEAN         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    $end            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FECHA_CHAVE     reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ELSE            shift and go to state 207
    ELSIF           shift and go to state 208

  ! ELSE            [ reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .) ]
  ! ELSIF           [ reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .) ]


state 195

    (112) lista_elsif -> ELSIF . exp_2 bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 209
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 196

    (93) loop -> FOR exp_2 SETA ID . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 210


state 197

    (94) loop -> INTEGER PONTO TIMES SETA . ID ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 211


state 198

    (95) loop -> WHILE exp_2 ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 212


state 199

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA . exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 213
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 200

    (104) atribuicao -> ESCALAR IGUAL . exp_2
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 153
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 201

    (97) loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)


state 202

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE . declaracoes_main FECHA_CHAVE
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    declaracoes_main               shift and go to state 214
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    declaracoes                    shift and go to state 88
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    declaracao_de_funcao           shift and go to state 10
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 203

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 215


state 204

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    comando                        shift and go to state 216
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 205

    (103) funcao_com_varios_paramentro -> COMMA ESCALAR parametros .

    RPAREN          reduce using rule 103 (funcao_com_varios_paramentro -> COMMA ESCALAR parametros .)


state 206

    (109) condicional -> IF exp_2 bloco ELSE bloco .
    (133) declaracao_bloco -> bloco .

  ! reduce/reduce conflict for ELSE resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for ELSIF resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for ESCALAR resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for LIST resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for ID resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for IF resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for FOR resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for INTEGER resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for WHILE resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for LOOP resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for ABRE_CHAVE resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for NOT resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for NEGAC resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for ADC_DP resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for LPAREN resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for FLOAT resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for STRING resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for $end resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FUNCTION        reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ESCALAR         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LIST            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ID              reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    IF              reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FOR             reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    INTEGER         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    WHILE           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LOOP            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ABRE_CHAVE      reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    NOT             reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEGAC           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ADC_DP          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    DECREMENTO      reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LPAREN          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FLOAT           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    STRING          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    BOOLEAN         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    $end            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FECHA_CHAVE     reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ELSE            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ELSIF           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)

  ! ELSE            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ELSIF           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FUNCTION        [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ESCALAR         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LIST            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ID              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! IF              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FOR             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! INTEGER         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! WHILE           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LOOP            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ABRE_CHAVE      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NOT             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NEGAC           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ADC_DP          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! DECREMENTO      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LPAREN          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FLOAT           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! STRING          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! BOOLEAN         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! $end            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FECHA_CHAVE     [ reduce using rule 133 (declaracao_bloco -> bloco .) ]


state 207

    (111) condicional -> IF exp_2 bloco lista_elsif ELSE . bloco
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    bloco                          shift and go to state 217
    declaracoes                    shift and go to state 88
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 208

    (113) lista_elsif -> lista_elsif ELSIF . exp_2 bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 218
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 209

    (112) lista_elsif -> ELSIF exp_2 . bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107
    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    bloco                          shift and go to state 219
    exp_3                          shift and go to state 38
    declaracoes                    shift and go to state 88
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 210

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    comando                        shift and go to state 220
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 211

    (94) loop -> INTEGER PONTO TIMES SETA ID . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 221


state 212

    (95) loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)


state 213

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 . PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 222
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 214

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main . FECHA_CHAVE
    (117) declaracoes -> declaracoes_main .

  ! shift/reduce conflict for FECHA_CHAVE resolved as shift
    FECHA_CHAVE     shift and go to state 223

  ! FECHA_CHAVE     [ reduce using rule 117 (declaracoes -> declaracoes_main .) ]


state 215

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    comando                        shift and go to state 224
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 216

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 225


state 217

    (111) condicional -> IF exp_2 bloco lista_elsif ELSE bloco .
    (133) declaracao_bloco -> bloco .

  ! reduce/reduce conflict for ELSE resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for ELSIF resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for ESCALAR resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for LIST resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for ID resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for IF resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for FOR resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for INTEGER resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for WHILE resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for LOOP resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for ABRE_CHAVE resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for NOT resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for NEGAC resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for ADC_DP resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for LPAREN resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for FLOAT resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for STRING resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for $end resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FUNCTION        reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ESCALAR         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LIST            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ID              reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IF              reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FOR             reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INTEGER         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    WHILE           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LOOP            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ABRE_CHAVE      reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NOT             reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEGAC           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ADC_DP          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    DECREMENTO      reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LPAREN          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FLOAT           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STRING          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BOOLEAN         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    $end            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FECHA_CHAVE     reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ELSE            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ELSIF           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)

  ! ELSE            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ELSIF           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FUNCTION        [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ESCALAR         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LIST            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ID              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! IF              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FOR             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! INTEGER         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! WHILE           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LOOP            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ABRE_CHAVE      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NOT             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NEGAC           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ADC_DP          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! DECREMENTO      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LPAREN          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FLOAT           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! STRING          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! BOOLEAN         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! $end            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FECHA_CHAVE     [ reduce using rule 133 (declaracao_bloco -> bloco .) ]


state 218

    (113) lista_elsif -> lista_elsif ELSIF exp_2 . bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107
    ABRE_CHAVE      shift and go to state 9
    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 26
    bloco                          shift and go to state 226
    exp_3                          shift and go to state 38
    declaracoes                    shift and go to state 88
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 219

    (112) lista_elsif -> ELSIF exp_2 bloco .
    (133) declaracao_bloco -> bloco .

  ! reduce/reduce conflict for ELSE resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ELSIF resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ESCALAR resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LIST resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ID resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for IF resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FOR resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for INTEGER resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for WHILE resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LOOP resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ABRE_CHAVE resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for NOT resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for NEGAC resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ADC_DP resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LPAREN resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FLOAT resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for STRING resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for $end resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSE            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LIST            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ID              reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    IF              reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FOR             reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    WHILE           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LOOP            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    NOT             reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    STRING          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    $end            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)

  ! ELSE            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ELSIF           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FUNCTION        [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ESCALAR         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LIST            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ID              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! IF              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FOR             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! INTEGER         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! WHILE           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LOOP            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ABRE_CHAVE      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NOT             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NEGAC           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ADC_DP          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! DECREMENTO      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LPAREN          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FLOAT           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! STRING          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! BOOLEAN         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! $end            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FECHA_CHAVE     [ reduce using rule 133 (declaracao_bloco -> bloco .) ]


state 220

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 227


state 221

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    comando                        shift and go to state 228
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    atribuicao                     shift and go to state 22
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    exp_2                          shift and go to state 26
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 222

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA . exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    exp_2                          shift and go to state 229
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    tipo                           shift and go to state 29
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 223

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .

    ESCALAR         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LIST            reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ID              reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    IF              reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    FOR             reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    INTEGER         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    WHILE           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LOOP            reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    FUNCTION        reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    NOT             reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    NEGAC           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ADC_DP          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    DECREMENTO      reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LPAREN          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    FLOAT           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    STRING          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    BOOLEAN         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)


state 224

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 230


state 225

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)


state 226

    (113) lista_elsif -> lista_elsif ELSIF exp_2 bloco .
    (133) declaracao_bloco -> bloco .

  ! reduce/reduce conflict for ELSE resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ELSIF resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ESCALAR resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LIST resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ID resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for IF resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FOR resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for INTEGER resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for WHILE resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LOOP resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ABRE_CHAVE resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for NOT resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for NEGAC resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for ADC_DP resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for LPAREN resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FLOAT resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for STRING resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for $end resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
  ! reduce/reduce conflict for FECHA_CHAVE resolved using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSE            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LIST            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ID              reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IF              reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FOR             reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    WHILE           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LOOP            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NOT             reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STRING          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    $end            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)

  ! ELSE            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ELSIF           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FUNCTION        [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ESCALAR         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LIST            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ID              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! IF              [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FOR             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! INTEGER         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! WHILE           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LOOP            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ABRE_CHAVE      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NOT             [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! NEGAC           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! ADC_DP          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! DECREMENTO      [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! LPAREN          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FLOAT           [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! STRING          [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! BOOLEAN         [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! $end            [ reduce using rule 133 (declaracao_bloco -> bloco .) ]
  ! FECHA_CHAVE     [ reduce using rule 133 (declaracao_bloco -> bloco .) ]


state 227

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)


state 228

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 231


state 229

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 . RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    RPAREN          shift and go to state 232
    OR_S            shift and go to state 106
    XOR_S           shift and go to state 107


state 230

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)


state 231

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)


state 232

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 233


state 233

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (116) declaracoes -> . declaracao_de_funcao
    (117) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (118) declaracoes_main -> . declaracao_de_atribuicao
    (119) declaracoes_main -> . declaracao_de_chamada_funcao
    (120) declaracoes_main -> . declaracao_de_condicional
    (121) declaracoes_main -> . declaracao_loop
    (122) declaracoes_main -> . declaracao_de_expressao
    (123) declaracoes_main -> . declaracao_bloco
    (124) declaracoes_main -> . declaracao_escalar
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (87) declaracao_escalar -> . ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (115) bloco -> . declaracoes
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . variaveis
    (76) completo -> . tipo
    (77) variaveis -> . escalar
    (78) tipo -> . inteiro
    (79) tipo -> . float
    (80) tipo -> . string
    (81) tipo -> . boolean
    (86) escalar -> . ESCALAR
    (82) inteiro -> . INTEGER
    (83) float -> . FLOAT
    (84) string -> . STRING
    (85) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 89
    ESCALAR         shift and go to state 28
    LIST            shift and go to state 30
    ID              shift and go to state 21
    IF              shift and go to state 31
    FOR             shift and go to state 32
    INTEGER         shift and go to state 33
    WHILE           shift and go to state 34
    LOOP            shift and go to state 35
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 66
    NEGAC           shift and go to state 67
    ADC_DP          shift and go to state 76
    DECREMENTO      shift and go to state 77
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86

    atribuicao                     shift and go to state 22
    exp_2                          shift and go to state 26
    comando                        shift and go to state 234
    declaracoes                    shift and go to state 165
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar             shift and go to state 19
    declaracao_lista               shift and go to state 20
    chamada_funcao                 shift and go to state 23
    condicional                    shift and go to state 24
    loop                           shift and go to state 25
    bloco                          shift and go to state 27
    tipo                           shift and go to state 29
    or                             shift and go to state 36
    xor                            shift and go to state 37
    exp_3                          shift and go to state 38
    and                            shift and go to state 39
    exp_4                          shift and go to state 40
    igual_dp                       shift and go to state 41
    dif                            shift and go to state 42
    maior                          shift and go to state 43
    menor                          shift and go to state 44
    maior_igual                    shift and go to state 45
    menor_igual                    shift and go to state 46
    smartmatch                     shift and go to state 47
    exp_5                          shift and go to state 48
    adicao                         shift and go to state 49
    subtracao                      shift and go to state 50
    conc                           shift and go to state 51
    exp_6                          shift and go to state 52
    mult                           shift and go to state 53
    divide                         shift and go to state 54
    div                            shift and go to state 55
    divi                           shift and go to state 56
    mod                            shift and go to state 57
    lcm                            shift and go to state 58
    gcd                            shift and go to state 59
    exp_7                          shift and go to state 60
    pow                            shift and go to state 61
    exp_8                          shift and go to state 62
    not_op                         shift and go to state 63
    not_s                          shift and go to state 64
    exp_9                          shift and go to state 65
    unario                         shift and go to state 68
    operando                       shift and go to state 69
    prefixo_incremento             shift and go to state 70
    posfixo_incremento             shift and go to state 71
    prefixo_decremento             shift and go to state 72
    posfixo_decremento             shift and go to state 73
    parenteses                     shift and go to state 74
    completo                       shift and go to state 75
    variaveis                      shift and go to state 78
    escalar                        shift and go to state 79
    inteiro                        shift and go to state 80
    float                          shift and go to state 81
    string                         shift and go to state 82
    boolean                        shift and go to state 83

state 234

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 235


state 235

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSE            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ELSIF           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for ESCALAR in state 5 resolved as shift
WARNING: shift/reduce conflict for LIST in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for IF in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 5 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 5 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 5 resolved as shift
WARNING: shift/reduce conflict for ABRE_CHAVE in state 5 resolved as shift
WARNING: shift/reduce conflict for NOT in state 5 resolved as shift
WARNING: shift/reduce conflict for NEGAC in state 5 resolved as shift
WARNING: shift/reduce conflict for ADC_DP in state 5 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 5 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 5 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVE in state 99 resolved as shift
WARNING: shift/reduce conflict for PONTO_VIRGULA in state 152 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 158 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 158 resolved as shift
WARNING: shift/reduce conflict for ELSIF in state 158 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 194 resolved as shift
WARNING: shift/reduce conflict for ELSIF in state 194 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVE in state 214 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (comando -> declaracoes)
WARNING: rejected rule (bloco -> declaracoes) in state 5
WARNING: reduce/reduce conflict in state 87 resolved using rule (comando_com_main -> funcao_main declaracoes_main)
WARNING: rejected rule (declaracoes -> declaracoes_main) in state 87
WARNING: reduce/reduce conflict in state 158 resolved using rule (condicional -> IF exp_2 bloco)
WARNING: rejected rule (declaracao_bloco -> bloco) in state 158
WARNING: reduce/reduce conflict in state 165 resolved using rule (comando -> declaracoes)
WARNING: rejected rule (bloco -> declaracoes) in state 165
WARNING: reduce/reduce conflict in state 206 resolved using rule (condicional -> IF exp_2 bloco ELSE bloco)
WARNING: rejected rule (declaracao_bloco -> bloco) in state 206
WARNING: reduce/reduce conflict in state 217 resolved using rule (condicional -> IF exp_2 bloco lista_elsif ELSE bloco)
WARNING: rejected rule (declaracao_bloco -> bloco) in state 217
WARNING: reduce/reduce conflict in state 219 resolved using rule (lista_elsif -> ELSIF exp_2 bloco)
WARNING: rejected rule (declaracao_bloco -> bloco) in state 219
WARNING: reduce/reduce conflict in state 226 resolved using rule (lista_elsif -> lista_elsif ELSIF exp_2 bloco)
WARNING: rejected rule (declaracao_bloco -> bloco) in state 226
