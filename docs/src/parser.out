Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANY
    BAG
    BREAK
    COMMENT
    CONSTANT
    EXIT
    EXPORT
    FALSE
    HAS
    IMPORT
    INT
    KMARK
    LAST
    LET
    MAP
    MU
    MULTI
    NEED
    NEXT
    NIL
    ONLY
    OR
    PAIR
    PUSH
    REDO
    REPLICARSTRING
    REQUIRE
    RETURN
    SET
    SPLICE
    STATE
    STR
    TRUE
    UNARYMINUS
    UNIT
    UNSHIFT
    USE
    XOR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> comando_com_main
Rule 2     comando_com_main -> funcao_main declaracoes_main
Rule 3     comando_com_main -> declaracoes comando_com_main
Rule 4     comando_com_main -> comando
Rule 5     comando -> declaracoes
Rule 6     funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
Rule 7     exp -> PONTO_VIRGULA
Rule 8     exp -> exp_2
Rule 9     exp_2 -> or
Rule 10    exp_2 -> xor
Rule 11    exp_2 -> exp_3
Rule 12    or -> exp_2 OR_S exp_3
Rule 13    xor -> exp_2 XOR_S exp_3
Rule 14    exp_3 -> and
Rule 15    exp_3 -> exp_4
Rule 16    and -> exp_3 AND_S exp_4
Rule 17    exp_4 -> igual_dp
Rule 18    exp_4 -> dif
Rule 19    exp_4 -> maior
Rule 20    exp_4 -> menor
Rule 21    exp_4 -> maior_igual
Rule 22    exp_4 -> menor_igual
Rule 23    exp_4 -> smartmatch
Rule 24    exp_4 -> exp_5
Rule 25    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 26    dif -> exp_4 DIF exp_5
Rule 27    maior -> exp_4 MAIOR exp_5
Rule 28    menor -> exp_4 MENOR exp_5
Rule 29    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 30    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 31    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 32    exp_5 -> adicao
Rule 33    exp_5 -> subtracao
Rule 34    exp_5 -> conc
Rule 35    exp_5 -> exp_6
Rule 36    adicao -> exp_5 ADC exp_6
Rule 37    subtracao -> exp_5 SUB exp_6
Rule 38    conc -> exp_5 CONC exp_6
Rule 39    exp_6 -> mult
Rule 40    exp_6 -> divide
Rule 41    exp_6 -> div
Rule 42    exp_6 -> divi
Rule 43    exp_6 -> mod
Rule 44    exp_6 -> lcm
Rule 45    exp_6 -> gcd
Rule 46    exp_6 -> exp_7
Rule 47    mult -> exp_6 MULT exp_7
Rule 48    divide -> exp_6 DIVIDE exp_7
Rule 49    div -> exp_6 DIV exp_7
Rule 50    divi -> exp_6 DIVI exp_7
Rule 51    mod -> exp_6 MOD exp_7
Rule 52    lcm -> exp_6 LCM exp_7
Rule 53    gcd -> exp_6 GCD exp_7
Rule 54    exp_7 -> pow
Rule 55    exp_7 -> exp_8
Rule 56    pow -> exp_7 POW exp_8
Rule 57    exp_8 -> not_op
Rule 58    exp_8 -> not_s
Rule 59    exp_8 -> exp_9
Rule 60    not_op -> NOT exp_8
Rule 61    not_s -> NEGAC exp_8
Rule 62    exp_9 -> unario
Rule 63    exp_9 -> operando
Rule 64    unario -> prefixo_incremento
Rule 65    unario -> posfixo_incremento
Rule 66    unario -> prefixo_decremento
Rule 67    unario -> posfixo_decremento
Rule 68    prefixo_incremento -> ADC_DP ID
Rule 69    posfixo_incremento -> ID ADC_DP
Rule 70    prefixo_decremento -> DECREMENTO ID
Rule 71    posfixo_decremento -> ID DECREMENTO
Rule 72    operando -> parenteses
Rule 73    operando -> completo
Rule 74    parenteses -> LPAREN exp RPAREN
Rule 75    completo -> tipo
Rule 76    completo -> escalar
Rule 77    tipo -> inteiro
Rule 78    tipo -> float
Rule 79    tipo -> string
Rule 80    tipo -> boolean
Rule 81    inteiro -> INTEGER
Rule 82    float -> FLOAT
Rule 83    string -> STRING
Rule 84    boolean -> BOOLEAN
Rule 85    escalar -> ESCALAR
Rule 86    declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA
Rule 87    declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA
Rule 88    declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA
Rule 89    lista_valores -> lista_valores_recursiva
Rule 90    lista_valores -> lista_valores_base
Rule 91    lista_valores_recursiva -> lista_valores COMMA tipo
Rule 92    lista_valores_base -> tipo
Rule 93    loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
Rule 94    loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
Rule 95    loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
Rule 96    loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 97    loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE
Rule 98    funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 99    funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
Rule 100   parametros -> funcao_com_um_paramentro
Rule 101   parametros -> funcao_com_varios_paramentro
Rule 102   funcao_com_um_paramentro -> ESCALAR
Rule 103   funcao_com_varios_paramentro -> COMMA ESCALAR parametros
Rule 104   atribuicao -> ESCALAR IGUAL exp_2
Rule 105   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar
Rule 106   chamada_funcao_auxiliar -> parametros RPAREN
Rule 107   chamada_funcao_auxiliar -> RPAREN
Rule 108   condicional -> IF exp_2 bloco
Rule 109   condicional -> IF exp_2 bloco ELSE bloco
Rule 110   condicional -> IF exp_2 bloco lista_elsif
Rule 111   condicional -> IF exp_2 bloco lista_elsif ELSE bloco
Rule 112   lista_elsif -> ELSIF exp_2 bloco
Rule 113   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 114   bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE
Rule 115   declaracoes -> declaracao_de_funcao
Rule 116   declaracoes -> declaracoes_main
Rule 117   declaracoes_main -> declaracao_de_atribuicao
Rule 118   declaracoes_main -> declaracao_de_chamada_funcao
Rule 119   declaracoes_main -> declaracao_de_condicional
Rule 120   declaracoes_main -> declaracao_loop
Rule 121   declaracoes_main -> declaracao_de_expressao
Rule 122   declaracoes_main -> declaracao_bloco
Rule 123   declaracoes_main -> declaracao_escalar_MY
Rule 124   declaracoes_main -> declaracao_escalar_OUR
Rule 125   declaracoes_main -> declaracao_lista
Rule 126   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 127   declaracao_de_funcao -> funcao_com_params
Rule 128   declaracao_de_funcao -> funcao_sem_params
Rule 129   declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA
Rule 130   declaracao_de_condicional -> condicional
Rule 131   declaracao_loop -> loop
Rule 132   declaracao_de_expressao -> exp_2 PONTO_VIRGULA
Rule 133   declaracao_bloco -> bloco

Terminals, with rules where they appear

ABRE_CHAVE           : 6 93 94 95 96 97 98 99 114
ADC                  : 36
ADC_DP               : 68 69
AND                  : 
AND_S                : 16
ANY                  : 
BAG                  : 
BOOLEAN              : 84
BREAK                : 
COMMA                : 91 103
COMMENT              : 
CONC                 : 38
CONSTANT             : 
DECREMENTO           : 70 71
DIF                  : 26
DIV                  : 49
DIVI                 : 50
DIVIDE               : 48
ELSE                 : 109 111
ELSIF                : 112 113
ESCALAR              : 85 86 87 102 103 104
EXIT                 : 
EXPORT               : 
FALSE                : 
FECHA_CHAVE          : 6 93 94 95 96 97 98 99 114
FLOAT                : 82
FOR                  : 93
FUNCTION             : 6 98 99
GCD                  : 53
HAS                  : 
ID                   : 68 69 70 71 93 94 98 99 105
IF                   : 108 109 110 111
IGUAL                : 86 87 88 104
IGUAL_DP             : 25
IMPORT               : 
INT                  : 
INTEGER              : 81 94
KMARK                : 
LAST                 : 
LCM                  : 52
LESSEQUAL            : 30
LET                  : 
LIST                 : 88
LOOP                 : 96 97
LPAREN               : 6 74 96 98 99 105
MAIN                 : 6
MAIOR                : 27
MAIOR_IGL            : 29
MAP                  : 
MENOR                : 28
MOD                  : 51
MU                   : 
MULT                 : 47
MULTI                : 
MY                   : 86
NEED                 : 
NEGAC                : 61
NEXT                 : 
NIL                  : 
NOT                  : 60
ONLY                 : 
OR                   : 
OR_S                 : 12
OUR                  : 87
PAIR                 : 
PONTO                : 94
PONTO_VIRGULA        : 7 86 87 88 96 96 126 129 132
POW                  : 56
PUSH                 : 
REDO                 : 
REPLICARSTRING       : 
REQUIRE              : 
RETURN               : 
RPAREN               : 6 74 96 98 99 106 107
SET                  : 
SETA                 : 93 94
SMARTMATCH           : 31
SPLICE               : 
STATE                : 
STR                  : 
STRING               : 83
SUB                  : 37
TIMES                : 94
TRUE                 : 
UNARYMINUS           : 
UNIT                 : 
UNSHIFT              : 
USE                  : 
WHILE                : 95
XOR                  : 
XOR_S                : 13
error                : 

Nonterminals, with rules where they appear

adicao               : 32
and                  : 14
atribuicao           : 96 126
bloco                : 108 109 109 110 111 111 112 113 133
boolean              : 80
chamada_funcao       : 129
chamada_funcao_auxiliar : 105
comando              : 4 93 94 95 96 97 98 99
comando_com_main     : 1 3
completo             : 73
conc                 : 34
condicional          : 130
declaracao_bloco     : 122
declaracao_de_atribuicao : 117
declaracao_de_chamada_funcao : 118
declaracao_de_condicional : 119
declaracao_de_expressao : 121
declaracao_de_funcao : 115
declaracao_escalar_MY : 123
declaracao_escalar_OUR : 124
declaracao_lista     : 125
declaracao_loop      : 120
declaracoes          : 3 5 114
declaracoes_main     : 2 6 116
dif                  : 18
div                  : 41
divi                 : 42
divide               : 40
escalar              : 76
exp                  : 74
exp_2                : 8 12 13 93 95 96 96 104 108 109 110 111 112 113 132
exp_3                : 11 12 13 16
exp_4                : 15 16 25 26 27 28 29 30 31
exp_5                : 24 25 26 27 28 29 30 31 36 37 38
exp_6                : 35 36 37 38 47 48 49 50 51 52 53
exp_7                : 46 47 48 49 50 51 52 53 56
exp_8                : 55 56 60 61
exp_9                : 59
float                : 78
funcao_com_params    : 127
funcao_com_um_paramentro : 100
funcao_com_varios_paramentro : 101
funcao_main          : 2
funcao_sem_params    : 128
gcd                  : 45
igual_dp             : 17
inteiro              : 77
lcm                  : 44
lista_elsif          : 110 111 113
lista_valores        : 88 91
lista_valores_base   : 90
lista_valores_recursiva : 89
loop                 : 131
maior                : 19
maior_igual          : 21
menor                : 20
menor_igual          : 22
mod                  : 43
mult                 : 39
not_op               : 57
not_s                : 58
operando             : 63
or                   : 9
parametros           : 98 103 106
parenteses           : 72
posfixo_decremento   : 67
posfixo_incremento   : 65
pow                  : 54
prefixo_decremento   : 66
prefixo_incremento   : 64
programa             : 0
smartmatch           : 23
string               : 79
subtracao            : 33
tipo                 : 75 86 87 91 92
unario               : 62
xor                  : 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . comando_com_main
    (2) comando_com_main -> . funcao_main declaracoes_main
    (3) comando_com_main -> . declaracoes comando_com_main
    (4) comando_com_main -> . comando
    (6) funcao_main -> . FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (5) comando -> . declaracoes
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 7
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    programa                       shift and go to state 1
    comando_com_main               shift and go to state 2
    funcao_main                    shift and go to state 3
    declaracoes_main               shift and go to state 4
    declaracoes                    shift and go to state 5
    comando                        shift and go to state 6
    declaracao_de_funcao           shift and go to state 10
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 1

    (0) S' -> programa .



state 2

    (1) programa -> comando_com_main .

    $end            reduce using rule 1 (programa -> comando_com_main .)


state 3

    (2) comando_com_main -> funcao_main . declaracoes_main
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    declaracoes_main               shift and go to state 89
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 4

    (116) declaracoes -> declaracoes_main .

    FUNCTION        reduce using rule 116 (declaracoes -> declaracoes_main .)
    MY              reduce using rule 116 (declaracoes -> declaracoes_main .)
    OUR             reduce using rule 116 (declaracoes -> declaracoes_main .)
    LIST            reduce using rule 116 (declaracoes -> declaracoes_main .)
    ESCALAR         reduce using rule 116 (declaracoes -> declaracoes_main .)
    ID              reduce using rule 116 (declaracoes -> declaracoes_main .)
    IF              reduce using rule 116 (declaracoes -> declaracoes_main .)
    FOR             reduce using rule 116 (declaracoes -> declaracoes_main .)
    INTEGER         reduce using rule 116 (declaracoes -> declaracoes_main .)
    WHILE           reduce using rule 116 (declaracoes -> declaracoes_main .)
    LOOP            reduce using rule 116 (declaracoes -> declaracoes_main .)
    ABRE_CHAVE      reduce using rule 116 (declaracoes -> declaracoes_main .)
    NOT             reduce using rule 116 (declaracoes -> declaracoes_main .)
    NEGAC           reduce using rule 116 (declaracoes -> declaracoes_main .)
    ADC_DP          reduce using rule 116 (declaracoes -> declaracoes_main .)
    DECREMENTO      reduce using rule 116 (declaracoes -> declaracoes_main .)
    LPAREN          reduce using rule 116 (declaracoes -> declaracoes_main .)
    FLOAT           reduce using rule 116 (declaracoes -> declaracoes_main .)
    STRING          reduce using rule 116 (declaracoes -> declaracoes_main .)
    BOOLEAN         reduce using rule 116 (declaracoes -> declaracoes_main .)
    $end            reduce using rule 116 (declaracoes -> declaracoes_main .)
    FECHA_CHAVE     reduce using rule 116 (declaracoes -> declaracoes_main .)


state 5

    (3) comando_com_main -> declaracoes . comando_com_main
    (5) comando -> declaracoes .
    (2) comando_com_main -> . funcao_main declaracoes_main
    (3) comando_com_main -> . declaracoes comando_com_main
    (4) comando_com_main -> . comando
    (6) funcao_main -> . FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (5) comando -> . declaracoes
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    $end            reduce using rule 5 (comando -> declaracoes .)
    FUNCTION        shift and go to state 7
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    declaracoes                    shift and go to state 5
    comando_com_main               shift and go to state 90
    funcao_main                    shift and go to state 3
    declaracoes_main               shift and go to state 4
    comando                        shift and go to state 6
    declaracao_de_funcao           shift and go to state 10
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 6

    (4) comando_com_main -> comando .

    $end            reduce using rule 4 (comando_com_main -> comando .)


state 7

    (6) funcao_main -> FUNCTION . MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE
    (98) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    MAIN            shift and go to state 91
    ID              shift and go to state 92


state 8

    (74) parenteses -> LPAREN . exp RPAREN
    (7) exp -> . PONTO_VIRGULA
    (8) exp -> . exp_2
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    PONTO_VIRGULA   shift and go to state 94
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp                            shift and go to state 93
    exp_2                          shift and go to state 95
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 9

    (114) bloco -> ABRE_CHAVE . declaracoes FECHA_CHAVE
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    declaracoes                    shift and go to state 99
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 10

    (115) declaracoes -> declaracao_de_funcao .

    FUNCTION        reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    MY              reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    OUR             reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    LIST            reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    ESCALAR         reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    ID              reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    IF              reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    FOR             reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    INTEGER         reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    WHILE           reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    LOOP            reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    NOT             reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    NEGAC           reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    ADC_DP          reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    DECREMENTO      reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    LPAREN          reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    FLOAT           reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    STRING          reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    BOOLEAN         reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    $end            reduce using rule 115 (declaracoes -> declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 115 (declaracoes -> declaracao_de_funcao .)


state 11

    (127) declaracao_de_funcao -> funcao_com_params .

    FUNCTION        reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    MY              reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    OUR             reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LIST            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ESCALAR         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ID              reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    IF              reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FOR             reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    INTEGER         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    WHILE           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LOOP            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ABRE_CHAVE      reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    NOT             reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    NEGAC           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    ADC_DP          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    DECREMENTO      reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    LPAREN          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FLOAT           reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    STRING          reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    BOOLEAN         reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    $end            reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)
    FECHA_CHAVE     reduce using rule 127 (declaracao_de_funcao -> funcao_com_params .)


state 12

    (128) declaracao_de_funcao -> funcao_sem_params .

    FUNCTION        reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    MY              reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    OUR             reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LIST            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ESCALAR         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ID              reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    IF              reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FOR             reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    INTEGER         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    WHILE           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LOOP            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ABRE_CHAVE      reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    NOT             reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    NEGAC           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    ADC_DP          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    DECREMENTO      reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    LPAREN          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FLOAT           reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    STRING          reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    BOOLEAN         reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    $end            reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)
    FECHA_CHAVE     reduce using rule 128 (declaracao_de_funcao -> funcao_sem_params .)


state 13

    (117) declaracoes_main -> declaracao_de_atribuicao .

    FUNCTION        reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    MY              reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    OUR             reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    LIST            reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    ESCALAR         reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    ID              reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    IF              reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    FOR             reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    INTEGER         reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    WHILE           reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    LOOP            reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    ABRE_CHAVE      reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    NOT             reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    NEGAC           reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    ADC_DP          reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    DECREMENTO      reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    LPAREN          reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    FLOAT           reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    STRING          reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    BOOLEAN         reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    $end            reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)
    FECHA_CHAVE     reduce using rule 117 (declaracoes_main -> declaracao_de_atribuicao .)


state 14

    (118) declaracoes_main -> declaracao_de_chamada_funcao .

    FUNCTION        reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    MY              reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    OUR             reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LIST            reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ESCALAR         reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ID              reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    IF              reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FOR             reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    INTEGER         reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    WHILE           reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LOOP            reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ABRE_CHAVE      reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    NOT             reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    NEGAC           reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    ADC_DP          reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    DECREMENTO      reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    LPAREN          reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FLOAT           reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    STRING          reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    BOOLEAN         reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    $end            reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)
    FECHA_CHAVE     reduce using rule 118 (declaracoes_main -> declaracao_de_chamada_funcao .)


state 15

    (119) declaracoes_main -> declaracao_de_condicional .

    FUNCTION        reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    MY              reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    OUR             reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    LIST            reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    ESCALAR         reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    ID              reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    IF              reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    FOR             reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    INTEGER         reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    WHILE           reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    LOOP            reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    ABRE_CHAVE      reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    NOT             reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    NEGAC           reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    ADC_DP          reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    DECREMENTO      reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    LPAREN          reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    FLOAT           reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    STRING          reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    BOOLEAN         reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    $end            reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)
    FECHA_CHAVE     reduce using rule 119 (declaracoes_main -> declaracao_de_condicional .)


state 16

    (120) declaracoes_main -> declaracao_loop .

    FUNCTION        reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    MY              reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    OUR             reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    LIST            reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    ESCALAR         reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    ID              reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    IF              reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    FOR             reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    INTEGER         reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    WHILE           reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    LOOP            reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    ABRE_CHAVE      reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    NOT             reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    NEGAC           reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    ADC_DP          reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    DECREMENTO      reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    LPAREN          reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    FLOAT           reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    STRING          reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    BOOLEAN         reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    $end            reduce using rule 120 (declaracoes_main -> declaracao_loop .)
    FECHA_CHAVE     reduce using rule 120 (declaracoes_main -> declaracao_loop .)


state 17

    (121) declaracoes_main -> declaracao_de_expressao .

    FUNCTION        reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    MY              reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    OUR             reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    LIST            reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    ESCALAR         reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    ID              reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    IF              reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    FOR             reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    INTEGER         reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    WHILE           reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    LOOP            reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    ABRE_CHAVE      reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    NOT             reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    NEGAC           reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    ADC_DP          reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    DECREMENTO      reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    LPAREN          reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    FLOAT           reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    STRING          reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    BOOLEAN         reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    $end            reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)
    FECHA_CHAVE     reduce using rule 121 (declaracoes_main -> declaracao_de_expressao .)


state 18

    (122) declaracoes_main -> declaracao_bloco .

    FUNCTION        reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    MY              reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    OUR             reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    LIST            reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    ESCALAR         reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    ID              reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    IF              reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    FOR             reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    INTEGER         reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    WHILE           reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    LOOP            reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    ABRE_CHAVE      reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    NOT             reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    NEGAC           reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    ADC_DP          reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    DECREMENTO      reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    LPAREN          reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    FLOAT           reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    STRING          reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    BOOLEAN         reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    $end            reduce using rule 122 (declaracoes_main -> declaracao_bloco .)
    FECHA_CHAVE     reduce using rule 122 (declaracoes_main -> declaracao_bloco .)


state 19

    (123) declaracoes_main -> declaracao_escalar_MY .

    FUNCTION        reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    MY              reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    OUR             reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    LIST            reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    ESCALAR         reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    ID              reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    IF              reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    FOR             reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    INTEGER         reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    WHILE           reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    LOOP            reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    NOT             reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    NEGAC           reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    ADC_DP          reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    DECREMENTO      reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    LPAREN          reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    FLOAT           reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    STRING          reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    BOOLEAN         reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    $end            reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)
    FECHA_CHAVE     reduce using rule 123 (declaracoes_main -> declaracao_escalar_MY .)


state 20

    (124) declaracoes_main -> declaracao_escalar_OUR .

    FUNCTION        reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    MY              reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    OUR             reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    LIST            reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    ESCALAR         reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    ID              reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    IF              reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    FOR             reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    INTEGER         reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    WHILE           reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    LOOP            reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    NOT             reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    NEGAC           reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    ADC_DP          reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    DECREMENTO      reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    LPAREN          reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    FLOAT           reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    STRING          reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    BOOLEAN         reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    $end            reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)
    FECHA_CHAVE     reduce using rule 124 (declaracoes_main -> declaracao_escalar_OUR .)


state 21

    (125) declaracoes_main -> declaracao_lista .

    FUNCTION        reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    MY              reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    OUR             reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LIST            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ESCALAR         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ID              reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    IF              reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FOR             reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    INTEGER         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    WHILE           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LOOP            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ABRE_CHAVE      reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    NOT             reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    NEGAC           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    ADC_DP          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    DECREMENTO      reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    LPAREN          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FLOAT           reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    STRING          reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    BOOLEAN         reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    $end            reduce using rule 125 (declaracoes_main -> declaracao_lista .)
    FECHA_CHAVE     reduce using rule 125 (declaracoes_main -> declaracao_lista .)


state 22

    (105) chamada_funcao -> ID . LPAREN chamada_funcao_auxiliar
    (69) posfixo_incremento -> ID . ADC_DP
    (71) posfixo_decremento -> ID . DECREMENTO

    LPAREN          shift and go to state 101
    ADC_DP          shift and go to state 102
    DECREMENTO      shift and go to state 103


state 23

    (126) declaracao_de_atribuicao -> atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 104


state 24

    (129) declaracao_de_chamada_funcao -> chamada_funcao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 105


state 25

    (130) declaracao_de_condicional -> condicional .

    FUNCTION        reduce using rule 130 (declaracao_de_condicional -> condicional .)
    MY              reduce using rule 130 (declaracao_de_condicional -> condicional .)
    OUR             reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LIST            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ESCALAR         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ID              reduce using rule 130 (declaracao_de_condicional -> condicional .)
    IF              reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FOR             reduce using rule 130 (declaracao_de_condicional -> condicional .)
    INTEGER         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    WHILE           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LOOP            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ABRE_CHAVE      reduce using rule 130 (declaracao_de_condicional -> condicional .)
    NOT             reduce using rule 130 (declaracao_de_condicional -> condicional .)
    NEGAC           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    ADC_DP          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    DECREMENTO      reduce using rule 130 (declaracao_de_condicional -> condicional .)
    LPAREN          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FLOAT           reduce using rule 130 (declaracao_de_condicional -> condicional .)
    STRING          reduce using rule 130 (declaracao_de_condicional -> condicional .)
    BOOLEAN         reduce using rule 130 (declaracao_de_condicional -> condicional .)
    $end            reduce using rule 130 (declaracao_de_condicional -> condicional .)
    FECHA_CHAVE     reduce using rule 130 (declaracao_de_condicional -> condicional .)


state 26

    (131) declaracao_loop -> loop .

    FUNCTION        reduce using rule 131 (declaracao_loop -> loop .)
    MY              reduce using rule 131 (declaracao_loop -> loop .)
    OUR             reduce using rule 131 (declaracao_loop -> loop .)
    LIST            reduce using rule 131 (declaracao_loop -> loop .)
    ESCALAR         reduce using rule 131 (declaracao_loop -> loop .)
    ID              reduce using rule 131 (declaracao_loop -> loop .)
    IF              reduce using rule 131 (declaracao_loop -> loop .)
    FOR             reduce using rule 131 (declaracao_loop -> loop .)
    INTEGER         reduce using rule 131 (declaracao_loop -> loop .)
    WHILE           reduce using rule 131 (declaracao_loop -> loop .)
    LOOP            reduce using rule 131 (declaracao_loop -> loop .)
    ABRE_CHAVE      reduce using rule 131 (declaracao_loop -> loop .)
    NOT             reduce using rule 131 (declaracao_loop -> loop .)
    NEGAC           reduce using rule 131 (declaracao_loop -> loop .)
    ADC_DP          reduce using rule 131 (declaracao_loop -> loop .)
    DECREMENTO      reduce using rule 131 (declaracao_loop -> loop .)
    LPAREN          reduce using rule 131 (declaracao_loop -> loop .)
    FLOAT           reduce using rule 131 (declaracao_loop -> loop .)
    STRING          reduce using rule 131 (declaracao_loop -> loop .)
    BOOLEAN         reduce using rule 131 (declaracao_loop -> loop .)
    $end            reduce using rule 131 (declaracao_loop -> loop .)
    FECHA_CHAVE     reduce using rule 131 (declaracao_loop -> loop .)


state 27

    (132) declaracao_de_expressao -> exp_2 . PONTO_VIRGULA
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 106
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 28

    (133) declaracao_bloco -> bloco .

    FUNCTION        reduce using rule 133 (declaracao_bloco -> bloco .)
    MY              reduce using rule 133 (declaracao_bloco -> bloco .)
    OUR             reduce using rule 133 (declaracao_bloco -> bloco .)
    LIST            reduce using rule 133 (declaracao_bloco -> bloco .)
    ESCALAR         reduce using rule 133 (declaracao_bloco -> bloco .)
    ID              reduce using rule 133 (declaracao_bloco -> bloco .)
    IF              reduce using rule 133 (declaracao_bloco -> bloco .)
    FOR             reduce using rule 133 (declaracao_bloco -> bloco .)
    INTEGER         reduce using rule 133 (declaracao_bloco -> bloco .)
    WHILE           reduce using rule 133 (declaracao_bloco -> bloco .)
    LOOP            reduce using rule 133 (declaracao_bloco -> bloco .)
    ABRE_CHAVE      reduce using rule 133 (declaracao_bloco -> bloco .)
    NOT             reduce using rule 133 (declaracao_bloco -> bloco .)
    NEGAC           reduce using rule 133 (declaracao_bloco -> bloco .)
    ADC_DP          reduce using rule 133 (declaracao_bloco -> bloco .)
    DECREMENTO      reduce using rule 133 (declaracao_bloco -> bloco .)
    LPAREN          reduce using rule 133 (declaracao_bloco -> bloco .)
    FLOAT           reduce using rule 133 (declaracao_bloco -> bloco .)
    STRING          reduce using rule 133 (declaracao_bloco -> bloco .)
    BOOLEAN         reduce using rule 133 (declaracao_bloco -> bloco .)
    $end            reduce using rule 133 (declaracao_bloco -> bloco .)
    FECHA_CHAVE     reduce using rule 133 (declaracao_bloco -> bloco .)


state 29

    (86) declaracao_escalar_MY -> MY . ESCALAR IGUAL tipo PONTO_VIRGULA

    ESCALAR         shift and go to state 109


state 30

    (104) atribuicao -> ESCALAR . IGUAL exp_2
    (85) escalar -> ESCALAR .

    IGUAL           shift and go to state 110
    POW             reduce using rule 85 (escalar -> ESCALAR .)
    MULT            reduce using rule 85 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 85 (escalar -> ESCALAR .)
    DIV             reduce using rule 85 (escalar -> ESCALAR .)
    DIVI            reduce using rule 85 (escalar -> ESCALAR .)
    MOD             reduce using rule 85 (escalar -> ESCALAR .)
    LCM             reduce using rule 85 (escalar -> ESCALAR .)
    GCD             reduce using rule 85 (escalar -> ESCALAR .)
    ADC             reduce using rule 85 (escalar -> ESCALAR .)
    SUB             reduce using rule 85 (escalar -> ESCALAR .)
    CONC            reduce using rule 85 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 85 (escalar -> ESCALAR .)
    DIF             reduce using rule 85 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 85 (escalar -> ESCALAR .)
    MENOR           reduce using rule 85 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 85 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 85 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 85 (escalar -> ESCALAR .)
    AND_S           reduce using rule 85 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 85 (escalar -> ESCALAR .)
    OR_S            reduce using rule 85 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 85 (escalar -> ESCALAR .)


state 31

    (75) completo -> tipo .

    POW             reduce using rule 75 (completo -> tipo .)
    MULT            reduce using rule 75 (completo -> tipo .)
    DIVIDE          reduce using rule 75 (completo -> tipo .)
    DIV             reduce using rule 75 (completo -> tipo .)
    DIVI            reduce using rule 75 (completo -> tipo .)
    MOD             reduce using rule 75 (completo -> tipo .)
    LCM             reduce using rule 75 (completo -> tipo .)
    GCD             reduce using rule 75 (completo -> tipo .)
    ADC             reduce using rule 75 (completo -> tipo .)
    SUB             reduce using rule 75 (completo -> tipo .)
    CONC            reduce using rule 75 (completo -> tipo .)
    IGUAL_DP        reduce using rule 75 (completo -> tipo .)
    DIF             reduce using rule 75 (completo -> tipo .)
    MAIOR           reduce using rule 75 (completo -> tipo .)
    MENOR           reduce using rule 75 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 75 (completo -> tipo .)
    LESSEQUAL       reduce using rule 75 (completo -> tipo .)
    SMARTMATCH      reduce using rule 75 (completo -> tipo .)
    AND_S           reduce using rule 75 (completo -> tipo .)
    PONTO_VIRGULA   reduce using rule 75 (completo -> tipo .)
    OR_S            reduce using rule 75 (completo -> tipo .)
    XOR_S           reduce using rule 75 (completo -> tipo .)
    RPAREN          reduce using rule 75 (completo -> tipo .)
    ABRE_CHAVE      reduce using rule 75 (completo -> tipo .)
    SETA            reduce using rule 75 (completo -> tipo .)


state 32

    (87) declaracao_escalar_OUR -> OUR . ESCALAR IGUAL tipo PONTO_VIRGULA

    ESCALAR         shift and go to state 111


state 33

    (88) declaracao_lista -> LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 112


state 34

    (108) condicional -> IF . exp_2 bloco
    (109) condicional -> IF . exp_2 bloco ELSE bloco
    (110) condicional -> IF . exp_2 bloco lista_elsif
    (111) condicional -> IF . exp_2 bloco lista_elsif ELSE bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 113
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 35

    (93) loop -> FOR . exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 114
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 36

    (94) loop -> INTEGER . PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (81) inteiro -> INTEGER .

    PONTO           shift and go to state 115
    POW             reduce using rule 81 (inteiro -> INTEGER .)
    MULT            reduce using rule 81 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 81 (inteiro -> INTEGER .)
    DIV             reduce using rule 81 (inteiro -> INTEGER .)
    DIVI            reduce using rule 81 (inteiro -> INTEGER .)
    MOD             reduce using rule 81 (inteiro -> INTEGER .)
    LCM             reduce using rule 81 (inteiro -> INTEGER .)
    GCD             reduce using rule 81 (inteiro -> INTEGER .)
    ADC             reduce using rule 81 (inteiro -> INTEGER .)
    SUB             reduce using rule 81 (inteiro -> INTEGER .)
    CONC            reduce using rule 81 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 81 (inteiro -> INTEGER .)
    DIF             reduce using rule 81 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 81 (inteiro -> INTEGER .)
    MENOR           reduce using rule 81 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 81 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 81 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 81 (inteiro -> INTEGER .)
    AND_S           reduce using rule 81 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 81 (inteiro -> INTEGER .)
    OR_S            reduce using rule 81 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 81 (inteiro -> INTEGER .)


state 37

    (95) loop -> WHILE . exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 116
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 38

    (96) loop -> LOOP . LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> LOOP . ABRE_CHAVE comando FECHA_CHAVE

    LPAREN          shift and go to state 117
    ABRE_CHAVE      shift and go to state 118


state 39

    (9) exp_2 -> or .

    PONTO_VIRGULA   reduce using rule 9 (exp_2 -> or .)
    OR_S            reduce using rule 9 (exp_2 -> or .)
    XOR_S           reduce using rule 9 (exp_2 -> or .)
    RPAREN          reduce using rule 9 (exp_2 -> or .)
    ABRE_CHAVE      reduce using rule 9 (exp_2 -> or .)
    SETA            reduce using rule 9 (exp_2 -> or .)


state 40

    (10) exp_2 -> xor .

    PONTO_VIRGULA   reduce using rule 10 (exp_2 -> xor .)
    OR_S            reduce using rule 10 (exp_2 -> xor .)
    XOR_S           reduce using rule 10 (exp_2 -> xor .)
    RPAREN          reduce using rule 10 (exp_2 -> xor .)
    ABRE_CHAVE      reduce using rule 10 (exp_2 -> xor .)
    SETA            reduce using rule 10 (exp_2 -> xor .)


state 41

    (11) exp_2 -> exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 11 (exp_2 -> exp_3 .)
    OR_S            reduce using rule 11 (exp_2 -> exp_3 .)
    XOR_S           reduce using rule 11 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 11 (exp_2 -> exp_3 .)
    ABRE_CHAVE      reduce using rule 11 (exp_2 -> exp_3 .)
    SETA            reduce using rule 11 (exp_2 -> exp_3 .)
    AND_S           shift and go to state 119


state 42

    (14) exp_3 -> and .

    AND_S           reduce using rule 14 (exp_3 -> and .)
    PONTO_VIRGULA   reduce using rule 14 (exp_3 -> and .)
    OR_S            reduce using rule 14 (exp_3 -> and .)
    XOR_S           reduce using rule 14 (exp_3 -> and .)
    RPAREN          reduce using rule 14 (exp_3 -> and .)
    ABRE_CHAVE      reduce using rule 14 (exp_3 -> and .)
    SETA            reduce using rule 14 (exp_3 -> and .)


state 43

    (15) exp_3 -> exp_4 .
    (25) igual_dp -> exp_4 . IGUAL_DP exp_5
    (26) dif -> exp_4 . DIF exp_5
    (27) maior -> exp_4 . MAIOR exp_5
    (28) menor -> exp_4 . MENOR exp_5
    (29) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (30) menor_igual -> exp_4 . LESSEQUAL exp_5
    (31) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 15 (exp_3 -> exp_4 .)
    PONTO_VIRGULA   reduce using rule 15 (exp_3 -> exp_4 .)
    OR_S            reduce using rule 15 (exp_3 -> exp_4 .)
    XOR_S           reduce using rule 15 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 15 (exp_3 -> exp_4 .)
    ABRE_CHAVE      reduce using rule 15 (exp_3 -> exp_4 .)
    SETA            reduce using rule 15 (exp_3 -> exp_4 .)
    IGUAL_DP        shift and go to state 120
    DIF             shift and go to state 121
    MAIOR           shift and go to state 122
    MENOR           shift and go to state 123
    MAIOR_IGL       shift and go to state 124
    LESSEQUAL       shift and go to state 125
    SMARTMATCH      shift and go to state 126


state 44

    (17) exp_4 -> igual_dp .

    IGUAL_DP        reduce using rule 17 (exp_4 -> igual_dp .)
    DIF             reduce using rule 17 (exp_4 -> igual_dp .)
    MAIOR           reduce using rule 17 (exp_4 -> igual_dp .)
    MENOR           reduce using rule 17 (exp_4 -> igual_dp .)
    MAIOR_IGL       reduce using rule 17 (exp_4 -> igual_dp .)
    LESSEQUAL       reduce using rule 17 (exp_4 -> igual_dp .)
    SMARTMATCH      reduce using rule 17 (exp_4 -> igual_dp .)
    AND_S           reduce using rule 17 (exp_4 -> igual_dp .)
    PONTO_VIRGULA   reduce using rule 17 (exp_4 -> igual_dp .)
    OR_S            reduce using rule 17 (exp_4 -> igual_dp .)
    XOR_S           reduce using rule 17 (exp_4 -> igual_dp .)
    RPAREN          reduce using rule 17 (exp_4 -> igual_dp .)
    ABRE_CHAVE      reduce using rule 17 (exp_4 -> igual_dp .)
    SETA            reduce using rule 17 (exp_4 -> igual_dp .)


state 45

    (18) exp_4 -> dif .

    IGUAL_DP        reduce using rule 18 (exp_4 -> dif .)
    DIF             reduce using rule 18 (exp_4 -> dif .)
    MAIOR           reduce using rule 18 (exp_4 -> dif .)
    MENOR           reduce using rule 18 (exp_4 -> dif .)
    MAIOR_IGL       reduce using rule 18 (exp_4 -> dif .)
    LESSEQUAL       reduce using rule 18 (exp_4 -> dif .)
    SMARTMATCH      reduce using rule 18 (exp_4 -> dif .)
    AND_S           reduce using rule 18 (exp_4 -> dif .)
    PONTO_VIRGULA   reduce using rule 18 (exp_4 -> dif .)
    OR_S            reduce using rule 18 (exp_4 -> dif .)
    XOR_S           reduce using rule 18 (exp_4 -> dif .)
    RPAREN          reduce using rule 18 (exp_4 -> dif .)
    ABRE_CHAVE      reduce using rule 18 (exp_4 -> dif .)
    SETA            reduce using rule 18 (exp_4 -> dif .)


state 46

    (19) exp_4 -> maior .

    IGUAL_DP        reduce using rule 19 (exp_4 -> maior .)
    DIF             reduce using rule 19 (exp_4 -> maior .)
    MAIOR           reduce using rule 19 (exp_4 -> maior .)
    MENOR           reduce using rule 19 (exp_4 -> maior .)
    MAIOR_IGL       reduce using rule 19 (exp_4 -> maior .)
    LESSEQUAL       reduce using rule 19 (exp_4 -> maior .)
    SMARTMATCH      reduce using rule 19 (exp_4 -> maior .)
    AND_S           reduce using rule 19 (exp_4 -> maior .)
    PONTO_VIRGULA   reduce using rule 19 (exp_4 -> maior .)
    OR_S            reduce using rule 19 (exp_4 -> maior .)
    XOR_S           reduce using rule 19 (exp_4 -> maior .)
    RPAREN          reduce using rule 19 (exp_4 -> maior .)
    ABRE_CHAVE      reduce using rule 19 (exp_4 -> maior .)
    SETA            reduce using rule 19 (exp_4 -> maior .)


state 47

    (20) exp_4 -> menor .

    IGUAL_DP        reduce using rule 20 (exp_4 -> menor .)
    DIF             reduce using rule 20 (exp_4 -> menor .)
    MAIOR           reduce using rule 20 (exp_4 -> menor .)
    MENOR           reduce using rule 20 (exp_4 -> menor .)
    MAIOR_IGL       reduce using rule 20 (exp_4 -> menor .)
    LESSEQUAL       reduce using rule 20 (exp_4 -> menor .)
    SMARTMATCH      reduce using rule 20 (exp_4 -> menor .)
    AND_S           reduce using rule 20 (exp_4 -> menor .)
    PONTO_VIRGULA   reduce using rule 20 (exp_4 -> menor .)
    OR_S            reduce using rule 20 (exp_4 -> menor .)
    XOR_S           reduce using rule 20 (exp_4 -> menor .)
    RPAREN          reduce using rule 20 (exp_4 -> menor .)
    ABRE_CHAVE      reduce using rule 20 (exp_4 -> menor .)
    SETA            reduce using rule 20 (exp_4 -> menor .)


state 48

    (21) exp_4 -> maior_igual .

    IGUAL_DP        reduce using rule 21 (exp_4 -> maior_igual .)
    DIF             reduce using rule 21 (exp_4 -> maior_igual .)
    MAIOR           reduce using rule 21 (exp_4 -> maior_igual .)
    MENOR           reduce using rule 21 (exp_4 -> maior_igual .)
    MAIOR_IGL       reduce using rule 21 (exp_4 -> maior_igual .)
    LESSEQUAL       reduce using rule 21 (exp_4 -> maior_igual .)
    SMARTMATCH      reduce using rule 21 (exp_4 -> maior_igual .)
    AND_S           reduce using rule 21 (exp_4 -> maior_igual .)
    PONTO_VIRGULA   reduce using rule 21 (exp_4 -> maior_igual .)
    OR_S            reduce using rule 21 (exp_4 -> maior_igual .)
    XOR_S           reduce using rule 21 (exp_4 -> maior_igual .)
    RPAREN          reduce using rule 21 (exp_4 -> maior_igual .)
    ABRE_CHAVE      reduce using rule 21 (exp_4 -> maior_igual .)
    SETA            reduce using rule 21 (exp_4 -> maior_igual .)


state 49

    (22) exp_4 -> menor_igual .

    IGUAL_DP        reduce using rule 22 (exp_4 -> menor_igual .)
    DIF             reduce using rule 22 (exp_4 -> menor_igual .)
    MAIOR           reduce using rule 22 (exp_4 -> menor_igual .)
    MENOR           reduce using rule 22 (exp_4 -> menor_igual .)
    MAIOR_IGL       reduce using rule 22 (exp_4 -> menor_igual .)
    LESSEQUAL       reduce using rule 22 (exp_4 -> menor_igual .)
    SMARTMATCH      reduce using rule 22 (exp_4 -> menor_igual .)
    AND_S           reduce using rule 22 (exp_4 -> menor_igual .)
    PONTO_VIRGULA   reduce using rule 22 (exp_4 -> menor_igual .)
    OR_S            reduce using rule 22 (exp_4 -> menor_igual .)
    XOR_S           reduce using rule 22 (exp_4 -> menor_igual .)
    RPAREN          reduce using rule 22 (exp_4 -> menor_igual .)
    ABRE_CHAVE      reduce using rule 22 (exp_4 -> menor_igual .)
    SETA            reduce using rule 22 (exp_4 -> menor_igual .)


state 50

    (23) exp_4 -> smartmatch .

    IGUAL_DP        reduce using rule 23 (exp_4 -> smartmatch .)
    DIF             reduce using rule 23 (exp_4 -> smartmatch .)
    MAIOR           reduce using rule 23 (exp_4 -> smartmatch .)
    MENOR           reduce using rule 23 (exp_4 -> smartmatch .)
    MAIOR_IGL       reduce using rule 23 (exp_4 -> smartmatch .)
    LESSEQUAL       reduce using rule 23 (exp_4 -> smartmatch .)
    SMARTMATCH      reduce using rule 23 (exp_4 -> smartmatch .)
    AND_S           reduce using rule 23 (exp_4 -> smartmatch .)
    PONTO_VIRGULA   reduce using rule 23 (exp_4 -> smartmatch .)
    OR_S            reduce using rule 23 (exp_4 -> smartmatch .)
    XOR_S           reduce using rule 23 (exp_4 -> smartmatch .)
    RPAREN          reduce using rule 23 (exp_4 -> smartmatch .)
    ABRE_CHAVE      reduce using rule 23 (exp_4 -> smartmatch .)
    SETA            reduce using rule 23 (exp_4 -> smartmatch .)


state 51

    (24) exp_4 -> exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 24 (exp_4 -> exp_5 .)
    DIF             reduce using rule 24 (exp_4 -> exp_5 .)
    MAIOR           reduce using rule 24 (exp_4 -> exp_5 .)
    MENOR           reduce using rule 24 (exp_4 -> exp_5 .)
    MAIOR_IGL       reduce using rule 24 (exp_4 -> exp_5 .)
    LESSEQUAL       reduce using rule 24 (exp_4 -> exp_5 .)
    SMARTMATCH      reduce using rule 24 (exp_4 -> exp_5 .)
    AND_S           reduce using rule 24 (exp_4 -> exp_5 .)
    PONTO_VIRGULA   reduce using rule 24 (exp_4 -> exp_5 .)
    OR_S            reduce using rule 24 (exp_4 -> exp_5 .)
    XOR_S           reduce using rule 24 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 24 (exp_4 -> exp_5 .)
    ABRE_CHAVE      reduce using rule 24 (exp_4 -> exp_5 .)
    SETA            reduce using rule 24 (exp_4 -> exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 52

    (32) exp_5 -> adicao .

    ADC             reduce using rule 32 (exp_5 -> adicao .)
    SUB             reduce using rule 32 (exp_5 -> adicao .)
    CONC            reduce using rule 32 (exp_5 -> adicao .)
    IGUAL_DP        reduce using rule 32 (exp_5 -> adicao .)
    DIF             reduce using rule 32 (exp_5 -> adicao .)
    MAIOR           reduce using rule 32 (exp_5 -> adicao .)
    MENOR           reduce using rule 32 (exp_5 -> adicao .)
    MAIOR_IGL       reduce using rule 32 (exp_5 -> adicao .)
    LESSEQUAL       reduce using rule 32 (exp_5 -> adicao .)
    SMARTMATCH      reduce using rule 32 (exp_5 -> adicao .)
    AND_S           reduce using rule 32 (exp_5 -> adicao .)
    PONTO_VIRGULA   reduce using rule 32 (exp_5 -> adicao .)
    OR_S            reduce using rule 32 (exp_5 -> adicao .)
    XOR_S           reduce using rule 32 (exp_5 -> adicao .)
    RPAREN          reduce using rule 32 (exp_5 -> adicao .)
    ABRE_CHAVE      reduce using rule 32 (exp_5 -> adicao .)
    SETA            reduce using rule 32 (exp_5 -> adicao .)


state 53

    (33) exp_5 -> subtracao .

    ADC             reduce using rule 33 (exp_5 -> subtracao .)
    SUB             reduce using rule 33 (exp_5 -> subtracao .)
    CONC            reduce using rule 33 (exp_5 -> subtracao .)
    IGUAL_DP        reduce using rule 33 (exp_5 -> subtracao .)
    DIF             reduce using rule 33 (exp_5 -> subtracao .)
    MAIOR           reduce using rule 33 (exp_5 -> subtracao .)
    MENOR           reduce using rule 33 (exp_5 -> subtracao .)
    MAIOR_IGL       reduce using rule 33 (exp_5 -> subtracao .)
    LESSEQUAL       reduce using rule 33 (exp_5 -> subtracao .)
    SMARTMATCH      reduce using rule 33 (exp_5 -> subtracao .)
    AND_S           reduce using rule 33 (exp_5 -> subtracao .)
    PONTO_VIRGULA   reduce using rule 33 (exp_5 -> subtracao .)
    OR_S            reduce using rule 33 (exp_5 -> subtracao .)
    XOR_S           reduce using rule 33 (exp_5 -> subtracao .)
    RPAREN          reduce using rule 33 (exp_5 -> subtracao .)
    ABRE_CHAVE      reduce using rule 33 (exp_5 -> subtracao .)
    SETA            reduce using rule 33 (exp_5 -> subtracao .)


state 54

    (34) exp_5 -> conc .

    ADC             reduce using rule 34 (exp_5 -> conc .)
    SUB             reduce using rule 34 (exp_5 -> conc .)
    CONC            reduce using rule 34 (exp_5 -> conc .)
    IGUAL_DP        reduce using rule 34 (exp_5 -> conc .)
    DIF             reduce using rule 34 (exp_5 -> conc .)
    MAIOR           reduce using rule 34 (exp_5 -> conc .)
    MENOR           reduce using rule 34 (exp_5 -> conc .)
    MAIOR_IGL       reduce using rule 34 (exp_5 -> conc .)
    LESSEQUAL       reduce using rule 34 (exp_5 -> conc .)
    SMARTMATCH      reduce using rule 34 (exp_5 -> conc .)
    AND_S           reduce using rule 34 (exp_5 -> conc .)
    PONTO_VIRGULA   reduce using rule 34 (exp_5 -> conc .)
    OR_S            reduce using rule 34 (exp_5 -> conc .)
    XOR_S           reduce using rule 34 (exp_5 -> conc .)
    RPAREN          reduce using rule 34 (exp_5 -> conc .)
    ABRE_CHAVE      reduce using rule 34 (exp_5 -> conc .)
    SETA            reduce using rule 34 (exp_5 -> conc .)


state 55

    (35) exp_5 -> exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 35 (exp_5 -> exp_6 .)
    SUB             reduce using rule 35 (exp_5 -> exp_6 .)
    CONC            reduce using rule 35 (exp_5 -> exp_6 .)
    IGUAL_DP        reduce using rule 35 (exp_5 -> exp_6 .)
    DIF             reduce using rule 35 (exp_5 -> exp_6 .)
    MAIOR           reduce using rule 35 (exp_5 -> exp_6 .)
    MENOR           reduce using rule 35 (exp_5 -> exp_6 .)
    MAIOR_IGL       reduce using rule 35 (exp_5 -> exp_6 .)
    LESSEQUAL       reduce using rule 35 (exp_5 -> exp_6 .)
    SMARTMATCH      reduce using rule 35 (exp_5 -> exp_6 .)
    AND_S           reduce using rule 35 (exp_5 -> exp_6 .)
    PONTO_VIRGULA   reduce using rule 35 (exp_5 -> exp_6 .)
    OR_S            reduce using rule 35 (exp_5 -> exp_6 .)
    XOR_S           reduce using rule 35 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 35 (exp_5 -> exp_6 .)
    ABRE_CHAVE      reduce using rule 35 (exp_5 -> exp_6 .)
    SETA            reduce using rule 35 (exp_5 -> exp_6 .)
    MULT            shift and go to state 130
    DIVIDE          shift and go to state 131
    DIV             shift and go to state 132
    DIVI            shift and go to state 133
    MOD             shift and go to state 134
    LCM             shift and go to state 135
    GCD             shift and go to state 136


state 56

    (39) exp_6 -> mult .

    MULT            reduce using rule 39 (exp_6 -> mult .)
    DIVIDE          reduce using rule 39 (exp_6 -> mult .)
    DIV             reduce using rule 39 (exp_6 -> mult .)
    DIVI            reduce using rule 39 (exp_6 -> mult .)
    MOD             reduce using rule 39 (exp_6 -> mult .)
    LCM             reduce using rule 39 (exp_6 -> mult .)
    GCD             reduce using rule 39 (exp_6 -> mult .)
    ADC             reduce using rule 39 (exp_6 -> mult .)
    SUB             reduce using rule 39 (exp_6 -> mult .)
    CONC            reduce using rule 39 (exp_6 -> mult .)
    IGUAL_DP        reduce using rule 39 (exp_6 -> mult .)
    DIF             reduce using rule 39 (exp_6 -> mult .)
    MAIOR           reduce using rule 39 (exp_6 -> mult .)
    MENOR           reduce using rule 39 (exp_6 -> mult .)
    MAIOR_IGL       reduce using rule 39 (exp_6 -> mult .)
    LESSEQUAL       reduce using rule 39 (exp_6 -> mult .)
    SMARTMATCH      reduce using rule 39 (exp_6 -> mult .)
    AND_S           reduce using rule 39 (exp_6 -> mult .)
    PONTO_VIRGULA   reduce using rule 39 (exp_6 -> mult .)
    OR_S            reduce using rule 39 (exp_6 -> mult .)
    XOR_S           reduce using rule 39 (exp_6 -> mult .)
    RPAREN          reduce using rule 39 (exp_6 -> mult .)
    ABRE_CHAVE      reduce using rule 39 (exp_6 -> mult .)
    SETA            reduce using rule 39 (exp_6 -> mult .)


state 57

    (40) exp_6 -> divide .

    MULT            reduce using rule 40 (exp_6 -> divide .)
    DIVIDE          reduce using rule 40 (exp_6 -> divide .)
    DIV             reduce using rule 40 (exp_6 -> divide .)
    DIVI            reduce using rule 40 (exp_6 -> divide .)
    MOD             reduce using rule 40 (exp_6 -> divide .)
    LCM             reduce using rule 40 (exp_6 -> divide .)
    GCD             reduce using rule 40 (exp_6 -> divide .)
    ADC             reduce using rule 40 (exp_6 -> divide .)
    SUB             reduce using rule 40 (exp_6 -> divide .)
    CONC            reduce using rule 40 (exp_6 -> divide .)
    IGUAL_DP        reduce using rule 40 (exp_6 -> divide .)
    DIF             reduce using rule 40 (exp_6 -> divide .)
    MAIOR           reduce using rule 40 (exp_6 -> divide .)
    MENOR           reduce using rule 40 (exp_6 -> divide .)
    MAIOR_IGL       reduce using rule 40 (exp_6 -> divide .)
    LESSEQUAL       reduce using rule 40 (exp_6 -> divide .)
    SMARTMATCH      reduce using rule 40 (exp_6 -> divide .)
    AND_S           reduce using rule 40 (exp_6 -> divide .)
    PONTO_VIRGULA   reduce using rule 40 (exp_6 -> divide .)
    OR_S            reduce using rule 40 (exp_6 -> divide .)
    XOR_S           reduce using rule 40 (exp_6 -> divide .)
    RPAREN          reduce using rule 40 (exp_6 -> divide .)
    ABRE_CHAVE      reduce using rule 40 (exp_6 -> divide .)
    SETA            reduce using rule 40 (exp_6 -> divide .)


state 58

    (41) exp_6 -> div .

    MULT            reduce using rule 41 (exp_6 -> div .)
    DIVIDE          reduce using rule 41 (exp_6 -> div .)
    DIV             reduce using rule 41 (exp_6 -> div .)
    DIVI            reduce using rule 41 (exp_6 -> div .)
    MOD             reduce using rule 41 (exp_6 -> div .)
    LCM             reduce using rule 41 (exp_6 -> div .)
    GCD             reduce using rule 41 (exp_6 -> div .)
    ADC             reduce using rule 41 (exp_6 -> div .)
    SUB             reduce using rule 41 (exp_6 -> div .)
    CONC            reduce using rule 41 (exp_6 -> div .)
    IGUAL_DP        reduce using rule 41 (exp_6 -> div .)
    DIF             reduce using rule 41 (exp_6 -> div .)
    MAIOR           reduce using rule 41 (exp_6 -> div .)
    MENOR           reduce using rule 41 (exp_6 -> div .)
    MAIOR_IGL       reduce using rule 41 (exp_6 -> div .)
    LESSEQUAL       reduce using rule 41 (exp_6 -> div .)
    SMARTMATCH      reduce using rule 41 (exp_6 -> div .)
    AND_S           reduce using rule 41 (exp_6 -> div .)
    PONTO_VIRGULA   reduce using rule 41 (exp_6 -> div .)
    OR_S            reduce using rule 41 (exp_6 -> div .)
    XOR_S           reduce using rule 41 (exp_6 -> div .)
    RPAREN          reduce using rule 41 (exp_6 -> div .)
    ABRE_CHAVE      reduce using rule 41 (exp_6 -> div .)
    SETA            reduce using rule 41 (exp_6 -> div .)


state 59

    (42) exp_6 -> divi .

    MULT            reduce using rule 42 (exp_6 -> divi .)
    DIVIDE          reduce using rule 42 (exp_6 -> divi .)
    DIV             reduce using rule 42 (exp_6 -> divi .)
    DIVI            reduce using rule 42 (exp_6 -> divi .)
    MOD             reduce using rule 42 (exp_6 -> divi .)
    LCM             reduce using rule 42 (exp_6 -> divi .)
    GCD             reduce using rule 42 (exp_6 -> divi .)
    ADC             reduce using rule 42 (exp_6 -> divi .)
    SUB             reduce using rule 42 (exp_6 -> divi .)
    CONC            reduce using rule 42 (exp_6 -> divi .)
    IGUAL_DP        reduce using rule 42 (exp_6 -> divi .)
    DIF             reduce using rule 42 (exp_6 -> divi .)
    MAIOR           reduce using rule 42 (exp_6 -> divi .)
    MENOR           reduce using rule 42 (exp_6 -> divi .)
    MAIOR_IGL       reduce using rule 42 (exp_6 -> divi .)
    LESSEQUAL       reduce using rule 42 (exp_6 -> divi .)
    SMARTMATCH      reduce using rule 42 (exp_6 -> divi .)
    AND_S           reduce using rule 42 (exp_6 -> divi .)
    PONTO_VIRGULA   reduce using rule 42 (exp_6 -> divi .)
    OR_S            reduce using rule 42 (exp_6 -> divi .)
    XOR_S           reduce using rule 42 (exp_6 -> divi .)
    RPAREN          reduce using rule 42 (exp_6 -> divi .)
    ABRE_CHAVE      reduce using rule 42 (exp_6 -> divi .)
    SETA            reduce using rule 42 (exp_6 -> divi .)


state 60

    (43) exp_6 -> mod .

    MULT            reduce using rule 43 (exp_6 -> mod .)
    DIVIDE          reduce using rule 43 (exp_6 -> mod .)
    DIV             reduce using rule 43 (exp_6 -> mod .)
    DIVI            reduce using rule 43 (exp_6 -> mod .)
    MOD             reduce using rule 43 (exp_6 -> mod .)
    LCM             reduce using rule 43 (exp_6 -> mod .)
    GCD             reduce using rule 43 (exp_6 -> mod .)
    ADC             reduce using rule 43 (exp_6 -> mod .)
    SUB             reduce using rule 43 (exp_6 -> mod .)
    CONC            reduce using rule 43 (exp_6 -> mod .)
    IGUAL_DP        reduce using rule 43 (exp_6 -> mod .)
    DIF             reduce using rule 43 (exp_6 -> mod .)
    MAIOR           reduce using rule 43 (exp_6 -> mod .)
    MENOR           reduce using rule 43 (exp_6 -> mod .)
    MAIOR_IGL       reduce using rule 43 (exp_6 -> mod .)
    LESSEQUAL       reduce using rule 43 (exp_6 -> mod .)
    SMARTMATCH      reduce using rule 43 (exp_6 -> mod .)
    AND_S           reduce using rule 43 (exp_6 -> mod .)
    PONTO_VIRGULA   reduce using rule 43 (exp_6 -> mod .)
    OR_S            reduce using rule 43 (exp_6 -> mod .)
    XOR_S           reduce using rule 43 (exp_6 -> mod .)
    RPAREN          reduce using rule 43 (exp_6 -> mod .)
    ABRE_CHAVE      reduce using rule 43 (exp_6 -> mod .)
    SETA            reduce using rule 43 (exp_6 -> mod .)


state 61

    (44) exp_6 -> lcm .

    MULT            reduce using rule 44 (exp_6 -> lcm .)
    DIVIDE          reduce using rule 44 (exp_6 -> lcm .)
    DIV             reduce using rule 44 (exp_6 -> lcm .)
    DIVI            reduce using rule 44 (exp_6 -> lcm .)
    MOD             reduce using rule 44 (exp_6 -> lcm .)
    LCM             reduce using rule 44 (exp_6 -> lcm .)
    GCD             reduce using rule 44 (exp_6 -> lcm .)
    ADC             reduce using rule 44 (exp_6 -> lcm .)
    SUB             reduce using rule 44 (exp_6 -> lcm .)
    CONC            reduce using rule 44 (exp_6 -> lcm .)
    IGUAL_DP        reduce using rule 44 (exp_6 -> lcm .)
    DIF             reduce using rule 44 (exp_6 -> lcm .)
    MAIOR           reduce using rule 44 (exp_6 -> lcm .)
    MENOR           reduce using rule 44 (exp_6 -> lcm .)
    MAIOR_IGL       reduce using rule 44 (exp_6 -> lcm .)
    LESSEQUAL       reduce using rule 44 (exp_6 -> lcm .)
    SMARTMATCH      reduce using rule 44 (exp_6 -> lcm .)
    AND_S           reduce using rule 44 (exp_6 -> lcm .)
    PONTO_VIRGULA   reduce using rule 44 (exp_6 -> lcm .)
    OR_S            reduce using rule 44 (exp_6 -> lcm .)
    XOR_S           reduce using rule 44 (exp_6 -> lcm .)
    RPAREN          reduce using rule 44 (exp_6 -> lcm .)
    ABRE_CHAVE      reduce using rule 44 (exp_6 -> lcm .)
    SETA            reduce using rule 44 (exp_6 -> lcm .)


state 62

    (45) exp_6 -> gcd .

    MULT            reduce using rule 45 (exp_6 -> gcd .)
    DIVIDE          reduce using rule 45 (exp_6 -> gcd .)
    DIV             reduce using rule 45 (exp_6 -> gcd .)
    DIVI            reduce using rule 45 (exp_6 -> gcd .)
    MOD             reduce using rule 45 (exp_6 -> gcd .)
    LCM             reduce using rule 45 (exp_6 -> gcd .)
    GCD             reduce using rule 45 (exp_6 -> gcd .)
    ADC             reduce using rule 45 (exp_6 -> gcd .)
    SUB             reduce using rule 45 (exp_6 -> gcd .)
    CONC            reduce using rule 45 (exp_6 -> gcd .)
    IGUAL_DP        reduce using rule 45 (exp_6 -> gcd .)
    DIF             reduce using rule 45 (exp_6 -> gcd .)
    MAIOR           reduce using rule 45 (exp_6 -> gcd .)
    MENOR           reduce using rule 45 (exp_6 -> gcd .)
    MAIOR_IGL       reduce using rule 45 (exp_6 -> gcd .)
    LESSEQUAL       reduce using rule 45 (exp_6 -> gcd .)
    SMARTMATCH      reduce using rule 45 (exp_6 -> gcd .)
    AND_S           reduce using rule 45 (exp_6 -> gcd .)
    PONTO_VIRGULA   reduce using rule 45 (exp_6 -> gcd .)
    OR_S            reduce using rule 45 (exp_6 -> gcd .)
    XOR_S           reduce using rule 45 (exp_6 -> gcd .)
    RPAREN          reduce using rule 45 (exp_6 -> gcd .)
    ABRE_CHAVE      reduce using rule 45 (exp_6 -> gcd .)
    SETA            reduce using rule 45 (exp_6 -> gcd .)


state 63

    (46) exp_6 -> exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 46 (exp_6 -> exp_7 .)
    DIVIDE          reduce using rule 46 (exp_6 -> exp_7 .)
    DIV             reduce using rule 46 (exp_6 -> exp_7 .)
    DIVI            reduce using rule 46 (exp_6 -> exp_7 .)
    MOD             reduce using rule 46 (exp_6 -> exp_7 .)
    LCM             reduce using rule 46 (exp_6 -> exp_7 .)
    GCD             reduce using rule 46 (exp_6 -> exp_7 .)
    ADC             reduce using rule 46 (exp_6 -> exp_7 .)
    SUB             reduce using rule 46 (exp_6 -> exp_7 .)
    CONC            reduce using rule 46 (exp_6 -> exp_7 .)
    IGUAL_DP        reduce using rule 46 (exp_6 -> exp_7 .)
    DIF             reduce using rule 46 (exp_6 -> exp_7 .)
    MAIOR           reduce using rule 46 (exp_6 -> exp_7 .)
    MENOR           reduce using rule 46 (exp_6 -> exp_7 .)
    MAIOR_IGL       reduce using rule 46 (exp_6 -> exp_7 .)
    LESSEQUAL       reduce using rule 46 (exp_6 -> exp_7 .)
    SMARTMATCH      reduce using rule 46 (exp_6 -> exp_7 .)
    AND_S           reduce using rule 46 (exp_6 -> exp_7 .)
    PONTO_VIRGULA   reduce using rule 46 (exp_6 -> exp_7 .)
    OR_S            reduce using rule 46 (exp_6 -> exp_7 .)
    XOR_S           reduce using rule 46 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 46 (exp_6 -> exp_7 .)
    ABRE_CHAVE      reduce using rule 46 (exp_6 -> exp_7 .)
    SETA            reduce using rule 46 (exp_6 -> exp_7 .)
    POW             shift and go to state 137


state 64

    (54) exp_7 -> pow .

    POW             reduce using rule 54 (exp_7 -> pow .)
    MULT            reduce using rule 54 (exp_7 -> pow .)
    DIVIDE          reduce using rule 54 (exp_7 -> pow .)
    DIV             reduce using rule 54 (exp_7 -> pow .)
    DIVI            reduce using rule 54 (exp_7 -> pow .)
    MOD             reduce using rule 54 (exp_7 -> pow .)
    LCM             reduce using rule 54 (exp_7 -> pow .)
    GCD             reduce using rule 54 (exp_7 -> pow .)
    ADC             reduce using rule 54 (exp_7 -> pow .)
    SUB             reduce using rule 54 (exp_7 -> pow .)
    CONC            reduce using rule 54 (exp_7 -> pow .)
    IGUAL_DP        reduce using rule 54 (exp_7 -> pow .)
    DIF             reduce using rule 54 (exp_7 -> pow .)
    MAIOR           reduce using rule 54 (exp_7 -> pow .)
    MENOR           reduce using rule 54 (exp_7 -> pow .)
    MAIOR_IGL       reduce using rule 54 (exp_7 -> pow .)
    LESSEQUAL       reduce using rule 54 (exp_7 -> pow .)
    SMARTMATCH      reduce using rule 54 (exp_7 -> pow .)
    AND_S           reduce using rule 54 (exp_7 -> pow .)
    PONTO_VIRGULA   reduce using rule 54 (exp_7 -> pow .)
    OR_S            reduce using rule 54 (exp_7 -> pow .)
    XOR_S           reduce using rule 54 (exp_7 -> pow .)
    RPAREN          reduce using rule 54 (exp_7 -> pow .)
    ABRE_CHAVE      reduce using rule 54 (exp_7 -> pow .)
    SETA            reduce using rule 54 (exp_7 -> pow .)


state 65

    (55) exp_7 -> exp_8 .

    POW             reduce using rule 55 (exp_7 -> exp_8 .)
    MULT            reduce using rule 55 (exp_7 -> exp_8 .)
    DIVIDE          reduce using rule 55 (exp_7 -> exp_8 .)
    DIV             reduce using rule 55 (exp_7 -> exp_8 .)
    DIVI            reduce using rule 55 (exp_7 -> exp_8 .)
    MOD             reduce using rule 55 (exp_7 -> exp_8 .)
    LCM             reduce using rule 55 (exp_7 -> exp_8 .)
    GCD             reduce using rule 55 (exp_7 -> exp_8 .)
    ADC             reduce using rule 55 (exp_7 -> exp_8 .)
    SUB             reduce using rule 55 (exp_7 -> exp_8 .)
    CONC            reduce using rule 55 (exp_7 -> exp_8 .)
    IGUAL_DP        reduce using rule 55 (exp_7 -> exp_8 .)
    DIF             reduce using rule 55 (exp_7 -> exp_8 .)
    MAIOR           reduce using rule 55 (exp_7 -> exp_8 .)
    MENOR           reduce using rule 55 (exp_7 -> exp_8 .)
    MAIOR_IGL       reduce using rule 55 (exp_7 -> exp_8 .)
    LESSEQUAL       reduce using rule 55 (exp_7 -> exp_8 .)
    SMARTMATCH      reduce using rule 55 (exp_7 -> exp_8 .)
    AND_S           reduce using rule 55 (exp_7 -> exp_8 .)
    PONTO_VIRGULA   reduce using rule 55 (exp_7 -> exp_8 .)
    OR_S            reduce using rule 55 (exp_7 -> exp_8 .)
    XOR_S           reduce using rule 55 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 55 (exp_7 -> exp_8 .)
    ABRE_CHAVE      reduce using rule 55 (exp_7 -> exp_8 .)
    SETA            reduce using rule 55 (exp_7 -> exp_8 .)


state 66

    (57) exp_8 -> not_op .

    POW             reduce using rule 57 (exp_8 -> not_op .)
    MULT            reduce using rule 57 (exp_8 -> not_op .)
    DIVIDE          reduce using rule 57 (exp_8 -> not_op .)
    DIV             reduce using rule 57 (exp_8 -> not_op .)
    DIVI            reduce using rule 57 (exp_8 -> not_op .)
    MOD             reduce using rule 57 (exp_8 -> not_op .)
    LCM             reduce using rule 57 (exp_8 -> not_op .)
    GCD             reduce using rule 57 (exp_8 -> not_op .)
    ADC             reduce using rule 57 (exp_8 -> not_op .)
    SUB             reduce using rule 57 (exp_8 -> not_op .)
    CONC            reduce using rule 57 (exp_8 -> not_op .)
    IGUAL_DP        reduce using rule 57 (exp_8 -> not_op .)
    DIF             reduce using rule 57 (exp_8 -> not_op .)
    MAIOR           reduce using rule 57 (exp_8 -> not_op .)
    MENOR           reduce using rule 57 (exp_8 -> not_op .)
    MAIOR_IGL       reduce using rule 57 (exp_8 -> not_op .)
    LESSEQUAL       reduce using rule 57 (exp_8 -> not_op .)
    SMARTMATCH      reduce using rule 57 (exp_8 -> not_op .)
    AND_S           reduce using rule 57 (exp_8 -> not_op .)
    PONTO_VIRGULA   reduce using rule 57 (exp_8 -> not_op .)
    OR_S            reduce using rule 57 (exp_8 -> not_op .)
    XOR_S           reduce using rule 57 (exp_8 -> not_op .)
    RPAREN          reduce using rule 57 (exp_8 -> not_op .)
    ABRE_CHAVE      reduce using rule 57 (exp_8 -> not_op .)
    SETA            reduce using rule 57 (exp_8 -> not_op .)


state 67

    (58) exp_8 -> not_s .

    POW             reduce using rule 58 (exp_8 -> not_s .)
    MULT            reduce using rule 58 (exp_8 -> not_s .)
    DIVIDE          reduce using rule 58 (exp_8 -> not_s .)
    DIV             reduce using rule 58 (exp_8 -> not_s .)
    DIVI            reduce using rule 58 (exp_8 -> not_s .)
    MOD             reduce using rule 58 (exp_8 -> not_s .)
    LCM             reduce using rule 58 (exp_8 -> not_s .)
    GCD             reduce using rule 58 (exp_8 -> not_s .)
    ADC             reduce using rule 58 (exp_8 -> not_s .)
    SUB             reduce using rule 58 (exp_8 -> not_s .)
    CONC            reduce using rule 58 (exp_8 -> not_s .)
    IGUAL_DP        reduce using rule 58 (exp_8 -> not_s .)
    DIF             reduce using rule 58 (exp_8 -> not_s .)
    MAIOR           reduce using rule 58 (exp_8 -> not_s .)
    MENOR           reduce using rule 58 (exp_8 -> not_s .)
    MAIOR_IGL       reduce using rule 58 (exp_8 -> not_s .)
    LESSEQUAL       reduce using rule 58 (exp_8 -> not_s .)
    SMARTMATCH      reduce using rule 58 (exp_8 -> not_s .)
    AND_S           reduce using rule 58 (exp_8 -> not_s .)
    PONTO_VIRGULA   reduce using rule 58 (exp_8 -> not_s .)
    OR_S            reduce using rule 58 (exp_8 -> not_s .)
    XOR_S           reduce using rule 58 (exp_8 -> not_s .)
    RPAREN          reduce using rule 58 (exp_8 -> not_s .)
    ABRE_CHAVE      reduce using rule 58 (exp_8 -> not_s .)
    SETA            reduce using rule 58 (exp_8 -> not_s .)


state 68

    (59) exp_8 -> exp_9 .

    POW             reduce using rule 59 (exp_8 -> exp_9 .)
    MULT            reduce using rule 59 (exp_8 -> exp_9 .)
    DIVIDE          reduce using rule 59 (exp_8 -> exp_9 .)
    DIV             reduce using rule 59 (exp_8 -> exp_9 .)
    DIVI            reduce using rule 59 (exp_8 -> exp_9 .)
    MOD             reduce using rule 59 (exp_8 -> exp_9 .)
    LCM             reduce using rule 59 (exp_8 -> exp_9 .)
    GCD             reduce using rule 59 (exp_8 -> exp_9 .)
    ADC             reduce using rule 59 (exp_8 -> exp_9 .)
    SUB             reduce using rule 59 (exp_8 -> exp_9 .)
    CONC            reduce using rule 59 (exp_8 -> exp_9 .)
    IGUAL_DP        reduce using rule 59 (exp_8 -> exp_9 .)
    DIF             reduce using rule 59 (exp_8 -> exp_9 .)
    MAIOR           reduce using rule 59 (exp_8 -> exp_9 .)
    MENOR           reduce using rule 59 (exp_8 -> exp_9 .)
    MAIOR_IGL       reduce using rule 59 (exp_8 -> exp_9 .)
    LESSEQUAL       reduce using rule 59 (exp_8 -> exp_9 .)
    SMARTMATCH      reduce using rule 59 (exp_8 -> exp_9 .)
    AND_S           reduce using rule 59 (exp_8 -> exp_9 .)
    PONTO_VIRGULA   reduce using rule 59 (exp_8 -> exp_9 .)
    OR_S            reduce using rule 59 (exp_8 -> exp_9 .)
    XOR_S           reduce using rule 59 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 59 (exp_8 -> exp_9 .)
    ABRE_CHAVE      reduce using rule 59 (exp_8 -> exp_9 .)
    SETA            reduce using rule 59 (exp_8 -> exp_9 .)


state 69

    (60) not_op -> NOT . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_8                          shift and go to state 138
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 70

    (61) not_s -> NEGAC . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_8                          shift and go to state 139
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 71

    (62) exp_9 -> unario .

    POW             reduce using rule 62 (exp_9 -> unario .)
    MULT            reduce using rule 62 (exp_9 -> unario .)
    DIVIDE          reduce using rule 62 (exp_9 -> unario .)
    DIV             reduce using rule 62 (exp_9 -> unario .)
    DIVI            reduce using rule 62 (exp_9 -> unario .)
    MOD             reduce using rule 62 (exp_9 -> unario .)
    LCM             reduce using rule 62 (exp_9 -> unario .)
    GCD             reduce using rule 62 (exp_9 -> unario .)
    ADC             reduce using rule 62 (exp_9 -> unario .)
    SUB             reduce using rule 62 (exp_9 -> unario .)
    CONC            reduce using rule 62 (exp_9 -> unario .)
    IGUAL_DP        reduce using rule 62 (exp_9 -> unario .)
    DIF             reduce using rule 62 (exp_9 -> unario .)
    MAIOR           reduce using rule 62 (exp_9 -> unario .)
    MENOR           reduce using rule 62 (exp_9 -> unario .)
    MAIOR_IGL       reduce using rule 62 (exp_9 -> unario .)
    LESSEQUAL       reduce using rule 62 (exp_9 -> unario .)
    SMARTMATCH      reduce using rule 62 (exp_9 -> unario .)
    AND_S           reduce using rule 62 (exp_9 -> unario .)
    PONTO_VIRGULA   reduce using rule 62 (exp_9 -> unario .)
    OR_S            reduce using rule 62 (exp_9 -> unario .)
    XOR_S           reduce using rule 62 (exp_9 -> unario .)
    RPAREN          reduce using rule 62 (exp_9 -> unario .)
    ABRE_CHAVE      reduce using rule 62 (exp_9 -> unario .)
    SETA            reduce using rule 62 (exp_9 -> unario .)


state 72

    (63) exp_9 -> operando .

    POW             reduce using rule 63 (exp_9 -> operando .)
    MULT            reduce using rule 63 (exp_9 -> operando .)
    DIVIDE          reduce using rule 63 (exp_9 -> operando .)
    DIV             reduce using rule 63 (exp_9 -> operando .)
    DIVI            reduce using rule 63 (exp_9 -> operando .)
    MOD             reduce using rule 63 (exp_9 -> operando .)
    LCM             reduce using rule 63 (exp_9 -> operando .)
    GCD             reduce using rule 63 (exp_9 -> operando .)
    ADC             reduce using rule 63 (exp_9 -> operando .)
    SUB             reduce using rule 63 (exp_9 -> operando .)
    CONC            reduce using rule 63 (exp_9 -> operando .)
    IGUAL_DP        reduce using rule 63 (exp_9 -> operando .)
    DIF             reduce using rule 63 (exp_9 -> operando .)
    MAIOR           reduce using rule 63 (exp_9 -> operando .)
    MENOR           reduce using rule 63 (exp_9 -> operando .)
    MAIOR_IGL       reduce using rule 63 (exp_9 -> operando .)
    LESSEQUAL       reduce using rule 63 (exp_9 -> operando .)
    SMARTMATCH      reduce using rule 63 (exp_9 -> operando .)
    AND_S           reduce using rule 63 (exp_9 -> operando .)
    PONTO_VIRGULA   reduce using rule 63 (exp_9 -> operando .)
    OR_S            reduce using rule 63 (exp_9 -> operando .)
    XOR_S           reduce using rule 63 (exp_9 -> operando .)
    RPAREN          reduce using rule 63 (exp_9 -> operando .)
    ABRE_CHAVE      reduce using rule 63 (exp_9 -> operando .)
    SETA            reduce using rule 63 (exp_9 -> operando .)


state 73

    (64) unario -> prefixo_incremento .

    POW             reduce using rule 64 (unario -> prefixo_incremento .)
    MULT            reduce using rule 64 (unario -> prefixo_incremento .)
    DIVIDE          reduce using rule 64 (unario -> prefixo_incremento .)
    DIV             reduce using rule 64 (unario -> prefixo_incremento .)
    DIVI            reduce using rule 64 (unario -> prefixo_incremento .)
    MOD             reduce using rule 64 (unario -> prefixo_incremento .)
    LCM             reduce using rule 64 (unario -> prefixo_incremento .)
    GCD             reduce using rule 64 (unario -> prefixo_incremento .)
    ADC             reduce using rule 64 (unario -> prefixo_incremento .)
    SUB             reduce using rule 64 (unario -> prefixo_incremento .)
    CONC            reduce using rule 64 (unario -> prefixo_incremento .)
    IGUAL_DP        reduce using rule 64 (unario -> prefixo_incremento .)
    DIF             reduce using rule 64 (unario -> prefixo_incremento .)
    MAIOR           reduce using rule 64 (unario -> prefixo_incremento .)
    MENOR           reduce using rule 64 (unario -> prefixo_incremento .)
    MAIOR_IGL       reduce using rule 64 (unario -> prefixo_incremento .)
    LESSEQUAL       reduce using rule 64 (unario -> prefixo_incremento .)
    SMARTMATCH      reduce using rule 64 (unario -> prefixo_incremento .)
    AND_S           reduce using rule 64 (unario -> prefixo_incremento .)
    PONTO_VIRGULA   reduce using rule 64 (unario -> prefixo_incremento .)
    OR_S            reduce using rule 64 (unario -> prefixo_incremento .)
    XOR_S           reduce using rule 64 (unario -> prefixo_incremento .)
    RPAREN          reduce using rule 64 (unario -> prefixo_incremento .)
    ABRE_CHAVE      reduce using rule 64 (unario -> prefixo_incremento .)
    SETA            reduce using rule 64 (unario -> prefixo_incremento .)


state 74

    (65) unario -> posfixo_incremento .

    POW             reduce using rule 65 (unario -> posfixo_incremento .)
    MULT            reduce using rule 65 (unario -> posfixo_incremento .)
    DIVIDE          reduce using rule 65 (unario -> posfixo_incremento .)
    DIV             reduce using rule 65 (unario -> posfixo_incremento .)
    DIVI            reduce using rule 65 (unario -> posfixo_incremento .)
    MOD             reduce using rule 65 (unario -> posfixo_incremento .)
    LCM             reduce using rule 65 (unario -> posfixo_incremento .)
    GCD             reduce using rule 65 (unario -> posfixo_incremento .)
    ADC             reduce using rule 65 (unario -> posfixo_incremento .)
    SUB             reduce using rule 65 (unario -> posfixo_incremento .)
    CONC            reduce using rule 65 (unario -> posfixo_incremento .)
    IGUAL_DP        reduce using rule 65 (unario -> posfixo_incremento .)
    DIF             reduce using rule 65 (unario -> posfixo_incremento .)
    MAIOR           reduce using rule 65 (unario -> posfixo_incremento .)
    MENOR           reduce using rule 65 (unario -> posfixo_incremento .)
    MAIOR_IGL       reduce using rule 65 (unario -> posfixo_incremento .)
    LESSEQUAL       reduce using rule 65 (unario -> posfixo_incremento .)
    SMARTMATCH      reduce using rule 65 (unario -> posfixo_incremento .)
    AND_S           reduce using rule 65 (unario -> posfixo_incremento .)
    PONTO_VIRGULA   reduce using rule 65 (unario -> posfixo_incremento .)
    OR_S            reduce using rule 65 (unario -> posfixo_incremento .)
    XOR_S           reduce using rule 65 (unario -> posfixo_incremento .)
    RPAREN          reduce using rule 65 (unario -> posfixo_incremento .)
    ABRE_CHAVE      reduce using rule 65 (unario -> posfixo_incremento .)
    SETA            reduce using rule 65 (unario -> posfixo_incremento .)


state 75

    (66) unario -> prefixo_decremento .

    POW             reduce using rule 66 (unario -> prefixo_decremento .)
    MULT            reduce using rule 66 (unario -> prefixo_decremento .)
    DIVIDE          reduce using rule 66 (unario -> prefixo_decremento .)
    DIV             reduce using rule 66 (unario -> prefixo_decremento .)
    DIVI            reduce using rule 66 (unario -> prefixo_decremento .)
    MOD             reduce using rule 66 (unario -> prefixo_decremento .)
    LCM             reduce using rule 66 (unario -> prefixo_decremento .)
    GCD             reduce using rule 66 (unario -> prefixo_decremento .)
    ADC             reduce using rule 66 (unario -> prefixo_decremento .)
    SUB             reduce using rule 66 (unario -> prefixo_decremento .)
    CONC            reduce using rule 66 (unario -> prefixo_decremento .)
    IGUAL_DP        reduce using rule 66 (unario -> prefixo_decremento .)
    DIF             reduce using rule 66 (unario -> prefixo_decremento .)
    MAIOR           reduce using rule 66 (unario -> prefixo_decremento .)
    MENOR           reduce using rule 66 (unario -> prefixo_decremento .)
    MAIOR_IGL       reduce using rule 66 (unario -> prefixo_decremento .)
    LESSEQUAL       reduce using rule 66 (unario -> prefixo_decremento .)
    SMARTMATCH      reduce using rule 66 (unario -> prefixo_decremento .)
    AND_S           reduce using rule 66 (unario -> prefixo_decremento .)
    PONTO_VIRGULA   reduce using rule 66 (unario -> prefixo_decremento .)
    OR_S            reduce using rule 66 (unario -> prefixo_decremento .)
    XOR_S           reduce using rule 66 (unario -> prefixo_decremento .)
    RPAREN          reduce using rule 66 (unario -> prefixo_decremento .)
    ABRE_CHAVE      reduce using rule 66 (unario -> prefixo_decremento .)
    SETA            reduce using rule 66 (unario -> prefixo_decremento .)


state 76

    (67) unario -> posfixo_decremento .

    POW             reduce using rule 67 (unario -> posfixo_decremento .)
    MULT            reduce using rule 67 (unario -> posfixo_decremento .)
    DIVIDE          reduce using rule 67 (unario -> posfixo_decremento .)
    DIV             reduce using rule 67 (unario -> posfixo_decremento .)
    DIVI            reduce using rule 67 (unario -> posfixo_decremento .)
    MOD             reduce using rule 67 (unario -> posfixo_decremento .)
    LCM             reduce using rule 67 (unario -> posfixo_decremento .)
    GCD             reduce using rule 67 (unario -> posfixo_decremento .)
    ADC             reduce using rule 67 (unario -> posfixo_decremento .)
    SUB             reduce using rule 67 (unario -> posfixo_decremento .)
    CONC            reduce using rule 67 (unario -> posfixo_decremento .)
    IGUAL_DP        reduce using rule 67 (unario -> posfixo_decremento .)
    DIF             reduce using rule 67 (unario -> posfixo_decremento .)
    MAIOR           reduce using rule 67 (unario -> posfixo_decremento .)
    MENOR           reduce using rule 67 (unario -> posfixo_decremento .)
    MAIOR_IGL       reduce using rule 67 (unario -> posfixo_decremento .)
    LESSEQUAL       reduce using rule 67 (unario -> posfixo_decremento .)
    SMARTMATCH      reduce using rule 67 (unario -> posfixo_decremento .)
    AND_S           reduce using rule 67 (unario -> posfixo_decremento .)
    PONTO_VIRGULA   reduce using rule 67 (unario -> posfixo_decremento .)
    OR_S            reduce using rule 67 (unario -> posfixo_decremento .)
    XOR_S           reduce using rule 67 (unario -> posfixo_decremento .)
    RPAREN          reduce using rule 67 (unario -> posfixo_decremento .)
    ABRE_CHAVE      reduce using rule 67 (unario -> posfixo_decremento .)
    SETA            reduce using rule 67 (unario -> posfixo_decremento .)


state 77

    (72) operando -> parenteses .

    POW             reduce using rule 72 (operando -> parenteses .)
    MULT            reduce using rule 72 (operando -> parenteses .)
    DIVIDE          reduce using rule 72 (operando -> parenteses .)
    DIV             reduce using rule 72 (operando -> parenteses .)
    DIVI            reduce using rule 72 (operando -> parenteses .)
    MOD             reduce using rule 72 (operando -> parenteses .)
    LCM             reduce using rule 72 (operando -> parenteses .)
    GCD             reduce using rule 72 (operando -> parenteses .)
    ADC             reduce using rule 72 (operando -> parenteses .)
    SUB             reduce using rule 72 (operando -> parenteses .)
    CONC            reduce using rule 72 (operando -> parenteses .)
    IGUAL_DP        reduce using rule 72 (operando -> parenteses .)
    DIF             reduce using rule 72 (operando -> parenteses .)
    MAIOR           reduce using rule 72 (operando -> parenteses .)
    MENOR           reduce using rule 72 (operando -> parenteses .)
    MAIOR_IGL       reduce using rule 72 (operando -> parenteses .)
    LESSEQUAL       reduce using rule 72 (operando -> parenteses .)
    SMARTMATCH      reduce using rule 72 (operando -> parenteses .)
    AND_S           reduce using rule 72 (operando -> parenteses .)
    PONTO_VIRGULA   reduce using rule 72 (operando -> parenteses .)
    OR_S            reduce using rule 72 (operando -> parenteses .)
    XOR_S           reduce using rule 72 (operando -> parenteses .)
    RPAREN          reduce using rule 72 (operando -> parenteses .)
    ABRE_CHAVE      reduce using rule 72 (operando -> parenteses .)
    SETA            reduce using rule 72 (operando -> parenteses .)


state 78

    (73) operando -> completo .

    POW             reduce using rule 73 (operando -> completo .)
    MULT            reduce using rule 73 (operando -> completo .)
    DIVIDE          reduce using rule 73 (operando -> completo .)
    DIV             reduce using rule 73 (operando -> completo .)
    DIVI            reduce using rule 73 (operando -> completo .)
    MOD             reduce using rule 73 (operando -> completo .)
    LCM             reduce using rule 73 (operando -> completo .)
    GCD             reduce using rule 73 (operando -> completo .)
    ADC             reduce using rule 73 (operando -> completo .)
    SUB             reduce using rule 73 (operando -> completo .)
    CONC            reduce using rule 73 (operando -> completo .)
    IGUAL_DP        reduce using rule 73 (operando -> completo .)
    DIF             reduce using rule 73 (operando -> completo .)
    MAIOR           reduce using rule 73 (operando -> completo .)
    MENOR           reduce using rule 73 (operando -> completo .)
    MAIOR_IGL       reduce using rule 73 (operando -> completo .)
    LESSEQUAL       reduce using rule 73 (operando -> completo .)
    SMARTMATCH      reduce using rule 73 (operando -> completo .)
    AND_S           reduce using rule 73 (operando -> completo .)
    PONTO_VIRGULA   reduce using rule 73 (operando -> completo .)
    OR_S            reduce using rule 73 (operando -> completo .)
    XOR_S           reduce using rule 73 (operando -> completo .)
    RPAREN          reduce using rule 73 (operando -> completo .)
    ABRE_CHAVE      reduce using rule 73 (operando -> completo .)
    SETA            reduce using rule 73 (operando -> completo .)


state 79

    (68) prefixo_incremento -> ADC_DP . ID

    ID              shift and go to state 140


state 80

    (70) prefixo_decremento -> DECREMENTO . ID

    ID              shift and go to state 141


state 81

    (76) completo -> escalar .

    POW             reduce using rule 76 (completo -> escalar .)
    MULT            reduce using rule 76 (completo -> escalar .)
    DIVIDE          reduce using rule 76 (completo -> escalar .)
    DIV             reduce using rule 76 (completo -> escalar .)
    DIVI            reduce using rule 76 (completo -> escalar .)
    MOD             reduce using rule 76 (completo -> escalar .)
    LCM             reduce using rule 76 (completo -> escalar .)
    GCD             reduce using rule 76 (completo -> escalar .)
    ADC             reduce using rule 76 (completo -> escalar .)
    SUB             reduce using rule 76 (completo -> escalar .)
    CONC            reduce using rule 76 (completo -> escalar .)
    IGUAL_DP        reduce using rule 76 (completo -> escalar .)
    DIF             reduce using rule 76 (completo -> escalar .)
    MAIOR           reduce using rule 76 (completo -> escalar .)
    MENOR           reduce using rule 76 (completo -> escalar .)
    MAIOR_IGL       reduce using rule 76 (completo -> escalar .)
    LESSEQUAL       reduce using rule 76 (completo -> escalar .)
    SMARTMATCH      reduce using rule 76 (completo -> escalar .)
    AND_S           reduce using rule 76 (completo -> escalar .)
    PONTO_VIRGULA   reduce using rule 76 (completo -> escalar .)
    OR_S            reduce using rule 76 (completo -> escalar .)
    XOR_S           reduce using rule 76 (completo -> escalar .)
    RPAREN          reduce using rule 76 (completo -> escalar .)
    ABRE_CHAVE      reduce using rule 76 (completo -> escalar .)
    SETA            reduce using rule 76 (completo -> escalar .)


state 82

    (77) tipo -> inteiro .

    POW             reduce using rule 77 (tipo -> inteiro .)
    MULT            reduce using rule 77 (tipo -> inteiro .)
    DIVIDE          reduce using rule 77 (tipo -> inteiro .)
    DIV             reduce using rule 77 (tipo -> inteiro .)
    DIVI            reduce using rule 77 (tipo -> inteiro .)
    MOD             reduce using rule 77 (tipo -> inteiro .)
    LCM             reduce using rule 77 (tipo -> inteiro .)
    GCD             reduce using rule 77 (tipo -> inteiro .)
    ADC             reduce using rule 77 (tipo -> inteiro .)
    SUB             reduce using rule 77 (tipo -> inteiro .)
    CONC            reduce using rule 77 (tipo -> inteiro .)
    IGUAL_DP        reduce using rule 77 (tipo -> inteiro .)
    DIF             reduce using rule 77 (tipo -> inteiro .)
    MAIOR           reduce using rule 77 (tipo -> inteiro .)
    MENOR           reduce using rule 77 (tipo -> inteiro .)
    MAIOR_IGL       reduce using rule 77 (tipo -> inteiro .)
    LESSEQUAL       reduce using rule 77 (tipo -> inteiro .)
    SMARTMATCH      reduce using rule 77 (tipo -> inteiro .)
    AND_S           reduce using rule 77 (tipo -> inteiro .)
    PONTO_VIRGULA   reduce using rule 77 (tipo -> inteiro .)
    OR_S            reduce using rule 77 (tipo -> inteiro .)
    XOR_S           reduce using rule 77 (tipo -> inteiro .)
    RPAREN          reduce using rule 77 (tipo -> inteiro .)
    ABRE_CHAVE      reduce using rule 77 (tipo -> inteiro .)
    SETA            reduce using rule 77 (tipo -> inteiro .)
    COMMA           reduce using rule 77 (tipo -> inteiro .)


state 83

    (78) tipo -> float .

    POW             reduce using rule 78 (tipo -> float .)
    MULT            reduce using rule 78 (tipo -> float .)
    DIVIDE          reduce using rule 78 (tipo -> float .)
    DIV             reduce using rule 78 (tipo -> float .)
    DIVI            reduce using rule 78 (tipo -> float .)
    MOD             reduce using rule 78 (tipo -> float .)
    LCM             reduce using rule 78 (tipo -> float .)
    GCD             reduce using rule 78 (tipo -> float .)
    ADC             reduce using rule 78 (tipo -> float .)
    SUB             reduce using rule 78 (tipo -> float .)
    CONC            reduce using rule 78 (tipo -> float .)
    IGUAL_DP        reduce using rule 78 (tipo -> float .)
    DIF             reduce using rule 78 (tipo -> float .)
    MAIOR           reduce using rule 78 (tipo -> float .)
    MENOR           reduce using rule 78 (tipo -> float .)
    MAIOR_IGL       reduce using rule 78 (tipo -> float .)
    LESSEQUAL       reduce using rule 78 (tipo -> float .)
    SMARTMATCH      reduce using rule 78 (tipo -> float .)
    AND_S           reduce using rule 78 (tipo -> float .)
    PONTO_VIRGULA   reduce using rule 78 (tipo -> float .)
    OR_S            reduce using rule 78 (tipo -> float .)
    XOR_S           reduce using rule 78 (tipo -> float .)
    RPAREN          reduce using rule 78 (tipo -> float .)
    ABRE_CHAVE      reduce using rule 78 (tipo -> float .)
    SETA            reduce using rule 78 (tipo -> float .)
    COMMA           reduce using rule 78 (tipo -> float .)


state 84

    (79) tipo -> string .

    POW             reduce using rule 79 (tipo -> string .)
    MULT            reduce using rule 79 (tipo -> string .)
    DIVIDE          reduce using rule 79 (tipo -> string .)
    DIV             reduce using rule 79 (tipo -> string .)
    DIVI            reduce using rule 79 (tipo -> string .)
    MOD             reduce using rule 79 (tipo -> string .)
    LCM             reduce using rule 79 (tipo -> string .)
    GCD             reduce using rule 79 (tipo -> string .)
    ADC             reduce using rule 79 (tipo -> string .)
    SUB             reduce using rule 79 (tipo -> string .)
    CONC            reduce using rule 79 (tipo -> string .)
    IGUAL_DP        reduce using rule 79 (tipo -> string .)
    DIF             reduce using rule 79 (tipo -> string .)
    MAIOR           reduce using rule 79 (tipo -> string .)
    MENOR           reduce using rule 79 (tipo -> string .)
    MAIOR_IGL       reduce using rule 79 (tipo -> string .)
    LESSEQUAL       reduce using rule 79 (tipo -> string .)
    SMARTMATCH      reduce using rule 79 (tipo -> string .)
    AND_S           reduce using rule 79 (tipo -> string .)
    PONTO_VIRGULA   reduce using rule 79 (tipo -> string .)
    OR_S            reduce using rule 79 (tipo -> string .)
    XOR_S           reduce using rule 79 (tipo -> string .)
    RPAREN          reduce using rule 79 (tipo -> string .)
    ABRE_CHAVE      reduce using rule 79 (tipo -> string .)
    SETA            reduce using rule 79 (tipo -> string .)
    COMMA           reduce using rule 79 (tipo -> string .)


state 85

    (80) tipo -> boolean .

    POW             reduce using rule 80 (tipo -> boolean .)
    MULT            reduce using rule 80 (tipo -> boolean .)
    DIVIDE          reduce using rule 80 (tipo -> boolean .)
    DIV             reduce using rule 80 (tipo -> boolean .)
    DIVI            reduce using rule 80 (tipo -> boolean .)
    MOD             reduce using rule 80 (tipo -> boolean .)
    LCM             reduce using rule 80 (tipo -> boolean .)
    GCD             reduce using rule 80 (tipo -> boolean .)
    ADC             reduce using rule 80 (tipo -> boolean .)
    SUB             reduce using rule 80 (tipo -> boolean .)
    CONC            reduce using rule 80 (tipo -> boolean .)
    IGUAL_DP        reduce using rule 80 (tipo -> boolean .)
    DIF             reduce using rule 80 (tipo -> boolean .)
    MAIOR           reduce using rule 80 (tipo -> boolean .)
    MENOR           reduce using rule 80 (tipo -> boolean .)
    MAIOR_IGL       reduce using rule 80 (tipo -> boolean .)
    LESSEQUAL       reduce using rule 80 (tipo -> boolean .)
    SMARTMATCH      reduce using rule 80 (tipo -> boolean .)
    AND_S           reduce using rule 80 (tipo -> boolean .)
    PONTO_VIRGULA   reduce using rule 80 (tipo -> boolean .)
    OR_S            reduce using rule 80 (tipo -> boolean .)
    XOR_S           reduce using rule 80 (tipo -> boolean .)
    RPAREN          reduce using rule 80 (tipo -> boolean .)
    ABRE_CHAVE      reduce using rule 80 (tipo -> boolean .)
    SETA            reduce using rule 80 (tipo -> boolean .)
    COMMA           reduce using rule 80 (tipo -> boolean .)


state 86

    (82) float -> FLOAT .

    POW             reduce using rule 82 (float -> FLOAT .)
    MULT            reduce using rule 82 (float -> FLOAT .)
    DIVIDE          reduce using rule 82 (float -> FLOAT .)
    DIV             reduce using rule 82 (float -> FLOAT .)
    DIVI            reduce using rule 82 (float -> FLOAT .)
    MOD             reduce using rule 82 (float -> FLOAT .)
    LCM             reduce using rule 82 (float -> FLOAT .)
    GCD             reduce using rule 82 (float -> FLOAT .)
    ADC             reduce using rule 82 (float -> FLOAT .)
    SUB             reduce using rule 82 (float -> FLOAT .)
    CONC            reduce using rule 82 (float -> FLOAT .)
    IGUAL_DP        reduce using rule 82 (float -> FLOAT .)
    DIF             reduce using rule 82 (float -> FLOAT .)
    MAIOR           reduce using rule 82 (float -> FLOAT .)
    MENOR           reduce using rule 82 (float -> FLOAT .)
    MAIOR_IGL       reduce using rule 82 (float -> FLOAT .)
    LESSEQUAL       reduce using rule 82 (float -> FLOAT .)
    SMARTMATCH      reduce using rule 82 (float -> FLOAT .)
    AND_S           reduce using rule 82 (float -> FLOAT .)
    PONTO_VIRGULA   reduce using rule 82 (float -> FLOAT .)
    OR_S            reduce using rule 82 (float -> FLOAT .)
    XOR_S           reduce using rule 82 (float -> FLOAT .)
    RPAREN          reduce using rule 82 (float -> FLOAT .)
    ABRE_CHAVE      reduce using rule 82 (float -> FLOAT .)
    SETA            reduce using rule 82 (float -> FLOAT .)
    COMMA           reduce using rule 82 (float -> FLOAT .)


state 87

    (83) string -> STRING .

    POW             reduce using rule 83 (string -> STRING .)
    MULT            reduce using rule 83 (string -> STRING .)
    DIVIDE          reduce using rule 83 (string -> STRING .)
    DIV             reduce using rule 83 (string -> STRING .)
    DIVI            reduce using rule 83 (string -> STRING .)
    MOD             reduce using rule 83 (string -> STRING .)
    LCM             reduce using rule 83 (string -> STRING .)
    GCD             reduce using rule 83 (string -> STRING .)
    ADC             reduce using rule 83 (string -> STRING .)
    SUB             reduce using rule 83 (string -> STRING .)
    CONC            reduce using rule 83 (string -> STRING .)
    IGUAL_DP        reduce using rule 83 (string -> STRING .)
    DIF             reduce using rule 83 (string -> STRING .)
    MAIOR           reduce using rule 83 (string -> STRING .)
    MENOR           reduce using rule 83 (string -> STRING .)
    MAIOR_IGL       reduce using rule 83 (string -> STRING .)
    LESSEQUAL       reduce using rule 83 (string -> STRING .)
    SMARTMATCH      reduce using rule 83 (string -> STRING .)
    AND_S           reduce using rule 83 (string -> STRING .)
    PONTO_VIRGULA   reduce using rule 83 (string -> STRING .)
    OR_S            reduce using rule 83 (string -> STRING .)
    XOR_S           reduce using rule 83 (string -> STRING .)
    RPAREN          reduce using rule 83 (string -> STRING .)
    ABRE_CHAVE      reduce using rule 83 (string -> STRING .)
    SETA            reduce using rule 83 (string -> STRING .)
    COMMA           reduce using rule 83 (string -> STRING .)


state 88

    (84) boolean -> BOOLEAN .

    POW             reduce using rule 84 (boolean -> BOOLEAN .)
    MULT            reduce using rule 84 (boolean -> BOOLEAN .)
    DIVIDE          reduce using rule 84 (boolean -> BOOLEAN .)
    DIV             reduce using rule 84 (boolean -> BOOLEAN .)
    DIVI            reduce using rule 84 (boolean -> BOOLEAN .)
    MOD             reduce using rule 84 (boolean -> BOOLEAN .)
    LCM             reduce using rule 84 (boolean -> BOOLEAN .)
    GCD             reduce using rule 84 (boolean -> BOOLEAN .)
    ADC             reduce using rule 84 (boolean -> BOOLEAN .)
    SUB             reduce using rule 84 (boolean -> BOOLEAN .)
    CONC            reduce using rule 84 (boolean -> BOOLEAN .)
    IGUAL_DP        reduce using rule 84 (boolean -> BOOLEAN .)
    DIF             reduce using rule 84 (boolean -> BOOLEAN .)
    MAIOR           reduce using rule 84 (boolean -> BOOLEAN .)
    MENOR           reduce using rule 84 (boolean -> BOOLEAN .)
    MAIOR_IGL       reduce using rule 84 (boolean -> BOOLEAN .)
    LESSEQUAL       reduce using rule 84 (boolean -> BOOLEAN .)
    SMARTMATCH      reduce using rule 84 (boolean -> BOOLEAN .)
    AND_S           reduce using rule 84 (boolean -> BOOLEAN .)
    PONTO_VIRGULA   reduce using rule 84 (boolean -> BOOLEAN .)
    OR_S            reduce using rule 84 (boolean -> BOOLEAN .)
    XOR_S           reduce using rule 84 (boolean -> BOOLEAN .)
    RPAREN          reduce using rule 84 (boolean -> BOOLEAN .)
    ABRE_CHAVE      reduce using rule 84 (boolean -> BOOLEAN .)
    SETA            reduce using rule 84 (boolean -> BOOLEAN .)
    COMMA           reduce using rule 84 (boolean -> BOOLEAN .)


state 89

    (2) comando_com_main -> funcao_main declaracoes_main .

    $end            reduce using rule 2 (comando_com_main -> funcao_main declaracoes_main .)


state 90

    (3) comando_com_main -> declaracoes comando_com_main .

    $end            reduce using rule 3 (comando_com_main -> declaracoes comando_com_main .)


state 91

    (6) funcao_main -> FUNCTION MAIN . LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE

    LPAREN          shift and go to state 142


state 92

    (98) funcao_com_params -> FUNCTION ID . LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION ID . LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    LPAREN          shift and go to state 143


state 93

    (74) parenteses -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 144


state 94

    (7) exp -> PONTO_VIRGULA .

    RPAREN          reduce using rule 7 (exp -> PONTO_VIRGULA .)


state 95

    (8) exp -> exp_2 .
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 8 (exp -> exp_2 .)
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 96

    (69) posfixo_incremento -> ID . ADC_DP
    (71) posfixo_decremento -> ID . DECREMENTO

    ADC_DP          shift and go to state 102
    DECREMENTO      shift and go to state 103


state 97

    (85) escalar -> ESCALAR .

    POW             reduce using rule 85 (escalar -> ESCALAR .)
    MULT            reduce using rule 85 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 85 (escalar -> ESCALAR .)
    DIV             reduce using rule 85 (escalar -> ESCALAR .)
    DIVI            reduce using rule 85 (escalar -> ESCALAR .)
    MOD             reduce using rule 85 (escalar -> ESCALAR .)
    LCM             reduce using rule 85 (escalar -> ESCALAR .)
    GCD             reduce using rule 85 (escalar -> ESCALAR .)
    ADC             reduce using rule 85 (escalar -> ESCALAR .)
    SUB             reduce using rule 85 (escalar -> ESCALAR .)
    CONC            reduce using rule 85 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 85 (escalar -> ESCALAR .)
    DIF             reduce using rule 85 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 85 (escalar -> ESCALAR .)
    MENOR           reduce using rule 85 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 85 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 85 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 85 (escalar -> ESCALAR .)
    AND_S           reduce using rule 85 (escalar -> ESCALAR .)
    OR_S            reduce using rule 85 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 85 (escalar -> ESCALAR .)
    RPAREN          reduce using rule 85 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 85 (escalar -> ESCALAR .)
    SETA            reduce using rule 85 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 85 (escalar -> ESCALAR .)


state 98

    (81) inteiro -> INTEGER .

    POW             reduce using rule 81 (inteiro -> INTEGER .)
    MULT            reduce using rule 81 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 81 (inteiro -> INTEGER .)
    DIV             reduce using rule 81 (inteiro -> INTEGER .)
    DIVI            reduce using rule 81 (inteiro -> INTEGER .)
    MOD             reduce using rule 81 (inteiro -> INTEGER .)
    LCM             reduce using rule 81 (inteiro -> INTEGER .)
    GCD             reduce using rule 81 (inteiro -> INTEGER .)
    ADC             reduce using rule 81 (inteiro -> INTEGER .)
    SUB             reduce using rule 81 (inteiro -> INTEGER .)
    CONC            reduce using rule 81 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 81 (inteiro -> INTEGER .)
    DIF             reduce using rule 81 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 81 (inteiro -> INTEGER .)
    MENOR           reduce using rule 81 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 81 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 81 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 81 (inteiro -> INTEGER .)
    AND_S           reduce using rule 81 (inteiro -> INTEGER .)
    OR_S            reduce using rule 81 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 81 (inteiro -> INTEGER .)
    RPAREN          reduce using rule 81 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 81 (inteiro -> INTEGER .)
    SETA            reduce using rule 81 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 81 (inteiro -> INTEGER .)
    COMMA           reduce using rule 81 (inteiro -> INTEGER .)


state 99

    (114) bloco -> ABRE_CHAVE declaracoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 145


state 100

    (98) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 92


state 101

    (105) chamada_funcao -> ID LPAREN . chamada_funcao_auxiliar
    (106) chamada_funcao_auxiliar -> . parametros RPAREN
    (107) chamada_funcao_auxiliar -> . RPAREN
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    RPAREN          shift and go to state 148
    ESCALAR         shift and go to state 151
    COMMA           shift and go to state 152

    chamada_funcao_auxiliar        shift and go to state 146
    parametros                     shift and go to state 147
    funcao_com_um_paramentro       shift and go to state 149
    funcao_com_varios_paramentro   shift and go to state 150

state 102

    (69) posfixo_incremento -> ID ADC_DP .

    POW             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MULT            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIVIDE          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIV             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIVI            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MOD             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LCM             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    GCD             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ADC             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SUB             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    CONC            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    IGUAL_DP        reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    DIF             reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MAIOR           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MENOR           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    MAIOR_IGL       reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    LESSEQUAL       reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SMARTMATCH      reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    AND_S           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    PONTO_VIRGULA   reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    OR_S            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    XOR_S           reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    RPAREN          reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    ABRE_CHAVE      reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)
    SETA            reduce using rule 69 (posfixo_incremento -> ID ADC_DP .)


state 103

    (71) posfixo_decremento -> ID DECREMENTO .

    POW             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MULT            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIVIDE          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIV             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIVI            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MOD             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LCM             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    GCD             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ADC             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SUB             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    CONC            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    IGUAL_DP        reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    DIF             reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MENOR           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    MAIOR_IGL       reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    LESSEQUAL       reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SMARTMATCH      reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    AND_S           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    PONTO_VIRGULA   reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    OR_S            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    XOR_S           reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    RPAREN          reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    ABRE_CHAVE      reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)
    SETA            reduce using rule 71 (posfixo_decremento -> ID DECREMENTO .)


state 104

    (126) declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .

    FUNCTION        reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    MY              reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    OUR             reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LIST            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INTEGER         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LOOP            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NOT             reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEGAC           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LPAREN          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FLOAT           reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    $end            reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 126 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)


state 105

    (129) declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .

    FUNCTION        reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    MY              reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    OUR             reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LIST            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ID              reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    IF              reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FOR             reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    INTEGER         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    WHILE           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LOOP            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NOT             reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEGAC           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LPAREN          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FLOAT           reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    STRING          reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    $end            reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 129 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)


state 106

    (132) declaracao_de_expressao -> exp_2 PONTO_VIRGULA .

    FUNCTION        reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 132 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)


state 107

    (12) or -> exp_2 OR_S . exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_3                          shift and go to state 153
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 108

    (13) xor -> exp_2 XOR_S . exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_3                          shift and go to state 154
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 109

    (86) declaracao_escalar_MY -> MY ESCALAR . IGUAL tipo PONTO_VIRGULA

    IGUAL           shift and go to state 155


state 110

    (104) atribuicao -> ESCALAR IGUAL . exp_2
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 156
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 111

    (87) declaracao_escalar_OUR -> OUR ESCALAR . IGUAL tipo PONTO_VIRGULA

    IGUAL           shift and go to state 157


state 112

    (88) declaracao_lista -> LIST IGUAL . lista_valores PONTO_VIRGULA
    (89) lista_valores -> . lista_valores_recursiva
    (90) lista_valores -> . lista_valores_base
    (91) lista_valores_recursiva -> . lista_valores COMMA tipo
    (92) lista_valores_base -> . tipo
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    lista_valores                  shift and go to state 158
    lista_valores_recursiva        shift and go to state 159
    lista_valores_base             shift and go to state 160
    tipo                           shift and go to state 161
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 113

    (108) condicional -> IF exp_2 . bloco
    (109) condicional -> IF exp_2 . bloco ELSE bloco
    (110) condicional -> IF exp_2 . bloco lista_elsif
    (111) condicional -> IF exp_2 . bloco lista_elsif ELSE bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE

    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108
    ABRE_CHAVE      shift and go to state 9

    bloco                          shift and go to state 162

state 114

    (93) loop -> FOR exp_2 . SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    SETA            shift and go to state 163
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 115

    (94) loop -> INTEGER PONTO . TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE

    TIMES           shift and go to state 164


state 116

    (95) loop -> WHILE exp_2 . ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    ABRE_CHAVE      shift and go to state 165
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 117

    (96) loop -> LOOP LPAREN . atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (104) atribuicao -> . ESCALAR IGUAL exp_2

    ESCALAR         shift and go to state 167

    atribuicao                     shift and go to state 166

state 118

    (97) loop -> LOOP ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    comando                        shift and go to state 168
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 119

    (16) and -> exp_3 AND_S . exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_4                          shift and go to state 170
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 120

    (25) igual_dp -> exp_4 IGUAL_DP . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 171
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 121

    (26) dif -> exp_4 DIF . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 172
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 122

    (27) maior -> exp_4 MAIOR . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 173
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 123

    (28) menor -> exp_4 MENOR . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 174
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 124

    (29) maior_igual -> exp_4 MAIOR_IGL . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 175
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 125

    (30) menor_igual -> exp_4 LESSEQUAL . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 176
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 126

    (31) smartmatch -> exp_4 SMARTMATCH . exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_5                          shift and go to state 177
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 127

    (36) adicao -> exp_5 ADC . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_6                          shift and go to state 178
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 128

    (37) subtracao -> exp_5 SUB . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_6                          shift and go to state 179
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 129

    (38) conc -> exp_5 CONC . exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_6                          shift and go to state 180
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 130

    (47) mult -> exp_6 MULT . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 181
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 131

    (48) divide -> exp_6 DIVIDE . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 182
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 132

    (49) div -> exp_6 DIV . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 183
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 133

    (50) divi -> exp_6 DIVI . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 184
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 134

    (51) mod -> exp_6 MOD . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 185
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 135

    (52) lcm -> exp_6 LCM . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 186
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 136

    (53) gcd -> exp_6 GCD . exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_7                          shift and go to state 187
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 137

    (56) pow -> exp_7 POW . exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_8                          shift and go to state 188
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 138

    (60) not_op -> NOT exp_8 .

    POW             reduce using rule 60 (not_op -> NOT exp_8 .)
    MULT            reduce using rule 60 (not_op -> NOT exp_8 .)
    DIVIDE          reduce using rule 60 (not_op -> NOT exp_8 .)
    DIV             reduce using rule 60 (not_op -> NOT exp_8 .)
    DIVI            reduce using rule 60 (not_op -> NOT exp_8 .)
    MOD             reduce using rule 60 (not_op -> NOT exp_8 .)
    LCM             reduce using rule 60 (not_op -> NOT exp_8 .)
    GCD             reduce using rule 60 (not_op -> NOT exp_8 .)
    ADC             reduce using rule 60 (not_op -> NOT exp_8 .)
    SUB             reduce using rule 60 (not_op -> NOT exp_8 .)
    CONC            reduce using rule 60 (not_op -> NOT exp_8 .)
    IGUAL_DP        reduce using rule 60 (not_op -> NOT exp_8 .)
    DIF             reduce using rule 60 (not_op -> NOT exp_8 .)
    MAIOR           reduce using rule 60 (not_op -> NOT exp_8 .)
    MENOR           reduce using rule 60 (not_op -> NOT exp_8 .)
    MAIOR_IGL       reduce using rule 60 (not_op -> NOT exp_8 .)
    LESSEQUAL       reduce using rule 60 (not_op -> NOT exp_8 .)
    SMARTMATCH      reduce using rule 60 (not_op -> NOT exp_8 .)
    AND_S           reduce using rule 60 (not_op -> NOT exp_8 .)
    PONTO_VIRGULA   reduce using rule 60 (not_op -> NOT exp_8 .)
    OR_S            reduce using rule 60 (not_op -> NOT exp_8 .)
    XOR_S           reduce using rule 60 (not_op -> NOT exp_8 .)
    RPAREN          reduce using rule 60 (not_op -> NOT exp_8 .)
    ABRE_CHAVE      reduce using rule 60 (not_op -> NOT exp_8 .)
    SETA            reduce using rule 60 (not_op -> NOT exp_8 .)


state 139

    (61) not_s -> NEGAC exp_8 .

    POW             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MULT            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIVIDE          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIV             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIVI            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MOD             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LCM             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    GCD             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ADC             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SUB             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    CONC            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    IGUAL_DP        reduce using rule 61 (not_s -> NEGAC exp_8 .)
    DIF             reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MAIOR           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MENOR           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    MAIOR_IGL       reduce using rule 61 (not_s -> NEGAC exp_8 .)
    LESSEQUAL       reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SMARTMATCH      reduce using rule 61 (not_s -> NEGAC exp_8 .)
    AND_S           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    PONTO_VIRGULA   reduce using rule 61 (not_s -> NEGAC exp_8 .)
    OR_S            reduce using rule 61 (not_s -> NEGAC exp_8 .)
    XOR_S           reduce using rule 61 (not_s -> NEGAC exp_8 .)
    RPAREN          reduce using rule 61 (not_s -> NEGAC exp_8 .)
    ABRE_CHAVE      reduce using rule 61 (not_s -> NEGAC exp_8 .)
    SETA            reduce using rule 61 (not_s -> NEGAC exp_8 .)


state 140

    (68) prefixo_incremento -> ADC_DP ID .

    POW             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MULT            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIVIDE          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIV             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIVI            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MOD             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LCM             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    GCD             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ADC             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SUB             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    CONC            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    IGUAL_DP        reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    DIF             reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MAIOR           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MENOR           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    MAIOR_IGL       reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    LESSEQUAL       reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SMARTMATCH      reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    AND_S           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    PONTO_VIRGULA   reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    OR_S            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    XOR_S           reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    RPAREN          reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    ABRE_CHAVE      reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)
    SETA            reduce using rule 68 (prefixo_incremento -> ADC_DP ID .)


state 141

    (70) prefixo_decremento -> DECREMENTO ID .

    POW             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MULT            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIVIDE          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIV             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIVI            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MOD             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LCM             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    GCD             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ADC             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SUB             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    CONC            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    IGUAL_DP        reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    DIF             reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MENOR           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    MAIOR_IGL       reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    LESSEQUAL       reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SMARTMATCH      reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    AND_S           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    PONTO_VIRGULA   reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    OR_S            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    XOR_S           reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    RPAREN          reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    ABRE_CHAVE      reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)
    SETA            reduce using rule 70 (prefixo_decremento -> DECREMENTO ID .)


state 142

    (6) funcao_main -> FUNCTION MAIN LPAREN . RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE

    RPAREN          shift and go to state 189


state 143

    (98) funcao_com_params -> FUNCTION ID LPAREN . parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> FUNCTION ID LPAREN . RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    RPAREN          shift and go to state 191
    ESCALAR         shift and go to state 151
    COMMA           shift and go to state 152

    parametros                     shift and go to state 190
    funcao_com_um_paramentro       shift and go to state 149
    funcao_com_varios_paramentro   shift and go to state 150

state 144

    (74) parenteses -> LPAREN exp RPAREN .

    POW             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MULT            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIV             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIVI            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MOD             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LCM             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    GCD             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ADC             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SUB             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    CONC            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    IGUAL_DP        reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    DIF             reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MAIOR           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MENOR           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    MAIOR_IGL       reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    LESSEQUAL       reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SMARTMATCH      reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    AND_S           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    PONTO_VIRGULA   reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    OR_S            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    XOR_S           reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    ABRE_CHAVE      reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)
    SETA            reduce using rule 74 (parenteses -> LPAREN exp RPAREN .)


state 145

    (114) bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .

    FUNCTION        reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    MY              reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ID              reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    IF              reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    $end            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ELSE            reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)
    ELSIF           reduce using rule 114 (bloco -> ABRE_CHAVE declaracoes FECHA_CHAVE .)


state 146

    (105) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar .

    PONTO_VIRGULA   reduce using rule 105 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar .)


state 147

    (106) chamada_funcao_auxiliar -> parametros . RPAREN

    RPAREN          shift and go to state 192


state 148

    (107) chamada_funcao_auxiliar -> RPAREN .

    PONTO_VIRGULA   reduce using rule 107 (chamada_funcao_auxiliar -> RPAREN .)


state 149

    (100) parametros -> funcao_com_um_paramentro .

    RPAREN          reduce using rule 100 (parametros -> funcao_com_um_paramentro .)


state 150

    (101) parametros -> funcao_com_varios_paramentro .

    RPAREN          reduce using rule 101 (parametros -> funcao_com_varios_paramentro .)


state 151

    (102) funcao_com_um_paramentro -> ESCALAR .

    RPAREN          reduce using rule 102 (funcao_com_um_paramentro -> ESCALAR .)


state 152

    (103) funcao_com_varios_paramentro -> COMMA . ESCALAR parametros

    ESCALAR         shift and go to state 193


state 153

    (12) or -> exp_2 OR_S exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    OR_S            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    XOR_S           reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    RPAREN          reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    SETA            reduce using rule 12 (or -> exp_2 OR_S exp_3 .)
    AND_S           shift and go to state 119


state 154

    (13) xor -> exp_2 XOR_S exp_3 .
    (16) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    OR_S            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    XOR_S           reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    RPAREN          reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    SETA            reduce using rule 13 (xor -> exp_2 XOR_S exp_3 .)
    AND_S           shift and go to state 119


state 155

    (86) declaracao_escalar_MY -> MY ESCALAR IGUAL . tipo PONTO_VIRGULA
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    tipo                           shift and go to state 194
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 156

    (104) atribuicao -> ESCALAR IGUAL exp_2 .
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 104 (atribuicao -> ESCALAR IGUAL exp_2 .)
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 157

    (87) declaracao_escalar_OUR -> OUR ESCALAR IGUAL . tipo PONTO_VIRGULA
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    tipo                           shift and go to state 195
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 158

    (88) declaracao_lista -> LIST IGUAL lista_valores . PONTO_VIRGULA
    (91) lista_valores_recursiva -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 196
    COMMA           shift and go to state 197


state 159

    (89) lista_valores -> lista_valores_recursiva .

    PONTO_VIRGULA   reduce using rule 89 (lista_valores -> lista_valores_recursiva .)
    COMMA           reduce using rule 89 (lista_valores -> lista_valores_recursiva .)


state 160

    (90) lista_valores -> lista_valores_base .

    PONTO_VIRGULA   reduce using rule 90 (lista_valores -> lista_valores_base .)
    COMMA           reduce using rule 90 (lista_valores -> lista_valores_base .)


state 161

    (92) lista_valores_base -> tipo .

    PONTO_VIRGULA   reduce using rule 92 (lista_valores_base -> tipo .)
    COMMA           reduce using rule 92 (lista_valores_base -> tipo .)


state 162

    (108) condicional -> IF exp_2 bloco .
    (109) condicional -> IF exp_2 bloco . ELSE bloco
    (110) condicional -> IF exp_2 bloco . lista_elsif
    (111) condicional -> IF exp_2 bloco . lista_elsif ELSE bloco
    (112) lista_elsif -> . ELSIF exp_2 bloco
    (113) lista_elsif -> . lista_elsif ELSIF exp_2 bloco

    FUNCTION        reduce using rule 108 (condicional -> IF exp_2 bloco .)
    MY              reduce using rule 108 (condicional -> IF exp_2 bloco .)
    OUR             reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LIST            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ESCALAR         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ID              reduce using rule 108 (condicional -> IF exp_2 bloco .)
    IF              reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FOR             reduce using rule 108 (condicional -> IF exp_2 bloco .)
    INTEGER         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    WHILE           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LOOP            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 108 (condicional -> IF exp_2 bloco .)
    NOT             reduce using rule 108 (condicional -> IF exp_2 bloco .)
    NEGAC           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ADC_DP          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    DECREMENTO      reduce using rule 108 (condicional -> IF exp_2 bloco .)
    LPAREN          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FLOAT           reduce using rule 108 (condicional -> IF exp_2 bloco .)
    STRING          reduce using rule 108 (condicional -> IF exp_2 bloco .)
    BOOLEAN         reduce using rule 108 (condicional -> IF exp_2 bloco .)
    $end            reduce using rule 108 (condicional -> IF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 108 (condicional -> IF exp_2 bloco .)
    ELSE            shift and go to state 198
    ELSIF           shift and go to state 200

    lista_elsif                    shift and go to state 199

state 163

    (93) loop -> FOR exp_2 SETA . ID ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 201


state 164

    (94) loop -> INTEGER PONTO TIMES . SETA ID ABRE_CHAVE comando FECHA_CHAVE

    SETA            shift and go to state 202


state 165

    (95) loop -> WHILE exp_2 ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 27
    comando                        shift and go to state 203
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 166

    (96) loop -> LOOP LPAREN atribuicao . PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE

    PONTO_VIRGULA   shift and go to state 204


state 167

    (104) atribuicao -> ESCALAR . IGUAL exp_2

    IGUAL           shift and go to state 110


state 168

    (97) loop -> LOOP ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 205


state 169

    (5) comando -> declaracoes .

    FECHA_CHAVE     reduce using rule 5 (comando -> declaracoes .)


state 170

    (16) and -> exp_3 AND_S exp_4 .
    (25) igual_dp -> exp_4 . IGUAL_DP exp_5
    (26) dif -> exp_4 . DIF exp_5
    (27) maior -> exp_4 . MAIOR exp_5
    (28) menor -> exp_4 . MENOR exp_5
    (29) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (30) menor_igual -> exp_4 . LESSEQUAL exp_5
    (31) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    PONTO_VIRGULA   reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    OR_S            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    XOR_S           reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    RPAREN          reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    ABRE_CHAVE      reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    SETA            reduce using rule 16 (and -> exp_3 AND_S exp_4 .)
    IGUAL_DP        shift and go to state 120
    DIF             shift and go to state 121
    MAIOR           shift and go to state 122
    MENOR           shift and go to state 123
    MAIOR_IGL       shift and go to state 124
    LESSEQUAL       shift and go to state 125
    SMARTMATCH      shift and go to state 126


state 171

    (25) igual_dp -> exp_4 IGUAL_DP exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DIF             reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MENOR           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR_IGL       reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LESSEQUAL       reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SMARTMATCH      reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    AND_S           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PONTO_VIRGULA   reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OR_S            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    XOR_S           reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RPAREN          reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ABRE_CHAVE      reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SETA            reduce using rule 25 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 172

    (26) dif -> exp_4 DIF exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    DIF             reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MAIOR           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MENOR           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    MAIOR_IGL       reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    LESSEQUAL       reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    SMARTMATCH      reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    AND_S           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    PONTO_VIRGULA   reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    OR_S            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    XOR_S           reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    RPAREN          reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ABRE_CHAVE      reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    SETA            reduce using rule 26 (dif -> exp_4 DIF exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 173

    (27) maior -> exp_4 MAIOR exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    DIF             reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MENOR           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR_IGL       reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    LESSEQUAL       reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    SMARTMATCH      reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    AND_S           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    OR_S            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    XOR_S           reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    RPAREN          reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ABRE_CHAVE      reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    SETA            reduce using rule 27 (maior -> exp_4 MAIOR exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 174

    (28) menor -> exp_4 MENOR exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    DIF             reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MAIOR           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MENOR           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    MAIOR_IGL       reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    LESSEQUAL       reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    SMARTMATCH      reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    AND_S           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    OR_S            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    XOR_S           reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    RPAREN          reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ABRE_CHAVE      reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    SETA            reduce using rule 28 (menor -> exp_4 MENOR exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 175

    (29) maior_igual -> exp_4 MAIOR_IGL exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DIF             reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MENOR           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR_IGL       reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LESSEQUAL       reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SMARTMATCH      reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    AND_S           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PONTO_VIRGULA   reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OR_S            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    XOR_S           reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RPAREN          reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ABRE_CHAVE      reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SETA            reduce using rule 29 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 176

    (30) menor_igual -> exp_4 LESSEQUAL exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DIF             reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MENOR           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR_IGL       reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LESSEQUAL       reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SMARTMATCH      reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    AND_S           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PONTO_VIRGULA   reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OR_S            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    XOR_S           reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RPAREN          reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ABRE_CHAVE      reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SETA            reduce using rule 30 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 177

    (31) smartmatch -> exp_4 SMARTMATCH exp_5 .
    (36) adicao -> exp_5 . ADC exp_6
    (37) subtracao -> exp_5 . SUB exp_6
    (38) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DIF             reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MENOR           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR_IGL       reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LESSEQUAL       reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SMARTMATCH      reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    AND_S           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PONTO_VIRGULA   reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OR_S            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    XOR_S           reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RPAREN          reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ABRE_CHAVE      reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SETA            reduce using rule 31 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC             shift and go to state 127
    SUB             shift and go to state 128
    CONC            shift and go to state 129


state 178

    (36) adicao -> exp_5 ADC exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SUB             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    CONC            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    IGUAL_DP        reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    DIF             reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MAIOR           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MENOR           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MAIOR_IGL       reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    LESSEQUAL       reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SMARTMATCH      reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    AND_S           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    PONTO_VIRGULA   reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    OR_S            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    XOR_S           reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    RPAREN          reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    ABRE_CHAVE      reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    SETA            reduce using rule 36 (adicao -> exp_5 ADC exp_6 .)
    MULT            shift and go to state 130
    DIVIDE          shift and go to state 131
    DIV             shift and go to state 132
    DIVI            shift and go to state 133
    MOD             shift and go to state 134
    LCM             shift and go to state 135
    GCD             shift and go to state 136


state 179

    (37) subtracao -> exp_5 SUB exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SUB             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    CONC            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    IGUAL_DP        reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    DIF             reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MENOR           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR_IGL       reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    LESSEQUAL       reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SMARTMATCH      reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    AND_S           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    PONTO_VIRGULA   reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    OR_S            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    XOR_S           reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    RPAREN          reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    ABRE_CHAVE      reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    SETA            reduce using rule 37 (subtracao -> exp_5 SUB exp_6 .)
    MULT            shift and go to state 130
    DIVIDE          shift and go to state 131
    DIV             shift and go to state 132
    DIVI            shift and go to state 133
    MOD             shift and go to state 134
    LCM             shift and go to state 135
    GCD             shift and go to state 136


state 180

    (38) conc -> exp_5 CONC exp_6 .
    (47) mult -> exp_6 . MULT exp_7
    (48) divide -> exp_6 . DIVIDE exp_7
    (49) div -> exp_6 . DIV exp_7
    (50) divi -> exp_6 . DIVI exp_7
    (51) mod -> exp_6 . MOD exp_7
    (52) lcm -> exp_6 . LCM exp_7
    (53) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SUB             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    CONC            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    IGUAL_DP        reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    DIF             reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MAIOR           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MENOR           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MAIOR_IGL       reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    LESSEQUAL       reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SMARTMATCH      reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    AND_S           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    PONTO_VIRGULA   reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    OR_S            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    XOR_S           reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    RPAREN          reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    ABRE_CHAVE      reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    SETA            reduce using rule 38 (conc -> exp_5 CONC exp_6 .)
    MULT            shift and go to state 130
    DIVIDE          shift and go to state 131
    DIV             shift and go to state 132
    DIVI            shift and go to state 133
    MOD             shift and go to state 134
    LCM             shift and go to state 135
    GCD             shift and go to state 136


state 181

    (47) mult -> exp_6 MULT exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIVIDE          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIV             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIVI            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MOD             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LCM             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    GCD             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ADC             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SUB             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    CONC            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    IGUAL_DP        reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    DIF             reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MAIOR           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MENOR           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    MAIOR_IGL       reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    LESSEQUAL       reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SMARTMATCH      reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    AND_S           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    PONTO_VIRGULA   reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    OR_S            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    XOR_S           reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    RPAREN          reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    ABRE_CHAVE      reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    SETA            reduce using rule 47 (mult -> exp_6 MULT exp_7 .)
    POW             shift and go to state 137


state 182

    (48) divide -> exp_6 DIVIDE exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIVIDE          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIV             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIVI            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MOD             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LCM             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    GCD             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ADC             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SUB             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    CONC            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    IGUAL_DP        reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    DIF             reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MENOR           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR_IGL       reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    LESSEQUAL       reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SMARTMATCH      reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    AND_S           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    PONTO_VIRGULA   reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    OR_S            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    XOR_S           reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    RPAREN          reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    ABRE_CHAVE      reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    SETA            reduce using rule 48 (divide -> exp_6 DIVIDE exp_7 .)
    POW             shift and go to state 137


state 183

    (49) div -> exp_6 DIV exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIVIDE          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIV             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIVI            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MOD             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LCM             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    GCD             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ADC             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SUB             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    CONC            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    IGUAL_DP        reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    DIF             reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MAIOR           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MENOR           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    MAIOR_IGL       reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    LESSEQUAL       reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SMARTMATCH      reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    AND_S           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    PONTO_VIRGULA   reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    OR_S            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    XOR_S           reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    RPAREN          reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    ABRE_CHAVE      reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    SETA            reduce using rule 49 (div -> exp_6 DIV exp_7 .)
    POW             shift and go to state 137


state 184

    (50) divi -> exp_6 DIVI exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIVIDE          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIV             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIVI            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MOD             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LCM             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    GCD             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ADC             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SUB             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    CONC            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    IGUAL_DP        reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    DIF             reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MAIOR           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MENOR           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    MAIOR_IGL       reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    LESSEQUAL       reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SMARTMATCH      reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    AND_S           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    PONTO_VIRGULA   reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    OR_S            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    XOR_S           reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    RPAREN          reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    ABRE_CHAVE      reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    SETA            reduce using rule 50 (divi -> exp_6 DIVI exp_7 .)
    POW             shift and go to state 137


state 185

    (51) mod -> exp_6 MOD exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIVIDE          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIV             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIVI            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MOD             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LCM             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    GCD             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ADC             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SUB             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    CONC            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    IGUAL_DP        reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    DIF             reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MAIOR           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MENOR           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    MAIOR_IGL       reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    LESSEQUAL       reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SMARTMATCH      reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    AND_S           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    PONTO_VIRGULA   reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    OR_S            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    XOR_S           reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    RPAREN          reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    ABRE_CHAVE      reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    SETA            reduce using rule 51 (mod -> exp_6 MOD exp_7 .)
    POW             shift and go to state 137


state 186

    (52) lcm -> exp_6 LCM exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIVIDE          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIV             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIVI            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MOD             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LCM             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    GCD             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ADC             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SUB             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    CONC            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    IGUAL_DP        reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    DIF             reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MAIOR           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MENOR           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    MAIOR_IGL       reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    LESSEQUAL       reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SMARTMATCH      reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    AND_S           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    PONTO_VIRGULA   reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    OR_S            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    XOR_S           reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    RPAREN          reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    ABRE_CHAVE      reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    SETA            reduce using rule 52 (lcm -> exp_6 LCM exp_7 .)
    POW             shift and go to state 137


state 187

    (53) gcd -> exp_6 GCD exp_7 .
    (56) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIVIDE          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIV             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIVI            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MOD             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LCM             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    GCD             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ADC             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SUB             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    CONC            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    IGUAL_DP        reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    DIF             reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MAIOR           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MENOR           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    MAIOR_IGL       reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    LESSEQUAL       reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SMARTMATCH      reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    AND_S           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    PONTO_VIRGULA   reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    OR_S            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    XOR_S           reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    RPAREN          reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    ABRE_CHAVE      reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    SETA            reduce using rule 53 (gcd -> exp_6 GCD exp_7 .)
    POW             shift and go to state 137


state 188

    (56) pow -> exp_7 POW exp_8 .

    POW             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MULT            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIVIDE          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIV             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIVI            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MOD             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LCM             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    GCD             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ADC             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SUB             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    CONC            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    IGUAL_DP        reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    DIF             reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MAIOR           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MENOR           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    MAIOR_IGL       reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    LESSEQUAL       reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SMARTMATCH      reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    AND_S           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    PONTO_VIRGULA   reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    OR_S            reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    XOR_S           reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    RPAREN          reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    ABRE_CHAVE      reduce using rule 56 (pow -> exp_7 POW exp_8 .)
    SETA            reduce using rule 56 (pow -> exp_7 POW exp_8 .)


state 189

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN . ABRE_CHAVE declaracoes_main FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 206


state 190

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros . RPAREN ABRE_CHAVE comando FECHA_CHAVE

    RPAREN          shift and go to state 207


state 191

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 208


state 192

    (106) chamada_funcao_auxiliar -> parametros RPAREN .

    PONTO_VIRGULA   reduce using rule 106 (chamada_funcao_auxiliar -> parametros RPAREN .)


state 193

    (103) funcao_com_varios_paramentro -> COMMA ESCALAR . parametros
    (100) parametros -> . funcao_com_um_paramentro
    (101) parametros -> . funcao_com_varios_paramentro
    (102) funcao_com_um_paramentro -> . ESCALAR
    (103) funcao_com_varios_paramentro -> . COMMA ESCALAR parametros

    ESCALAR         shift and go to state 151
    COMMA           shift and go to state 152

    parametros                     shift and go to state 209
    funcao_com_um_paramentro       shift and go to state 149
    funcao_com_varios_paramentro   shift and go to state 150

state 194

    (86) declaracao_escalar_MY -> MY ESCALAR IGUAL tipo . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 210


state 195

    (87) declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 211


state 196

    (88) declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .

    FUNCTION        reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 88 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)


state 197

    (91) lista_valores_recursiva -> lista_valores COMMA . tipo
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    tipo                           shift and go to state 212
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 198

    (109) condicional -> IF exp_2 bloco ELSE . bloco
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 9

    bloco                          shift and go to state 213

state 199

    (110) condicional -> IF exp_2 bloco lista_elsif .
    (111) condicional -> IF exp_2 bloco lista_elsif . ELSE bloco
    (113) lista_elsif -> lista_elsif . ELSIF exp_2 bloco

    FUNCTION        reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    MY              reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    OUR             reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LIST            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ESCALAR         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ID              reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    IF              reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FOR             reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    INTEGER         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    WHILE           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LOOP            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ABRE_CHAVE      reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    NOT             reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    NEGAC           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ADC_DP          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    DECREMENTO      reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    LPAREN          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FLOAT           reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    STRING          reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    BOOLEAN         reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    $end            reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    FECHA_CHAVE     reduce using rule 110 (condicional -> IF exp_2 bloco lista_elsif .)
    ELSE            shift and go to state 214
    ELSIF           shift and go to state 215


state 200

    (112) lista_elsif -> ELSIF . exp_2 bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 216
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 201

    (93) loop -> FOR exp_2 SETA ID . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 217


state 202

    (94) loop -> INTEGER PONTO TIMES SETA . ID ABRE_CHAVE comando FECHA_CHAVE

    ID              shift and go to state 218


state 203

    (95) loop -> WHILE exp_2 ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 219


state 204

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA . exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 220
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 205

    (97) loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 97 (loop -> LOOP ABRE_CHAVE comando FECHA_CHAVE .)


state 206

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE . declaracoes_main FECHA_CHAVE
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    declaracoes_main               shift and go to state 221
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 207

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 222


state 208

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    comando                        shift and go to state 223
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 209

    (103) funcao_com_varios_paramentro -> COMMA ESCALAR parametros .

    RPAREN          reduce using rule 103 (funcao_com_varios_paramentro -> COMMA ESCALAR parametros .)


state 210

    (86) declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .

    FUNCTION        reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    MY              reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    OUR             reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LIST            reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ESCALAR         reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ID              reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    IF              reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FOR             reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    INTEGER         reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    WHILE           reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LOOP            reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NOT             reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NEGAC           reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ADC_DP          reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LPAREN          reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FLOAT           reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    STRING          reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    $end            reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 86 (declaracao_escalar_MY -> MY ESCALAR IGUAL tipo PONTO_VIRGULA .)


state 211

    (87) declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .

    FUNCTION        reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    MY              reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    OUR             reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LIST            reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ESCALAR         reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ID              reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    IF              reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FOR             reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    INTEGER         reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    WHILE           reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LOOP            reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NOT             reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    NEGAC           reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    ADC_DP          reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    LPAREN          reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FLOAT           reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    STRING          reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    $end            reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 87 (declaracao_escalar_OUR -> OUR ESCALAR IGUAL tipo PONTO_VIRGULA .)


state 212

    (91) lista_valores_recursiva -> lista_valores COMMA tipo .

    PONTO_VIRGULA   reduce using rule 91 (lista_valores_recursiva -> lista_valores COMMA tipo .)
    COMMA           reduce using rule 91 (lista_valores_recursiva -> lista_valores COMMA tipo .)


state 213

    (109) condicional -> IF exp_2 bloco ELSE bloco .

    FUNCTION        reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    MY              reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    OUR             reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LIST            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ESCALAR         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ID              reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    IF              reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FOR             reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    INTEGER         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    WHILE           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LOOP            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ABRE_CHAVE      reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    NOT             reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEGAC           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    ADC_DP          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    DECREMENTO      reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    LPAREN          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FLOAT           reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    STRING          reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    BOOLEAN         reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    $end            reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)
    FECHA_CHAVE     reduce using rule 109 (condicional -> IF exp_2 bloco ELSE bloco .)


state 214

    (111) condicional -> IF exp_2 bloco lista_elsif ELSE . bloco
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 9

    bloco                          shift and go to state 224

state 215

    (113) lista_elsif -> lista_elsif ELSIF . exp_2 bloco
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 225
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 216

    (112) lista_elsif -> ELSIF exp_2 . bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE

    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108
    ABRE_CHAVE      shift and go to state 9

    bloco                          shift and go to state 226

state 217

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 27
    comando                        shift and go to state 227
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 218

    (94) loop -> INTEGER PONTO TIMES SETA ID . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 228


state 219

    (95) loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 95 (loop -> WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE .)


state 220

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 . PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 229
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 221

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 230


state 222

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    comando                        shift and go to state 231
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 223

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 232


state 224

    (111) condicional -> IF exp_2 bloco lista_elsif ELSE bloco .

    FUNCTION        reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    MY              reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    OUR             reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LIST            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ESCALAR         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ID              reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IF              reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FOR             reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INTEGER         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    WHILE           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LOOP            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ABRE_CHAVE      reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NOT             reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEGAC           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ADC_DP          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    DECREMENTO      reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LPAREN          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FLOAT           reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STRING          reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BOOLEAN         reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    $end            reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FECHA_CHAVE     reduce using rule 111 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)


state 225

    (113) lista_elsif -> lista_elsif ELSIF exp_2 . bloco
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE

    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108
    ABRE_CHAVE      shift and go to state 9

    bloco                          shift and go to state 233

state 226

    (112) lista_elsif -> ELSIF exp_2 bloco .

    ELSE            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    MY              reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    OUR             reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LIST            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ID              reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    IF              reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FOR             reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    WHILE           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LOOP            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    NOT             reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    STRING          reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    $end            reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 112 (lista_elsif -> ELSIF exp_2 bloco .)


state 227

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 234


state 228

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    comando                        shift and go to state 235
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    atribuicao                     shift and go to state 23
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    exp_2                          shift and go to state 27
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 229

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA . exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    ID              shift and go to state 96
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    ESCALAR         shift and go to state 97
    INTEGER         shift and go to state 98
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    exp_2                          shift and go to state 236
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    tipo                           shift and go to state 31
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 230

    (6) funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .

    MY              reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    OUR             reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LIST            reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ESCALAR         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ID              reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    IF              reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    FOR             reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    INTEGER         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    WHILE           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LOOP            reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    NOT             reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    NEGAC           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    ADC_DP          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    DECREMENTO      reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    LPAREN          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    FLOAT           reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    STRING          reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)
    BOOLEAN         reduce using rule 6 (funcao_main -> FUNCTION MAIN LPAREN RPAREN ABRE_CHAVE declaracoes_main FECHA_CHAVE .)


state 231

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 237


state 232

    (99) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 99 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE .)


state 233

    (113) lista_elsif -> lista_elsif ELSIF exp_2 bloco .

    ELSE            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MY              reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    OUR             reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LIST            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ID              reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IF              reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FOR             reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    WHILE           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LOOP            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NOT             reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STRING          reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    $end            reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 113 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)


state 234

    (93) loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 93 (loop -> FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE .)


state 235

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 238


state 236

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 . RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (12) or -> exp_2 . OR_S exp_3
    (13) xor -> exp_2 . XOR_S exp_3

    RPAREN          shift and go to state 239
    OR_S            shift and go to state 107
    XOR_S           shift and go to state 108


state 237

    (98) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 98 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE .)


state 238

    (94) loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 94 (loop -> INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE .)


state 239

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN . ABRE_CHAVE comando FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 240


state 240

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE . comando FECHA_CHAVE
    (5) comando -> . declaracoes
    (115) declaracoes -> . declaracao_de_funcao
    (116) declaracoes -> . declaracoes_main
    (127) declaracao_de_funcao -> . funcao_com_params
    (128) declaracao_de_funcao -> . funcao_sem_params
    (117) declaracoes_main -> . declaracao_de_atribuicao
    (118) declaracoes_main -> . declaracao_de_chamada_funcao
    (119) declaracoes_main -> . declaracao_de_condicional
    (120) declaracoes_main -> . declaracao_loop
    (121) declaracoes_main -> . declaracao_de_expressao
    (122) declaracoes_main -> . declaracao_bloco
    (123) declaracoes_main -> . declaracao_escalar_MY
    (124) declaracoes_main -> . declaracao_escalar_OUR
    (125) declaracoes_main -> . declaracao_lista
    (98) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (99) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (126) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (129) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (130) declaracao_de_condicional -> . condicional
    (131) declaracao_loop -> . loop
    (132) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (133) declaracao_bloco -> . bloco
    (86) declaracao_escalar_MY -> . MY ESCALAR IGUAL tipo PONTO_VIRGULA
    (87) declaracao_escalar_OUR -> . OUR ESCALAR IGUAL tipo PONTO_VIRGULA
    (88) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (104) atribuicao -> . ESCALAR IGUAL exp_2
    (105) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar
    (108) condicional -> . IF exp_2 bloco
    (109) condicional -> . IF exp_2 bloco ELSE bloco
    (110) condicional -> . IF exp_2 bloco lista_elsif
    (111) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (93) loop -> . FOR exp_2 SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (94) loop -> . INTEGER PONTO TIMES SETA ID ABRE_CHAVE comando FECHA_CHAVE
    (95) loop -> . WHILE exp_2 ABRE_CHAVE comando FECHA_CHAVE
    (96) loop -> . LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE
    (97) loop -> . LOOP ABRE_CHAVE comando FECHA_CHAVE
    (9) exp_2 -> . or
    (10) exp_2 -> . xor
    (11) exp_2 -> . exp_3
    (114) bloco -> . ABRE_CHAVE declaracoes FECHA_CHAVE
    (12) or -> . exp_2 OR_S exp_3
    (13) xor -> . exp_2 XOR_S exp_3
    (14) exp_3 -> . and
    (15) exp_3 -> . exp_4
    (16) and -> . exp_3 AND_S exp_4
    (17) exp_4 -> . igual_dp
    (18) exp_4 -> . dif
    (19) exp_4 -> . maior
    (20) exp_4 -> . menor
    (21) exp_4 -> . maior_igual
    (22) exp_4 -> . menor_igual
    (23) exp_4 -> . smartmatch
    (24) exp_4 -> . exp_5
    (25) igual_dp -> . exp_4 IGUAL_DP exp_5
    (26) dif -> . exp_4 DIF exp_5
    (27) maior -> . exp_4 MAIOR exp_5
    (28) menor -> . exp_4 MENOR exp_5
    (29) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (30) menor_igual -> . exp_4 LESSEQUAL exp_5
    (31) smartmatch -> . exp_4 SMARTMATCH exp_5
    (32) exp_5 -> . adicao
    (33) exp_5 -> . subtracao
    (34) exp_5 -> . conc
    (35) exp_5 -> . exp_6
    (36) adicao -> . exp_5 ADC exp_6
    (37) subtracao -> . exp_5 SUB exp_6
    (38) conc -> . exp_5 CONC exp_6
    (39) exp_6 -> . mult
    (40) exp_6 -> . divide
    (41) exp_6 -> . div
    (42) exp_6 -> . divi
    (43) exp_6 -> . mod
    (44) exp_6 -> . lcm
    (45) exp_6 -> . gcd
    (46) exp_6 -> . exp_7
    (47) mult -> . exp_6 MULT exp_7
    (48) divide -> . exp_6 DIVIDE exp_7
    (49) div -> . exp_6 DIV exp_7
    (50) divi -> . exp_6 DIVI exp_7
    (51) mod -> . exp_6 MOD exp_7
    (52) lcm -> . exp_6 LCM exp_7
    (53) gcd -> . exp_6 GCD exp_7
    (54) exp_7 -> . pow
    (55) exp_7 -> . exp_8
    (56) pow -> . exp_7 POW exp_8
    (57) exp_8 -> . not_op
    (58) exp_8 -> . not_s
    (59) exp_8 -> . exp_9
    (60) not_op -> . NOT exp_8
    (61) not_s -> . NEGAC exp_8
    (62) exp_9 -> . unario
    (63) exp_9 -> . operando
    (64) unario -> . prefixo_incremento
    (65) unario -> . posfixo_incremento
    (66) unario -> . prefixo_decremento
    (67) unario -> . posfixo_decremento
    (72) operando -> . parenteses
    (73) operando -> . completo
    (68) prefixo_incremento -> . ADC_DP ID
    (69) posfixo_incremento -> . ID ADC_DP
    (70) prefixo_decremento -> . DECREMENTO ID
    (71) posfixo_decremento -> . ID DECREMENTO
    (74) parenteses -> . LPAREN exp RPAREN
    (75) completo -> . tipo
    (76) completo -> . escalar
    (77) tipo -> . inteiro
    (78) tipo -> . float
    (79) tipo -> . string
    (80) tipo -> . boolean
    (85) escalar -> . ESCALAR
    (81) inteiro -> . INTEGER
    (82) float -> . FLOAT
    (83) string -> . STRING
    (84) boolean -> . BOOLEAN

    FUNCTION        shift and go to state 100
    MY              shift and go to state 29
    OUR             shift and go to state 32
    LIST            shift and go to state 33
    ESCALAR         shift and go to state 30
    ID              shift and go to state 22
    IF              shift and go to state 34
    FOR             shift and go to state 35
    INTEGER         shift and go to state 36
    WHILE           shift and go to state 37
    LOOP            shift and go to state 38
    ABRE_CHAVE      shift and go to state 9
    NOT             shift and go to state 69
    NEGAC           shift and go to state 70
    ADC_DP          shift and go to state 79
    DECREMENTO      shift and go to state 80
    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 88

    atribuicao                     shift and go to state 23
    exp_2                          shift and go to state 27
    comando                        shift and go to state 241
    declaracoes                    shift and go to state 169
    declaracao_de_funcao           shift and go to state 10
    declaracoes_main               shift and go to state 4
    funcao_com_params              shift and go to state 11
    funcao_sem_params              shift and go to state 12
    declaracao_de_atribuicao       shift and go to state 13
    declaracao_de_chamada_funcao   shift and go to state 14
    declaracao_de_condicional      shift and go to state 15
    declaracao_loop                shift and go to state 16
    declaracao_de_expressao        shift and go to state 17
    declaracao_bloco               shift and go to state 18
    declaracao_escalar_MY          shift and go to state 19
    declaracao_escalar_OUR         shift and go to state 20
    declaracao_lista               shift and go to state 21
    chamada_funcao                 shift and go to state 24
    condicional                    shift and go to state 25
    loop                           shift and go to state 26
    bloco                          shift and go to state 28
    tipo                           shift and go to state 31
    or                             shift and go to state 39
    xor                            shift and go to state 40
    exp_3                          shift and go to state 41
    and                            shift and go to state 42
    exp_4                          shift and go to state 43
    igual_dp                       shift and go to state 44
    dif                            shift and go to state 45
    maior                          shift and go to state 46
    menor                          shift and go to state 47
    maior_igual                    shift and go to state 48
    menor_igual                    shift and go to state 49
    smartmatch                     shift and go to state 50
    exp_5                          shift and go to state 51
    adicao                         shift and go to state 52
    subtracao                      shift and go to state 53
    conc                           shift and go to state 54
    exp_6                          shift and go to state 55
    mult                           shift and go to state 56
    divide                         shift and go to state 57
    div                            shift and go to state 58
    divi                           shift and go to state 59
    mod                            shift and go to state 60
    lcm                            shift and go to state 61
    gcd                            shift and go to state 62
    exp_7                          shift and go to state 63
    pow                            shift and go to state 64
    exp_8                          shift and go to state 65
    not_op                         shift and go to state 66
    not_s                          shift and go to state 67
    exp_9                          shift and go to state 68
    unario                         shift and go to state 71
    operando                       shift and go to state 72
    prefixo_incremento             shift and go to state 73
    posfixo_incremento             shift and go to state 74
    prefixo_decremento             shift and go to state 75
    posfixo_decremento             shift and go to state 76
    parenteses                     shift and go to state 77
    completo                       shift and go to state 78
    escalar                        shift and go to state 81
    inteiro                        shift and go to state 82
    float                          shift and go to state 83
    string                         shift and go to state 84
    boolean                        shift and go to state 85

state 241

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 242


state 242

    (96) loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .

    FUNCTION        reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    MY              reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    OUR             reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LIST            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ESCALAR         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ID              reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    IF              reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FOR             reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    INTEGER         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    WHILE           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LOOP            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NOT             reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    NEGAC           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    ADC_DP          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    DECREMENTO      reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    LPAREN          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FLOAT           reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    STRING          reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    BOOLEAN         reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    $end            reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 96 (loop -> LOOP LPAREN atribuicao PONTO_VIRGULA exp_2 PONTO_VIRGULA exp_2 RPAREN ABRE_CHAVE comando FECHA_CHAVE .)

