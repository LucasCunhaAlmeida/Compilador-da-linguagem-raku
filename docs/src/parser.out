Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> lista_declaracoes
Rule 2     lista_declaracoes -> lista_declaracoes declaracoes
Rule 3     lista_declaracoes -> declaracoes
Rule 4     lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes
Rule 5     lista_declaracoes_para_funcoes -> declaracoes_para_funcoes
Rule 6     exp_2 -> or
Rule 7     exp_2 -> xor
Rule 8     exp_2 -> exp_3
Rule 9     or -> exp_2 OR_S exp_3
Rule 10    xor -> exp_2 XOR_S exp_3
Rule 11    exp_3 -> and
Rule 12    exp_3 -> exp_4
Rule 13    and -> exp_3 AND_S exp_4
Rule 14    exp_4 -> igual_dp
Rule 15    exp_4 -> dif
Rule 16    exp_4 -> maior
Rule 17    exp_4 -> menor
Rule 18    exp_4 -> maior_igual
Rule 19    exp_4 -> menor_igual
Rule 20    exp_4 -> smartmatch
Rule 21    exp_4 -> exp_5
Rule 22    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 23    dif -> exp_4 DIF exp_5
Rule 24    maior -> exp_4 MAIOR exp_5
Rule 25    menor -> exp_4 MENOR exp_5
Rule 26    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 27    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 28    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 29    exp_5 -> adicao
Rule 30    exp_5 -> subtracao
Rule 31    exp_5 -> conc
Rule 32    exp_5 -> exp_6
Rule 33    adicao -> exp_5 ADC exp_6
Rule 34    subtracao -> exp_5 SUB exp_6
Rule 35    conc -> exp_5 CONC exp_6
Rule 36    exp_6 -> mult
Rule 37    exp_6 -> divide
Rule 38    exp_6 -> div
Rule 39    exp_6 -> divi
Rule 40    exp_6 -> mod
Rule 41    exp_6 -> lcm
Rule 42    exp_6 -> gcd
Rule 43    exp_6 -> exp_7
Rule 44    mult -> exp_6 MULT exp_7
Rule 45    divide -> exp_6 DIVIDE exp_7
Rule 46    div -> exp_6 DIV exp_7
Rule 47    divi -> exp_6 DIVI exp_7
Rule 48    mod -> exp_6 MOD exp_7
Rule 49    lcm -> exp_6 LCM exp_7
Rule 50    gcd -> exp_6 GCD exp_7
Rule 51    exp_7 -> pow
Rule 52    exp_7 -> exp_8
Rule 53    pow -> exp_7 POW exp_8
Rule 54    exp_8 -> not_op
Rule 55    exp_8 -> not_s
Rule 56    exp_8 -> exp_9
Rule 57    not_op -> NOT exp_8
Rule 58    not_s -> NEGAC exp_8
Rule 59    exp_9 -> unario
Rule 60    exp_9 -> operando
Rule 61    unario -> prefixo_incremento
Rule 62    unario -> posfixo_incremento
Rule 63    unario -> prefixo_decremento
Rule 64    unario -> posfixo_decremento
Rule 65    prefixo_incremento -> ADC_DP escalar
Rule 66    posfixo_incremento -> escalar ADC_DP
Rule 67    prefixo_decremento -> DECREMENTO escalar
Rule 68    posfixo_decremento -> escalar DECREMENTO
Rule 69    operando -> parenteses
Rule 70    operando -> completo
Rule 71    parenteses -> LPAREN exp_2 RPAREN
Rule 72    completo -> tipo
Rule 73    completo -> chamada_funcao
Rule 74    completo -> chamada_funcao_sem_parametro
Rule 75    completo -> escalar
Rule 76    tipo -> inteiro
Rule 77    tipo -> float
Rule 78    tipo -> string
Rule 79    tipo -> boolean
Rule 80    tipo_opicional -> tipo_opicional_int
Rule 81    tipo_opicional -> tipo_opicional_str
Rule 82    tipo_opicional -> empty
Rule 83    tipo_opicional_int -> INT
Rule 84    tipo_opicional_str -> STR
Rule 85    empty -> <empty>
Rule 86    inteiro -> INTEGER
Rule 87    float -> FLOAT
Rule 88    string -> STRING
Rule 89    boolean -> BOOLEAN
Rule 90    escalar -> ESCALAR
Rule 91    declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 92    declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 93    declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
Rule 94    declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
Rule 95    declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
Rule 96    lista_valores -> lista_valores COMMA tipo
Rule 97    lista_valores -> lista_valores_base
Rule 98    lista_valores_base -> tipo
Rule 99    loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 100   loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 101   loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 102   loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 103   loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 104   say -> SAY say_func PONTO_VIRGULA
Rule 105   say_func -> exp_2
Rule 106   say_func -> LIST
Rule 107   funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 108   funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 109   parametros -> tipo_opicional ESCALAR
Rule 110   parametros -> parametros COMMA tipo_opicional ESCALAR
Rule 111   atribuicao -> ESCALAR IGUAL exp_2
Rule 112   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN
Rule 113   chamada_funcao_sem_parametro -> ID LPAREN RPAREN
Rule 114   chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2
Rule 115   chamada_funcao_auxiliar -> exp_2
Rule 116   condicional -> IF exp_2 bloco
Rule 117   condicional -> IF exp_2 bloco ELSE bloco
Rule 118   condicional -> IF exp_2 bloco lista_elsif
Rule 119   condicional -> IF exp_2 bloco lista_elsif ELSE bloco
Rule 120   lista_elsif -> ELSIF exp_2 bloco
Rule 121   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 122   bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 123   declaracoes -> declaracoes_para_funcoes
Rule 124   declaracoes -> declaracao_multi
Rule 125   declaracoes -> declaracao_multi_sem_par
Rule 126   declaracoes -> declaracao_only
Rule 127   declaracoes -> declaracao_only_sem_par
Rule 128   declaracoes -> declaracao_de_funcao
Rule 129   declaracoes_para_funcoes -> declaracao_de_atribuicao
Rule 130   declaracoes_para_funcoes -> say
Rule 131   declaracoes_para_funcoes -> comentario
Rule 132   declaracoes_para_funcoes -> declaracao_de_condicional
Rule 133   declaracoes_para_funcoes -> declaracao_loop
Rule 134   declaracoes_para_funcoes -> declaracao_de_expressao
Rule 135   declaracoes_para_funcoes -> declaracao_bloco
Rule 136   declaracoes_para_funcoes -> declaracao_escalar_MY
Rule 137   declaracoes_para_funcoes -> declaracao_escalar_OUR
Rule 138   declaracoes_para_funcoes -> declaracao_lista
Rule 139   declaracoes_para_funcoes -> declaracao_lista_MY
Rule 140   declaracoes_para_funcoes -> declaracao_lista_OUR
Rule 141   declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo
Rule 142   declaracoes_para_funcoes -> declaracao_de_controle_de_escopo
Rule 143   declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao
Rule 144   declaracoes_para_funcoes -> declaracao_de_controle_de_lista
Rule 145   comentario -> COMMENT
Rule 146   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 147   declaracao_de_funcao -> funcao_com_params
Rule 148   declaracao_de_funcao -> funcao_sem_params
Rule 149   declaracao_de_condicional -> condicional
Rule 150   declaracao_loop -> loop
Rule 151   declaracao_loop -> loop_for
Rule 152   declaracao_loop -> loop_for_com_lista
Rule 153   declaracao_loop -> loop_while
Rule 154   declaracao_loop -> loop_sem_condicao
Rule 155   declaracao_de_expressao -> exp_2 PONTO_VIRGULA
Rule 156   declaracao_bloco -> bloco
Rule 157   declaracao_de_controle_de_fluxo -> declaracao_break
Rule 158   declaracao_de_controle_de_fluxo -> declaracao_exit
Rule 159   declaracao_de_controle_de_fluxo -> declaracao_last
Rule 160   declaracao_de_controle_de_fluxo -> declaracao_next
Rule 161   declaracao_de_controle_de_fluxo -> declaracao_redo
Rule 162   declaracao_de_controle_de_fluxo -> declaracao_return
Rule 163   declaracao_de_controle_de_escopo -> declaracao_constant
Rule 164   declaracao_de_controle_de_escopo -> declaracao_state
Rule 165   declaracao_de_controle_de_modularizacao -> import
Rule 166   declaracao_de_controle_de_modularizacao -> need
Rule 167   declaracao_de_controle_de_modularizacao -> require
Rule 168   declaracao_de_controle_de_modularizacao -> use
Rule 169   declaracao_de_controle_de_lista -> push
Rule 170   declaracao_de_controle_de_lista -> unshift
Rule 171   declaracao_de_controle_de_lista -> splice
Rule 172   declaracao_break -> BREAK PONTO_VIRGULA
Rule 173   declaracao_exit -> EXIT exp_2 PONTO_VIRGULA
Rule 174   declaracao_last -> LAST PONTO_VIRGULA
Rule 175   declaracao_next -> NEXT PONTO_VIRGULA
Rule 176   declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA
Rule 177   declaracao_return -> RETURN exp_2 PONTO_VIRGULA
Rule 178   declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 179   declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 180   declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 181   declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 182   declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 183   declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 184   import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
Rule 185   need -> NEED ID PONTO_VIRGULA
Rule 186   require -> REQUIRE ID PONTO_VIRGULA
Rule 187   use -> USE ID PONTO_VIRGULA
Rule 188   push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA
Rule 189   unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
Rule 190   splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA

Terminals, with rules where they appear

ABRE_CHAVE           : 99 100 101 102 103 107 108 122 180 181 182 183
ADC                  : 33
ADC_DP               : 65 66
AND_S                : 13
BOOLEAN              : 89 176
BREAK                : 172
COMMA                : 96 110 114 188 189 190
COMMENT              : 145
CONC                 : 35
CONSTANT             : 178
DECREMENTO           : 67 68
DIF                  : 23
DIV                  : 46
DIVI                 : 47
DIVIDE               : 45
ELSE                 : 117 119
ELSIF                : 120 121
ESCALAR              : 90 91 92 99 100 109 110 111 178 179
EXIT                 : 173
FECHA_CHAVE          : 99 100 101 102 103 107 108 122 180 181 182 183
FLOAT                : 87
FOR                  : 99 100
FUNCTION             : 107 108
GCD                  : 50
ID                   : 107 108 112 113 180 181 182 183 184 184 185 186 187
IF                   : 116 117 118 119 176
IGUAL                : 91 92 93 94 95 111 178 179
IGUAL_DP             : 22
IMPORT               : 184
INT                  : 83
INTEGER              : 86
INTERPOLACAO         : 99
LAST                 : 174
LCM                  : 49
LESSEQUAL            : 27
LIST                 : 93 94 95 100 106 188 189 190
LOOP                 : 102 103
LPAREN               : 71 102 107 108 112 113 180 181 182 183
MAIOR                : 24 184
MAIOR_IGL            : 26
MENOR                : 25 184
MOD                  : 48
MULT                 : 44
MULTI                : 180 181
MY                   : 91 94
NEED                 : 185
NEGAC                : 58
NEXT                 : 175
NOT                  : 57
ONLY                 : 182 183
OR_S                 : 9
OUR                  : 92 95
PONTO_VIRGULA        : 91 92 93 94 95 102 104 146 155 172 173 174 175 176 177 178 179 184 185 186 187 188 189 190
POW                  : 53
PUSH                 : 188
REDO                 : 176
REQUIRE              : 186
RETURN               : 177
RPAREN               : 71 102 107 108 112 113 180 181 182 183
SAY                  : 104
SETA                 : 99 100
SMARTMATCH           : 28
SPLICE               : 190
STATE                : 179
STR                  : 84
STRING               : 88
SUB                  : 34
UNSHIFT              : 189
USE                  : 187
WHILE                : 101
XOR_S                : 10
error                : 

Nonterminals, with rules where they appear

adicao               : 29
and                  : 11
atribuicao           : 102 146
bloco                : 116 117 117 118 119 119 120 121 156
boolean              : 79
chamada_funcao       : 73
chamada_funcao_auxiliar : 112 114
chamada_funcao_sem_parametro : 74
comentario           : 131
completo             : 70
conc                 : 31
condicional          : 149
declaracao_bloco     : 135
declaracao_break     : 157
declaracao_constant  : 163
declaracao_de_atribuicao : 129
declaracao_de_condicional : 132
declaracao_de_controle_de_escopo : 142
declaracao_de_controle_de_fluxo : 141
declaracao_de_controle_de_lista : 144
declaracao_de_controle_de_modularizacao : 143
declaracao_de_expressao : 134
declaracao_de_funcao : 128
declaracao_escalar_MY : 102 136
declaracao_escalar_OUR : 137
declaracao_exit      : 158
declaracao_last      : 159
declaracao_lista     : 138
declaracao_lista_MY  : 139
declaracao_lista_OUR : 140
declaracao_loop      : 133
declaracao_multi     : 124
declaracao_multi_sem_par : 125
declaracao_next      : 160
declaracao_only      : 126
declaracao_only_sem_par : 127
declaracao_redo      : 161
declaracao_return    : 162
declaracao_state     : 164
declaracoes          : 2 3
declaracoes_para_funcoes : 4 5 123
dif                  : 15
div                  : 38
divi                 : 39
divide               : 37
empty                : 82
escalar              : 65 66 67 68 75
exp_2                : 9 10 71 91 92 101 102 105 111 114 115 116 117 118 119 120 121 155 173 177 178 179
exp_3                : 8 9 10 13
exp_4                : 12 13 22 23 24 25 26 27 28
exp_5                : 21 22 23 24 25 26 27 28 33 34 35
exp_6                : 32 33 34 35 44 45 46 47 48 49 50
exp_7                : 43 44 45 46 47 48 49 50 53
exp_8                : 52 53 57 58
exp_9                : 56
float                : 77
funcao_com_params    : 147
funcao_sem_params    : 148
gcd                  : 42
igual_dp             : 14
import               : 165
inteiro              : 76 99 99
lcm                  : 41
lista_declaracoes    : 1 2 4 99 100 101 102 103 122
lista_declaracoes_para_funcoes : 107 108 180 181 182 183
lista_elsif          : 118 119 121
lista_valores        : 93 94 95 96 188 189 190
lista_valores_base   : 97
loop                 : 150
loop_for             : 151
loop_for_com_lista   : 152
loop_sem_condicao    : 154
loop_while           : 153
maior                : 16
maior_igual          : 18
menor                : 17
menor_igual          : 19
mod                  : 40
mult                 : 36
need                 : 166
not_op               : 54
not_s                : 55
operando             : 60
or                   : 6
parametros           : 107 110 180 182
parenteses           : 69
posfixo_decremento   : 64
posfixo_incremento   : 62
pow                  : 51
prefixo_decremento   : 63
prefixo_incremento   : 61
programa             : 0
push                 : 169
require              : 167
say                  : 130
say_func             : 104
smartmatch           : 20
splice               : 171
string               : 78
subtracao            : 30
tipo                 : 72 96 98
tipo_opicional       : 91 92 93 94 95 109 110
tipo_opicional_int   : 80
tipo_opicional_str   : 81
unario               : 59
unshift              : 170
use                  : 168
xor                  : 7

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . lista_declaracoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    programa                       shift and go to state 1
    lista_declaracoes              shift and go to state 2
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 1

    (0) S' -> programa .



state 2

    (1) programa -> lista_declaracoes .
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    $end            reduce using rule 1 (programa -> lista_declaracoes .)
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 3

    (3) lista_declaracoes -> declaracoes .

    MULTI           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ONLY            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    SAY             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    COMMENT         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    MY              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    OUR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FUNCTION        reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ESCALAR         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    IF              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LOOP            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FOR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    WHILE           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ABRE_CHAVE      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    BREAK           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    EXIT            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LAST            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEXT            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    REDO            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    RETURN          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    CONSTANT        reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STATE           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    IMPORT          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEED            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    REQUIRE         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    USE             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    PUSH            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    UNSHIFT         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    SPLICE          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    INT             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NOT             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEGAC           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ADC_DP          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    DECREMENTO      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LPAREN          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ID              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    INTEGER         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FLOAT           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STRING          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    BOOLEAN         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LIST            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    $end            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FECHA_CHAVE     reduce using rule 3 (lista_declaracoes -> declaracoes .)


state 4

    (123) declaracoes -> declaracoes_para_funcoes .

    MULTI           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    SAY             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    COMMENT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    $end            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FECHA_CHAVE     reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)


state 5

    (124) declaracoes -> declaracao_multi .

    MULTI           reduce using rule 124 (declaracoes -> declaracao_multi .)
    ONLY            reduce using rule 124 (declaracoes -> declaracao_multi .)
    SAY             reduce using rule 124 (declaracoes -> declaracao_multi .)
    COMMENT         reduce using rule 124 (declaracoes -> declaracao_multi .)
    MY              reduce using rule 124 (declaracoes -> declaracao_multi .)
    OUR             reduce using rule 124 (declaracoes -> declaracao_multi .)
    FUNCTION        reduce using rule 124 (declaracoes -> declaracao_multi .)
    ESCALAR         reduce using rule 124 (declaracoes -> declaracao_multi .)
    IF              reduce using rule 124 (declaracoes -> declaracao_multi .)
    LOOP            reduce using rule 124 (declaracoes -> declaracao_multi .)
    FOR             reduce using rule 124 (declaracoes -> declaracao_multi .)
    WHILE           reduce using rule 124 (declaracoes -> declaracao_multi .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes -> declaracao_multi .)
    BREAK           reduce using rule 124 (declaracoes -> declaracao_multi .)
    EXIT            reduce using rule 124 (declaracoes -> declaracao_multi .)
    LAST            reduce using rule 124 (declaracoes -> declaracao_multi .)
    NEXT            reduce using rule 124 (declaracoes -> declaracao_multi .)
    REDO            reduce using rule 124 (declaracoes -> declaracao_multi .)
    RETURN          reduce using rule 124 (declaracoes -> declaracao_multi .)
    CONSTANT        reduce using rule 124 (declaracoes -> declaracao_multi .)
    STATE           reduce using rule 124 (declaracoes -> declaracao_multi .)
    IMPORT          reduce using rule 124 (declaracoes -> declaracao_multi .)
    NEED            reduce using rule 124 (declaracoes -> declaracao_multi .)
    REQUIRE         reduce using rule 124 (declaracoes -> declaracao_multi .)
    USE             reduce using rule 124 (declaracoes -> declaracao_multi .)
    PUSH            reduce using rule 124 (declaracoes -> declaracao_multi .)
    UNSHIFT         reduce using rule 124 (declaracoes -> declaracao_multi .)
    SPLICE          reduce using rule 124 (declaracoes -> declaracao_multi .)
    INT             reduce using rule 124 (declaracoes -> declaracao_multi .)
    STR             reduce using rule 124 (declaracoes -> declaracao_multi .)
    NOT             reduce using rule 124 (declaracoes -> declaracao_multi .)
    NEGAC           reduce using rule 124 (declaracoes -> declaracao_multi .)
    ADC_DP          reduce using rule 124 (declaracoes -> declaracao_multi .)
    DECREMENTO      reduce using rule 124 (declaracoes -> declaracao_multi .)
    LPAREN          reduce using rule 124 (declaracoes -> declaracao_multi .)
    ID              reduce using rule 124 (declaracoes -> declaracao_multi .)
    INTEGER         reduce using rule 124 (declaracoes -> declaracao_multi .)
    FLOAT           reduce using rule 124 (declaracoes -> declaracao_multi .)
    STRING          reduce using rule 124 (declaracoes -> declaracao_multi .)
    BOOLEAN         reduce using rule 124 (declaracoes -> declaracao_multi .)
    LIST            reduce using rule 124 (declaracoes -> declaracao_multi .)
    $end            reduce using rule 124 (declaracoes -> declaracao_multi .)
    FECHA_CHAVE     reduce using rule 124 (declaracoes -> declaracao_multi .)


state 6

    (125) declaracoes -> declaracao_multi_sem_par .

    MULTI           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    ONLY            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    SAY             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    COMMENT         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    MY              reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    OUR             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    FUNCTION        reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    ESCALAR         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    IF              reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    LOOP            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    FOR             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    WHILE           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    ABRE_CHAVE      reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    BREAK           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    EXIT            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    LAST            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    NEXT            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    REDO            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    RETURN          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    CONSTANT        reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    STATE           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    IMPORT          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    NEED            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    REQUIRE         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    USE             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    PUSH            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    UNSHIFT         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    SPLICE          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    INT             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    STR             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    NOT             reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    NEGAC           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    ADC_DP          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    DECREMENTO      reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    LPAREN          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    ID              reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    INTEGER         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    FLOAT           reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    STRING          reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    BOOLEAN         reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    LIST            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    $end            reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)
    FECHA_CHAVE     reduce using rule 125 (declaracoes -> declaracao_multi_sem_par .)


state 7

    (126) declaracoes -> declaracao_only .

    MULTI           reduce using rule 126 (declaracoes -> declaracao_only .)
    ONLY            reduce using rule 126 (declaracoes -> declaracao_only .)
    SAY             reduce using rule 126 (declaracoes -> declaracao_only .)
    COMMENT         reduce using rule 126 (declaracoes -> declaracao_only .)
    MY              reduce using rule 126 (declaracoes -> declaracao_only .)
    OUR             reduce using rule 126 (declaracoes -> declaracao_only .)
    FUNCTION        reduce using rule 126 (declaracoes -> declaracao_only .)
    ESCALAR         reduce using rule 126 (declaracoes -> declaracao_only .)
    IF              reduce using rule 126 (declaracoes -> declaracao_only .)
    LOOP            reduce using rule 126 (declaracoes -> declaracao_only .)
    FOR             reduce using rule 126 (declaracoes -> declaracao_only .)
    WHILE           reduce using rule 126 (declaracoes -> declaracao_only .)
    ABRE_CHAVE      reduce using rule 126 (declaracoes -> declaracao_only .)
    BREAK           reduce using rule 126 (declaracoes -> declaracao_only .)
    EXIT            reduce using rule 126 (declaracoes -> declaracao_only .)
    LAST            reduce using rule 126 (declaracoes -> declaracao_only .)
    NEXT            reduce using rule 126 (declaracoes -> declaracao_only .)
    REDO            reduce using rule 126 (declaracoes -> declaracao_only .)
    RETURN          reduce using rule 126 (declaracoes -> declaracao_only .)
    CONSTANT        reduce using rule 126 (declaracoes -> declaracao_only .)
    STATE           reduce using rule 126 (declaracoes -> declaracao_only .)
    IMPORT          reduce using rule 126 (declaracoes -> declaracao_only .)
    NEED            reduce using rule 126 (declaracoes -> declaracao_only .)
    REQUIRE         reduce using rule 126 (declaracoes -> declaracao_only .)
    USE             reduce using rule 126 (declaracoes -> declaracao_only .)
    PUSH            reduce using rule 126 (declaracoes -> declaracao_only .)
    UNSHIFT         reduce using rule 126 (declaracoes -> declaracao_only .)
    SPLICE          reduce using rule 126 (declaracoes -> declaracao_only .)
    INT             reduce using rule 126 (declaracoes -> declaracao_only .)
    STR             reduce using rule 126 (declaracoes -> declaracao_only .)
    NOT             reduce using rule 126 (declaracoes -> declaracao_only .)
    NEGAC           reduce using rule 126 (declaracoes -> declaracao_only .)
    ADC_DP          reduce using rule 126 (declaracoes -> declaracao_only .)
    DECREMENTO      reduce using rule 126 (declaracoes -> declaracao_only .)
    LPAREN          reduce using rule 126 (declaracoes -> declaracao_only .)
    ID              reduce using rule 126 (declaracoes -> declaracao_only .)
    INTEGER         reduce using rule 126 (declaracoes -> declaracao_only .)
    FLOAT           reduce using rule 126 (declaracoes -> declaracao_only .)
    STRING          reduce using rule 126 (declaracoes -> declaracao_only .)
    BOOLEAN         reduce using rule 126 (declaracoes -> declaracao_only .)
    LIST            reduce using rule 126 (declaracoes -> declaracao_only .)
    $end            reduce using rule 126 (declaracoes -> declaracao_only .)
    FECHA_CHAVE     reduce using rule 126 (declaracoes -> declaracao_only .)


state 8

    (127) declaracoes -> declaracao_only_sem_par .

    MULTI           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    ONLY            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    SAY             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    COMMENT         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    MY              reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    OUR             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    FUNCTION        reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    ESCALAR         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    IF              reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    LOOP            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    FOR             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    WHILE           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    ABRE_CHAVE      reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    BREAK           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    EXIT            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    LAST            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    NEXT            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    REDO            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    RETURN          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    CONSTANT        reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    STATE           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    IMPORT          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    NEED            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    REQUIRE         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    USE             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    PUSH            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    UNSHIFT         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    SPLICE          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    INT             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    STR             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    NOT             reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    NEGAC           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    ADC_DP          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    DECREMENTO      reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    LPAREN          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    ID              reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    INTEGER         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    FLOAT           reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    STRING          reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    BOOLEAN         reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    LIST            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    $end            reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)
    FECHA_CHAVE     reduce using rule 127 (declaracoes -> declaracao_only_sem_par .)


state 9

    (128) declaracoes -> declaracao_de_funcao .

    MULTI           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    ONLY            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    SAY             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    COMMENT         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    MY              reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    OUR             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    FUNCTION        reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    ESCALAR         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    IF              reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    LOOP            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    FOR             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    WHILE           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    BREAK           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    EXIT            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    LAST            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    NEXT            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    REDO            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    RETURN          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    CONSTANT        reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    STATE           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    IMPORT          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    NEED            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    REQUIRE         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    USE             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    PUSH            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    UNSHIFT         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    SPLICE          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    INT             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    STR             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    NOT             reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    NEGAC           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    ADC_DP          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    DECREMENTO      reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    LPAREN          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    ID              reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    INTEGER         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    FLOAT           reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    STRING          reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    BOOLEAN         reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    LIST            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    $end            reduce using rule 128 (declaracoes -> declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 128 (declaracoes -> declaracao_de_funcao .)


state 10

    (129) declaracoes_para_funcoes -> declaracao_de_atribuicao .

    MULTI           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ONLY            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    SAY             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    COMMENT         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    MY              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    OUR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FUNCTION        reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ESCALAR         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    IF              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LOOP            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FOR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    WHILE           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ABRE_CHAVE      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    BREAK           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    EXIT            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LAST            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEXT            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    REDO            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    RETURN          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    CONSTANT        reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STATE           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    IMPORT          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEED            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    REQUIRE         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    USE             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    PUSH            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    UNSHIFT         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    SPLICE          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    INT             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NOT             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEGAC           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ADC_DP          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    DECREMENTO      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LPAREN          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ID              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    INTEGER         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FLOAT           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STRING          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    BOOLEAN         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LIST            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    $end            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FECHA_CHAVE     reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)


state 11

    (130) declaracoes_para_funcoes -> say .

    MULTI           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    ONLY            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    SAY             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    COMMENT         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    MY              reduce using rule 130 (declaracoes_para_funcoes -> say .)
    OUR             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    FUNCTION        reduce using rule 130 (declaracoes_para_funcoes -> say .)
    ESCALAR         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    IF              reduce using rule 130 (declaracoes_para_funcoes -> say .)
    LOOP            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    FOR             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    WHILE           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    ABRE_CHAVE      reduce using rule 130 (declaracoes_para_funcoes -> say .)
    BREAK           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    EXIT            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    LAST            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    NEXT            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    REDO            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    RETURN          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    CONSTANT        reduce using rule 130 (declaracoes_para_funcoes -> say .)
    STATE           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    IMPORT          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    NEED            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    REQUIRE         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    USE             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    PUSH            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    UNSHIFT         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    SPLICE          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    INT             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    STR             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    NOT             reduce using rule 130 (declaracoes_para_funcoes -> say .)
    NEGAC           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    ADC_DP          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    DECREMENTO      reduce using rule 130 (declaracoes_para_funcoes -> say .)
    LPAREN          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    ID              reduce using rule 130 (declaracoes_para_funcoes -> say .)
    INTEGER         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    FLOAT           reduce using rule 130 (declaracoes_para_funcoes -> say .)
    STRING          reduce using rule 130 (declaracoes_para_funcoes -> say .)
    BOOLEAN         reduce using rule 130 (declaracoes_para_funcoes -> say .)
    LIST            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    $end            reduce using rule 130 (declaracoes_para_funcoes -> say .)
    FECHA_CHAVE     reduce using rule 130 (declaracoes_para_funcoes -> say .)


state 12

    (131) declaracoes_para_funcoes -> comentario .

    MULTI           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    ONLY            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    SAY             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    COMMENT         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    MY              reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    OUR             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    FUNCTION        reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    ESCALAR         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    IF              reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    LOOP            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    FOR             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    WHILE           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    ABRE_CHAVE      reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    BREAK           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    EXIT            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    LAST            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    NEXT            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    REDO            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    RETURN          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    CONSTANT        reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    STATE           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    IMPORT          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    NEED            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    REQUIRE         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    USE             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    PUSH            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    UNSHIFT         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    SPLICE          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    INT             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    STR             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    NOT             reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    NEGAC           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    ADC_DP          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    DECREMENTO      reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    LPAREN          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    ID              reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    INTEGER         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    FLOAT           reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    STRING          reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    BOOLEAN         reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    LIST            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    $end            reduce using rule 131 (declaracoes_para_funcoes -> comentario .)
    FECHA_CHAVE     reduce using rule 131 (declaracoes_para_funcoes -> comentario .)


state 13

    (132) declaracoes_para_funcoes -> declaracao_de_condicional .

    MULTI           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ONLY            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    SAY             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    COMMENT         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    MY              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    OUR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FUNCTION        reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ESCALAR         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    IF              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LOOP            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FOR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    WHILE           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ABRE_CHAVE      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    BREAK           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    EXIT            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LAST            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEXT            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    REDO            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    RETURN          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    CONSTANT        reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STATE           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    IMPORT          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEED            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    REQUIRE         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    USE             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    PUSH            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    UNSHIFT         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    SPLICE          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    INT             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NOT             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEGAC           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ADC_DP          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    DECREMENTO      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LPAREN          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ID              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    INTEGER         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FLOAT           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STRING          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    BOOLEAN         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LIST            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    $end            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FECHA_CHAVE     reduce using rule 132 (declaracoes_para_funcoes -> declaracao_de_condicional .)


state 14

    (133) declaracoes_para_funcoes -> declaracao_loop .

    MULTI           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    ONLY            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    SAY             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    COMMENT         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    MY              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    OUR             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    FUNCTION        reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    ESCALAR         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    IF              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    LOOP            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    FOR             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    WHILE           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    ABRE_CHAVE      reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    BREAK           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    EXIT            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    LAST            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    NEXT            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    REDO            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    RETURN          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    CONSTANT        reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    STATE           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    IMPORT          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    NEED            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    REQUIRE         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    USE             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    PUSH            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    UNSHIFT         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    SPLICE          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    INT             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    STR             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    NOT             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    NEGAC           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    ADC_DP          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    DECREMENTO      reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    LPAREN          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    ID              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    INTEGER         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    FLOAT           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    STRING          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    BOOLEAN         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    LIST            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    $end            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)
    FECHA_CHAVE     reduce using rule 133 (declaracoes_para_funcoes -> declaracao_loop .)


state 15

    (134) declaracoes_para_funcoes -> declaracao_de_expressao .

    MULTI           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ONLY            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    SAY             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    COMMENT         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    MY              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    OUR             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FUNCTION        reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ESCALAR         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    IF              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LOOP            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FOR             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    WHILE           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ABRE_CHAVE      reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    BREAK           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    EXIT            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LAST            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEXT            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    REDO            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    RETURN          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    CONSTANT        reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STATE           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    IMPORT          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEED            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    REQUIRE         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    USE             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    PUSH            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    UNSHIFT         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    SPLICE          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    INT             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STR             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NOT             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEGAC           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ADC_DP          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    DECREMENTO      reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LPAREN          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ID              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    INTEGER         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FLOAT           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STRING          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    BOOLEAN         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LIST            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    $end            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FECHA_CHAVE     reduce using rule 134 (declaracoes_para_funcoes -> declaracao_de_expressao .)


state 16

    (135) declaracoes_para_funcoes -> declaracao_bloco .

    MULTI           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    ONLY            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    SAY             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    COMMENT         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    MY              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    OUR             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    FUNCTION        reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    ESCALAR         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    IF              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    LOOP            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    FOR             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    WHILE           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    ABRE_CHAVE      reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    BREAK           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    EXIT            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    LAST            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEXT            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    REDO            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    RETURN          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    CONSTANT        reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    STATE           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    IMPORT          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEED            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    REQUIRE         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    USE             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    PUSH            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    UNSHIFT         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    SPLICE          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    INT             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    STR             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    NOT             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEGAC           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    ADC_DP          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    DECREMENTO      reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    LPAREN          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    ID              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    INTEGER         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    FLOAT           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    STRING          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    BOOLEAN         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    LIST            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    $end            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)
    FECHA_CHAVE     reduce using rule 135 (declaracoes_para_funcoes -> declaracao_bloco .)


state 17

    (136) declaracoes_para_funcoes -> declaracao_escalar_MY .

    MULTI           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ONLY            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    SAY             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    COMMENT         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    MY              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    OUR             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FUNCTION        reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ESCALAR         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    IF              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LOOP            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FOR             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    WHILE           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ABRE_CHAVE      reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    BREAK           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    EXIT            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LAST            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEXT            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    REDO            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    RETURN          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    CONSTANT        reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STATE           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    IMPORT          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEED            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    REQUIRE         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    USE             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    PUSH            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    UNSHIFT         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    SPLICE          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    INT             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STR             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NOT             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEGAC           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ADC_DP          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    DECREMENTO      reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LPAREN          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ID              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    INTEGER         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FLOAT           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STRING          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    BOOLEAN         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LIST            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    $end            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FECHA_CHAVE     reduce using rule 136 (declaracoes_para_funcoes -> declaracao_escalar_MY .)


state 18

    (137) declaracoes_para_funcoes -> declaracao_escalar_OUR .

    MULTI           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ONLY            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    SAY             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    COMMENT         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    MY              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    OUR             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FUNCTION        reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ESCALAR         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    IF              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LOOP            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FOR             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    WHILE           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ABRE_CHAVE      reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    BREAK           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    EXIT            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LAST            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEXT            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    REDO            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    RETURN          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    CONSTANT        reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STATE           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    IMPORT          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEED            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    REQUIRE         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    USE             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    PUSH            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    UNSHIFT         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    SPLICE          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    INT             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STR             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NOT             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEGAC           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ADC_DP          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    DECREMENTO      reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LPAREN          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ID              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    INTEGER         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FLOAT           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STRING          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    BOOLEAN         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LIST            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    $end            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FECHA_CHAVE     reduce using rule 137 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)


state 19

    (138) declaracoes_para_funcoes -> declaracao_lista .

    MULTI           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    ONLY            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    SAY             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    COMMENT         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    MY              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    OUR             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    FUNCTION        reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    ESCALAR         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    IF              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    LOOP            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    FOR             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    WHILE           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    ABRE_CHAVE      reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    BREAK           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    EXIT            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    LAST            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    NEXT            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    REDO            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    RETURN          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    CONSTANT        reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    STATE           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    IMPORT          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    NEED            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    REQUIRE         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    USE             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    PUSH            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    UNSHIFT         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    SPLICE          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    INT             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    STR             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    NOT             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    NEGAC           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    ADC_DP          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    DECREMENTO      reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    LPAREN          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    ID              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    INTEGER         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    FLOAT           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    STRING          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    BOOLEAN         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    LIST            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    $end            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)
    FECHA_CHAVE     reduce using rule 138 (declaracoes_para_funcoes -> declaracao_lista .)


state 20

    (139) declaracoes_para_funcoes -> declaracao_lista_MY .

    MULTI           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ONLY            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    SAY             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    COMMENT         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    MY              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    OUR             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FUNCTION        reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ESCALAR         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    IF              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LOOP            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FOR             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    WHILE           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ABRE_CHAVE      reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    BREAK           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    EXIT            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LAST            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEXT            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    REDO            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    RETURN          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    CONSTANT        reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STATE           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    IMPORT          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEED            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    REQUIRE         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    USE             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    PUSH            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    UNSHIFT         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    SPLICE          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    INT             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STR             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NOT             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEGAC           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ADC_DP          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    DECREMENTO      reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LPAREN          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ID              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    INTEGER         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FLOAT           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STRING          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    BOOLEAN         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LIST            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    $end            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FECHA_CHAVE     reduce using rule 139 (declaracoes_para_funcoes -> declaracao_lista_MY .)


state 21

    (140) declaracoes_para_funcoes -> declaracao_lista_OUR .

    MULTI           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ONLY            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    SAY             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    COMMENT         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    MY              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    OUR             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FUNCTION        reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ESCALAR         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    IF              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LOOP            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FOR             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    WHILE           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ABRE_CHAVE      reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    BREAK           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    EXIT            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LAST            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEXT            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    REDO            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    RETURN          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    CONSTANT        reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STATE           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    IMPORT          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEED            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    REQUIRE         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    USE             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    PUSH            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    UNSHIFT         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    SPLICE          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    INT             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STR             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NOT             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEGAC           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ADC_DP          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    DECREMENTO      reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LPAREN          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ID              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    INTEGER         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FLOAT           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STRING          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    BOOLEAN         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LIST            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    $end            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FECHA_CHAVE     reduce using rule 140 (declaracoes_para_funcoes -> declaracao_lista_OUR .)


state 22

    (141) declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .

    MULTI           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ONLY            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    SAY             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    COMMENT         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    MY              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    OUR             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FUNCTION        reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ESCALAR         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    IF              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LOOP            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FOR             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    WHILE           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ABRE_CHAVE      reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    BREAK           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    EXIT            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LAST            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEXT            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    REDO            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    RETURN          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    CONSTANT        reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    STATE           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    IMPORT          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEED            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    REQUIRE         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    USE             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    PUSH            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    UNSHIFT         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    SPLICE          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    INT             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    STR             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NOT             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEGAC           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ADC_DP          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    DECREMENTO      reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LPAREN          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ID              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    INTEGER         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FLOAT           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    STRING          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    BOOLEAN         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LIST            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    $end            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FECHA_CHAVE     reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)


state 23

    (142) declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .

    MULTI           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ONLY            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    SAY             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    COMMENT         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    MY              reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    OUR             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FUNCTION        reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ESCALAR         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    IF              reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LOOP            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FOR             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    WHILE           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ABRE_CHAVE      reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    BREAK           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    EXIT            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LAST            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEXT            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    REDO            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    RETURN          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    CONSTANT        reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    STATE           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    IMPORT          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEED            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    REQUIRE         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    USE             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    PUSH            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    UNSHIFT         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    SPLICE          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    INT             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    STR             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NOT             reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEGAC           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ADC_DP          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    DECREMENTO      reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LPAREN          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ID              reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    INTEGER         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FLOAT           reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    STRING          reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    BOOLEAN         reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LIST            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    $end            reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FECHA_CHAVE     reduce using rule 142 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)


state 24

    (143) declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .

    MULTI           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ONLY            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    SAY             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    COMMENT         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    MY              reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    OUR             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FUNCTION        reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ESCALAR         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    IF              reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LOOP            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FOR             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    WHILE           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ABRE_CHAVE      reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    BREAK           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    EXIT            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LAST            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEXT            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    REDO            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    RETURN          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    CONSTANT        reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    STATE           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    IMPORT          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEED            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    REQUIRE         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    USE             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    PUSH            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    UNSHIFT         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    SPLICE          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    INT             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    STR             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NOT             reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEGAC           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ADC_DP          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    DECREMENTO      reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LPAREN          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ID              reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    INTEGER         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FLOAT           reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    STRING          reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    BOOLEAN         reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LIST            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    $end            reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FECHA_CHAVE     reduce using rule 143 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)


state 25

    (144) declaracoes_para_funcoes -> declaracao_de_controle_de_lista .

    MULTI           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ONLY            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    SAY             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    COMMENT         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    MY              reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    OUR             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FUNCTION        reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ESCALAR         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    IF              reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LOOP            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FOR             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    WHILE           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ABRE_CHAVE      reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    BREAK           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    EXIT            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LAST            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEXT            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    REDO            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    RETURN          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    CONSTANT        reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    STATE           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    IMPORT          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEED            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    REQUIRE         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    USE             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    PUSH            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    UNSHIFT         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    SPLICE          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    INT             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    STR             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NOT             reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEGAC           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ADC_DP          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    DECREMENTO      reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LPAREN          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ID              reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    INTEGER         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FLOAT           reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    STRING          reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    BOOLEAN         reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LIST            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    $end            reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FECHA_CHAVE     reduce using rule 144 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)


state 26

    (180) declaracao_multi -> MULTI . ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> MULTI . ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ID              shift and go to state 143


state 27

    (112) chamada_funcao -> ID . LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 144


state 28

    (71) parenteses -> LPAREN . exp_2 RPAREN
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 145
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 29

    (122) bloco -> ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes              shift and go to state 147
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 30

    (182) declaracao_only -> ONLY . ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> ONLY . ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ID              shift and go to state 148


state 31

    (147) declaracao_de_funcao -> funcao_com_params .

    MULTI           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    ONLY            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    SAY             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    COMMENT         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    MY              reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    OUR             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    FUNCTION        reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    ESCALAR         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    IF              reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    LOOP            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    FOR             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    WHILE           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    ABRE_CHAVE      reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    BREAK           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    EXIT            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    LAST            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    NEXT            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    REDO            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    RETURN          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    CONSTANT        reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    STATE           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    IMPORT          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    NEED            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    REQUIRE         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    USE             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    PUSH            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    UNSHIFT         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    SPLICE          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    INT             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    STR             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    NOT             reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    NEGAC           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    ADC_DP          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    DECREMENTO      reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    LPAREN          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    ID              reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    INTEGER         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    FLOAT           reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    STRING          reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    BOOLEAN         reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    LIST            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    $end            reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)
    FECHA_CHAVE     reduce using rule 147 (declaracao_de_funcao -> funcao_com_params .)


state 32

    (148) declaracao_de_funcao -> funcao_sem_params .

    MULTI           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    ONLY            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    SAY             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    COMMENT         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    MY              reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    OUR             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    FUNCTION        reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    ESCALAR         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    IF              reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    LOOP            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    FOR             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    WHILE           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    ABRE_CHAVE      reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    BREAK           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    EXIT            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    LAST            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    NEXT            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    REDO            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    RETURN          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    CONSTANT        reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    STATE           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    IMPORT          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    NEED            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    REQUIRE         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    USE             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    PUSH            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    UNSHIFT         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    SPLICE          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    INT             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    STR             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    NOT             reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    NEGAC           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    ADC_DP          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    DECREMENTO      reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    LPAREN          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    ID              reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    INTEGER         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    FLOAT           reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    STRING          reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    BOOLEAN         reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    LIST            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    $end            reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)
    FECHA_CHAVE     reduce using rule 148 (declaracao_de_funcao -> funcao_sem_params .)


state 33

    (146) declaracao_de_atribuicao -> atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 149


state 34

    (104) say -> SAY . say_func PONTO_VIRGULA
    (105) say_func -> . exp_2
    (106) say_func -> . LIST
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    LIST            shift and go to state 152
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    say_func                       shift and go to state 150
    exp_2                          shift and go to state 151
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 35

    (145) comentario -> COMMENT .

    MULTI           reduce using rule 145 (comentario -> COMMENT .)
    ONLY            reduce using rule 145 (comentario -> COMMENT .)
    SAY             reduce using rule 145 (comentario -> COMMENT .)
    COMMENT         reduce using rule 145 (comentario -> COMMENT .)
    MY              reduce using rule 145 (comentario -> COMMENT .)
    OUR             reduce using rule 145 (comentario -> COMMENT .)
    FUNCTION        reduce using rule 145 (comentario -> COMMENT .)
    ESCALAR         reduce using rule 145 (comentario -> COMMENT .)
    IF              reduce using rule 145 (comentario -> COMMENT .)
    LOOP            reduce using rule 145 (comentario -> COMMENT .)
    FOR             reduce using rule 145 (comentario -> COMMENT .)
    WHILE           reduce using rule 145 (comentario -> COMMENT .)
    ABRE_CHAVE      reduce using rule 145 (comentario -> COMMENT .)
    BREAK           reduce using rule 145 (comentario -> COMMENT .)
    EXIT            reduce using rule 145 (comentario -> COMMENT .)
    LAST            reduce using rule 145 (comentario -> COMMENT .)
    NEXT            reduce using rule 145 (comentario -> COMMENT .)
    REDO            reduce using rule 145 (comentario -> COMMENT .)
    RETURN          reduce using rule 145 (comentario -> COMMENT .)
    CONSTANT        reduce using rule 145 (comentario -> COMMENT .)
    STATE           reduce using rule 145 (comentario -> COMMENT .)
    IMPORT          reduce using rule 145 (comentario -> COMMENT .)
    NEED            reduce using rule 145 (comentario -> COMMENT .)
    REQUIRE         reduce using rule 145 (comentario -> COMMENT .)
    USE             reduce using rule 145 (comentario -> COMMENT .)
    PUSH            reduce using rule 145 (comentario -> COMMENT .)
    UNSHIFT         reduce using rule 145 (comentario -> COMMENT .)
    SPLICE          reduce using rule 145 (comentario -> COMMENT .)
    INT             reduce using rule 145 (comentario -> COMMENT .)
    STR             reduce using rule 145 (comentario -> COMMENT .)
    NOT             reduce using rule 145 (comentario -> COMMENT .)
    NEGAC           reduce using rule 145 (comentario -> COMMENT .)
    ADC_DP          reduce using rule 145 (comentario -> COMMENT .)
    DECREMENTO      reduce using rule 145 (comentario -> COMMENT .)
    LPAREN          reduce using rule 145 (comentario -> COMMENT .)
    ID              reduce using rule 145 (comentario -> COMMENT .)
    INTEGER         reduce using rule 145 (comentario -> COMMENT .)
    FLOAT           reduce using rule 145 (comentario -> COMMENT .)
    STRING          reduce using rule 145 (comentario -> COMMENT .)
    BOOLEAN         reduce using rule 145 (comentario -> COMMENT .)
    LIST            reduce using rule 145 (comentario -> COMMENT .)
    $end            reduce using rule 145 (comentario -> COMMENT .)
    FECHA_CHAVE     reduce using rule 145 (comentario -> COMMENT .)


state 36

    (149) declaracao_de_condicional -> condicional .

    MULTI           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    ONLY            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    SAY             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    COMMENT         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    MY              reduce using rule 149 (declaracao_de_condicional -> condicional .)
    OUR             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    FUNCTION        reduce using rule 149 (declaracao_de_condicional -> condicional .)
    ESCALAR         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    IF              reduce using rule 149 (declaracao_de_condicional -> condicional .)
    LOOP            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    FOR             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    WHILE           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    ABRE_CHAVE      reduce using rule 149 (declaracao_de_condicional -> condicional .)
    BREAK           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    EXIT            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    LAST            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    NEXT            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    REDO            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    RETURN          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    CONSTANT        reduce using rule 149 (declaracao_de_condicional -> condicional .)
    STATE           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    IMPORT          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    NEED            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    REQUIRE         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    USE             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    PUSH            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    UNSHIFT         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    SPLICE          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    INT             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    STR             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    NOT             reduce using rule 149 (declaracao_de_condicional -> condicional .)
    NEGAC           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    ADC_DP          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    DECREMENTO      reduce using rule 149 (declaracao_de_condicional -> condicional .)
    LPAREN          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    ID              reduce using rule 149 (declaracao_de_condicional -> condicional .)
    INTEGER         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    FLOAT           reduce using rule 149 (declaracao_de_condicional -> condicional .)
    STRING          reduce using rule 149 (declaracao_de_condicional -> condicional .)
    BOOLEAN         reduce using rule 149 (declaracao_de_condicional -> condicional .)
    LIST            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    $end            reduce using rule 149 (declaracao_de_condicional -> condicional .)
    FECHA_CHAVE     reduce using rule 149 (declaracao_de_condicional -> condicional .)


state 37

    (150) declaracao_loop -> loop .

    MULTI           reduce using rule 150 (declaracao_loop -> loop .)
    ONLY            reduce using rule 150 (declaracao_loop -> loop .)
    SAY             reduce using rule 150 (declaracao_loop -> loop .)
    COMMENT         reduce using rule 150 (declaracao_loop -> loop .)
    MY              reduce using rule 150 (declaracao_loop -> loop .)
    OUR             reduce using rule 150 (declaracao_loop -> loop .)
    FUNCTION        reduce using rule 150 (declaracao_loop -> loop .)
    ESCALAR         reduce using rule 150 (declaracao_loop -> loop .)
    IF              reduce using rule 150 (declaracao_loop -> loop .)
    LOOP            reduce using rule 150 (declaracao_loop -> loop .)
    FOR             reduce using rule 150 (declaracao_loop -> loop .)
    WHILE           reduce using rule 150 (declaracao_loop -> loop .)
    ABRE_CHAVE      reduce using rule 150 (declaracao_loop -> loop .)
    BREAK           reduce using rule 150 (declaracao_loop -> loop .)
    EXIT            reduce using rule 150 (declaracao_loop -> loop .)
    LAST            reduce using rule 150 (declaracao_loop -> loop .)
    NEXT            reduce using rule 150 (declaracao_loop -> loop .)
    REDO            reduce using rule 150 (declaracao_loop -> loop .)
    RETURN          reduce using rule 150 (declaracao_loop -> loop .)
    CONSTANT        reduce using rule 150 (declaracao_loop -> loop .)
    STATE           reduce using rule 150 (declaracao_loop -> loop .)
    IMPORT          reduce using rule 150 (declaracao_loop -> loop .)
    NEED            reduce using rule 150 (declaracao_loop -> loop .)
    REQUIRE         reduce using rule 150 (declaracao_loop -> loop .)
    USE             reduce using rule 150 (declaracao_loop -> loop .)
    PUSH            reduce using rule 150 (declaracao_loop -> loop .)
    UNSHIFT         reduce using rule 150 (declaracao_loop -> loop .)
    SPLICE          reduce using rule 150 (declaracao_loop -> loop .)
    INT             reduce using rule 150 (declaracao_loop -> loop .)
    STR             reduce using rule 150 (declaracao_loop -> loop .)
    NOT             reduce using rule 150 (declaracao_loop -> loop .)
    NEGAC           reduce using rule 150 (declaracao_loop -> loop .)
    ADC_DP          reduce using rule 150 (declaracao_loop -> loop .)
    DECREMENTO      reduce using rule 150 (declaracao_loop -> loop .)
    LPAREN          reduce using rule 150 (declaracao_loop -> loop .)
    ID              reduce using rule 150 (declaracao_loop -> loop .)
    INTEGER         reduce using rule 150 (declaracao_loop -> loop .)
    FLOAT           reduce using rule 150 (declaracao_loop -> loop .)
    STRING          reduce using rule 150 (declaracao_loop -> loop .)
    BOOLEAN         reduce using rule 150 (declaracao_loop -> loop .)
    LIST            reduce using rule 150 (declaracao_loop -> loop .)
    $end            reduce using rule 150 (declaracao_loop -> loop .)
    FECHA_CHAVE     reduce using rule 150 (declaracao_loop -> loop .)


state 38

    (151) declaracao_loop -> loop_for .

    MULTI           reduce using rule 151 (declaracao_loop -> loop_for .)
    ONLY            reduce using rule 151 (declaracao_loop -> loop_for .)
    SAY             reduce using rule 151 (declaracao_loop -> loop_for .)
    COMMENT         reduce using rule 151 (declaracao_loop -> loop_for .)
    MY              reduce using rule 151 (declaracao_loop -> loop_for .)
    OUR             reduce using rule 151 (declaracao_loop -> loop_for .)
    FUNCTION        reduce using rule 151 (declaracao_loop -> loop_for .)
    ESCALAR         reduce using rule 151 (declaracao_loop -> loop_for .)
    IF              reduce using rule 151 (declaracao_loop -> loop_for .)
    LOOP            reduce using rule 151 (declaracao_loop -> loop_for .)
    FOR             reduce using rule 151 (declaracao_loop -> loop_for .)
    WHILE           reduce using rule 151 (declaracao_loop -> loop_for .)
    ABRE_CHAVE      reduce using rule 151 (declaracao_loop -> loop_for .)
    BREAK           reduce using rule 151 (declaracao_loop -> loop_for .)
    EXIT            reduce using rule 151 (declaracao_loop -> loop_for .)
    LAST            reduce using rule 151 (declaracao_loop -> loop_for .)
    NEXT            reduce using rule 151 (declaracao_loop -> loop_for .)
    REDO            reduce using rule 151 (declaracao_loop -> loop_for .)
    RETURN          reduce using rule 151 (declaracao_loop -> loop_for .)
    CONSTANT        reduce using rule 151 (declaracao_loop -> loop_for .)
    STATE           reduce using rule 151 (declaracao_loop -> loop_for .)
    IMPORT          reduce using rule 151 (declaracao_loop -> loop_for .)
    NEED            reduce using rule 151 (declaracao_loop -> loop_for .)
    REQUIRE         reduce using rule 151 (declaracao_loop -> loop_for .)
    USE             reduce using rule 151 (declaracao_loop -> loop_for .)
    PUSH            reduce using rule 151 (declaracao_loop -> loop_for .)
    UNSHIFT         reduce using rule 151 (declaracao_loop -> loop_for .)
    SPLICE          reduce using rule 151 (declaracao_loop -> loop_for .)
    INT             reduce using rule 151 (declaracao_loop -> loop_for .)
    STR             reduce using rule 151 (declaracao_loop -> loop_for .)
    NOT             reduce using rule 151 (declaracao_loop -> loop_for .)
    NEGAC           reduce using rule 151 (declaracao_loop -> loop_for .)
    ADC_DP          reduce using rule 151 (declaracao_loop -> loop_for .)
    DECREMENTO      reduce using rule 151 (declaracao_loop -> loop_for .)
    LPAREN          reduce using rule 151 (declaracao_loop -> loop_for .)
    ID              reduce using rule 151 (declaracao_loop -> loop_for .)
    INTEGER         reduce using rule 151 (declaracao_loop -> loop_for .)
    FLOAT           reduce using rule 151 (declaracao_loop -> loop_for .)
    STRING          reduce using rule 151 (declaracao_loop -> loop_for .)
    BOOLEAN         reduce using rule 151 (declaracao_loop -> loop_for .)
    LIST            reduce using rule 151 (declaracao_loop -> loop_for .)
    $end            reduce using rule 151 (declaracao_loop -> loop_for .)
    FECHA_CHAVE     reduce using rule 151 (declaracao_loop -> loop_for .)


state 39

    (152) declaracao_loop -> loop_for_com_lista .

    MULTI           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    ONLY            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    SAY             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    COMMENT         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    MY              reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    OUR             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    FUNCTION        reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    ESCALAR         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    IF              reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    LOOP            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    FOR             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    WHILE           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    ABRE_CHAVE      reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    BREAK           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    EXIT            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    LAST            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    NEXT            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    REDO            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    RETURN          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    CONSTANT        reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    STATE           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    IMPORT          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    NEED            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    REQUIRE         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    USE             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    PUSH            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    UNSHIFT         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    SPLICE          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    INT             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    STR             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    NOT             reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    NEGAC           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    ADC_DP          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    DECREMENTO      reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    LPAREN          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    ID              reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    INTEGER         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    FLOAT           reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    STRING          reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    BOOLEAN         reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    LIST            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    $end            reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)
    FECHA_CHAVE     reduce using rule 152 (declaracao_loop -> loop_for_com_lista .)


state 40

    (153) declaracao_loop -> loop_while .

    MULTI           reduce using rule 153 (declaracao_loop -> loop_while .)
    ONLY            reduce using rule 153 (declaracao_loop -> loop_while .)
    SAY             reduce using rule 153 (declaracao_loop -> loop_while .)
    COMMENT         reduce using rule 153 (declaracao_loop -> loop_while .)
    MY              reduce using rule 153 (declaracao_loop -> loop_while .)
    OUR             reduce using rule 153 (declaracao_loop -> loop_while .)
    FUNCTION        reduce using rule 153 (declaracao_loop -> loop_while .)
    ESCALAR         reduce using rule 153 (declaracao_loop -> loop_while .)
    IF              reduce using rule 153 (declaracao_loop -> loop_while .)
    LOOP            reduce using rule 153 (declaracao_loop -> loop_while .)
    FOR             reduce using rule 153 (declaracao_loop -> loop_while .)
    WHILE           reduce using rule 153 (declaracao_loop -> loop_while .)
    ABRE_CHAVE      reduce using rule 153 (declaracao_loop -> loop_while .)
    BREAK           reduce using rule 153 (declaracao_loop -> loop_while .)
    EXIT            reduce using rule 153 (declaracao_loop -> loop_while .)
    LAST            reduce using rule 153 (declaracao_loop -> loop_while .)
    NEXT            reduce using rule 153 (declaracao_loop -> loop_while .)
    REDO            reduce using rule 153 (declaracao_loop -> loop_while .)
    RETURN          reduce using rule 153 (declaracao_loop -> loop_while .)
    CONSTANT        reduce using rule 153 (declaracao_loop -> loop_while .)
    STATE           reduce using rule 153 (declaracao_loop -> loop_while .)
    IMPORT          reduce using rule 153 (declaracao_loop -> loop_while .)
    NEED            reduce using rule 153 (declaracao_loop -> loop_while .)
    REQUIRE         reduce using rule 153 (declaracao_loop -> loop_while .)
    USE             reduce using rule 153 (declaracao_loop -> loop_while .)
    PUSH            reduce using rule 153 (declaracao_loop -> loop_while .)
    UNSHIFT         reduce using rule 153 (declaracao_loop -> loop_while .)
    SPLICE          reduce using rule 153 (declaracao_loop -> loop_while .)
    INT             reduce using rule 153 (declaracao_loop -> loop_while .)
    STR             reduce using rule 153 (declaracao_loop -> loop_while .)
    NOT             reduce using rule 153 (declaracao_loop -> loop_while .)
    NEGAC           reduce using rule 153 (declaracao_loop -> loop_while .)
    ADC_DP          reduce using rule 153 (declaracao_loop -> loop_while .)
    DECREMENTO      reduce using rule 153 (declaracao_loop -> loop_while .)
    LPAREN          reduce using rule 153 (declaracao_loop -> loop_while .)
    ID              reduce using rule 153 (declaracao_loop -> loop_while .)
    INTEGER         reduce using rule 153 (declaracao_loop -> loop_while .)
    FLOAT           reduce using rule 153 (declaracao_loop -> loop_while .)
    STRING          reduce using rule 153 (declaracao_loop -> loop_while .)
    BOOLEAN         reduce using rule 153 (declaracao_loop -> loop_while .)
    LIST            reduce using rule 153 (declaracao_loop -> loop_while .)
    $end            reduce using rule 153 (declaracao_loop -> loop_while .)
    FECHA_CHAVE     reduce using rule 153 (declaracao_loop -> loop_while .)


state 41

    (154) declaracao_loop -> loop_sem_condicao .

    MULTI           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    ONLY            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    SAY             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    COMMENT         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    MY              reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    OUR             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    FUNCTION        reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    ESCALAR         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    IF              reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    LOOP            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    FOR             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    WHILE           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    ABRE_CHAVE      reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    BREAK           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    EXIT            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    LAST            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    NEXT            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    REDO            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    RETURN          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    CONSTANT        reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    STATE           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    IMPORT          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    NEED            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    REQUIRE         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    USE             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    PUSH            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    UNSHIFT         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    SPLICE          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    INT             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    STR             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    NOT             reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    NEGAC           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    ADC_DP          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    DECREMENTO      reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    LPAREN          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    ID              reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    INTEGER         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    FLOAT           reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    STRING          reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    BOOLEAN         reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    LIST            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    $end            reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)
    FECHA_CHAVE     reduce using rule 154 (declaracao_loop -> loop_sem_condicao .)


state 42

    (155) declaracao_de_expressao -> exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 153
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 43

    (156) declaracao_bloco -> bloco .

    MULTI           reduce using rule 156 (declaracao_bloco -> bloco .)
    ONLY            reduce using rule 156 (declaracao_bloco -> bloco .)
    SAY             reduce using rule 156 (declaracao_bloco -> bloco .)
    COMMENT         reduce using rule 156 (declaracao_bloco -> bloco .)
    MY              reduce using rule 156 (declaracao_bloco -> bloco .)
    OUR             reduce using rule 156 (declaracao_bloco -> bloco .)
    FUNCTION        reduce using rule 156 (declaracao_bloco -> bloco .)
    ESCALAR         reduce using rule 156 (declaracao_bloco -> bloco .)
    IF              reduce using rule 156 (declaracao_bloco -> bloco .)
    LOOP            reduce using rule 156 (declaracao_bloco -> bloco .)
    FOR             reduce using rule 156 (declaracao_bloco -> bloco .)
    WHILE           reduce using rule 156 (declaracao_bloco -> bloco .)
    ABRE_CHAVE      reduce using rule 156 (declaracao_bloco -> bloco .)
    BREAK           reduce using rule 156 (declaracao_bloco -> bloco .)
    EXIT            reduce using rule 156 (declaracao_bloco -> bloco .)
    LAST            reduce using rule 156 (declaracao_bloco -> bloco .)
    NEXT            reduce using rule 156 (declaracao_bloco -> bloco .)
    REDO            reduce using rule 156 (declaracao_bloco -> bloco .)
    RETURN          reduce using rule 156 (declaracao_bloco -> bloco .)
    CONSTANT        reduce using rule 156 (declaracao_bloco -> bloco .)
    STATE           reduce using rule 156 (declaracao_bloco -> bloco .)
    IMPORT          reduce using rule 156 (declaracao_bloco -> bloco .)
    NEED            reduce using rule 156 (declaracao_bloco -> bloco .)
    REQUIRE         reduce using rule 156 (declaracao_bloco -> bloco .)
    USE             reduce using rule 156 (declaracao_bloco -> bloco .)
    PUSH            reduce using rule 156 (declaracao_bloco -> bloco .)
    UNSHIFT         reduce using rule 156 (declaracao_bloco -> bloco .)
    SPLICE          reduce using rule 156 (declaracao_bloco -> bloco .)
    INT             reduce using rule 156 (declaracao_bloco -> bloco .)
    STR             reduce using rule 156 (declaracao_bloco -> bloco .)
    NOT             reduce using rule 156 (declaracao_bloco -> bloco .)
    NEGAC           reduce using rule 156 (declaracao_bloco -> bloco .)
    ADC_DP          reduce using rule 156 (declaracao_bloco -> bloco .)
    DECREMENTO      reduce using rule 156 (declaracao_bloco -> bloco .)
    LPAREN          reduce using rule 156 (declaracao_bloco -> bloco .)
    ID              reduce using rule 156 (declaracao_bloco -> bloco .)
    INTEGER         reduce using rule 156 (declaracao_bloco -> bloco .)
    FLOAT           reduce using rule 156 (declaracao_bloco -> bloco .)
    STRING          reduce using rule 156 (declaracao_bloco -> bloco .)
    BOOLEAN         reduce using rule 156 (declaracao_bloco -> bloco .)
    LIST            reduce using rule 156 (declaracao_bloco -> bloco .)
    $end            reduce using rule 156 (declaracao_bloco -> bloco .)
    FECHA_CHAVE     reduce using rule 156 (declaracao_bloco -> bloco .)


state 44

    (91) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (94) declaracao_lista_MY -> MY . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)
    LIST            reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 156
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 45

    (93) declaracao_lista -> tipo_opicional . LIST IGUAL lista_valores PONTO_VIRGULA

    LIST            shift and go to state 157


state 46

    (111) atribuicao -> ESCALAR . IGUAL exp_2
    (90) escalar -> ESCALAR .

    IGUAL           shift and go to state 158
    ADC_DP          reduce using rule 90 (escalar -> ESCALAR .)
    DECREMENTO      reduce using rule 90 (escalar -> ESCALAR .)
    POW             reduce using rule 90 (escalar -> ESCALAR .)
    MULT            reduce using rule 90 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 90 (escalar -> ESCALAR .)
    DIV             reduce using rule 90 (escalar -> ESCALAR .)
    DIVI            reduce using rule 90 (escalar -> ESCALAR .)
    MOD             reduce using rule 90 (escalar -> ESCALAR .)
    LCM             reduce using rule 90 (escalar -> ESCALAR .)
    GCD             reduce using rule 90 (escalar -> ESCALAR .)
    ADC             reduce using rule 90 (escalar -> ESCALAR .)
    SUB             reduce using rule 90 (escalar -> ESCALAR .)
    CONC            reduce using rule 90 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 90 (escalar -> ESCALAR .)
    DIF             reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 90 (escalar -> ESCALAR .)
    MENOR           reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 90 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 90 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 90 (escalar -> ESCALAR .)
    AND_S           reduce using rule 90 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 90 (escalar -> ESCALAR .)
    OR_S            reduce using rule 90 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 90 (escalar -> ESCALAR .)


state 47

    (92) declaracao_escalar_OUR -> OUR . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (95) declaracao_lista_OUR -> OUR . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)
    LIST            reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 159
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 48

    (157) declaracao_de_controle_de_fluxo -> declaracao_break .

    MULTI           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ONLY            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    SAY             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    COMMENT         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    MY              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    OUR             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FUNCTION        reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ESCALAR         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    IF              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LOOP            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FOR             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    WHILE           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ABRE_CHAVE      reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    BREAK           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    EXIT            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LAST            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEXT            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    REDO            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    RETURN          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    CONSTANT        reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    STATE           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    IMPORT          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEED            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    REQUIRE         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    USE             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    PUSH            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    UNSHIFT         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    SPLICE          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    INT             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    STR             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NOT             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEGAC           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ADC_DP          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    DECREMENTO      reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LPAREN          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ID              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    INTEGER         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FLOAT           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    STRING          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    BOOLEAN         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LIST            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    $end            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FECHA_CHAVE     reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_break .)


state 49

    (158) declaracao_de_controle_de_fluxo -> declaracao_exit .

    MULTI           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ONLY            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    SAY             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    COMMENT         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    MY              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    OUR             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FUNCTION        reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ESCALAR         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    IF              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LOOP            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FOR             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    WHILE           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ABRE_CHAVE      reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    BREAK           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    EXIT            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LAST            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEXT            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    REDO            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    RETURN          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    CONSTANT        reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    STATE           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    IMPORT          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEED            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    REQUIRE         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    USE             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    PUSH            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    UNSHIFT         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    SPLICE          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    INT             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    STR             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NOT             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEGAC           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ADC_DP          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    DECREMENTO      reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LPAREN          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ID              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    INTEGER         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FLOAT           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    STRING          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    BOOLEAN         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LIST            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    $end            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FECHA_CHAVE     reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_exit .)


state 50

    (159) declaracao_de_controle_de_fluxo -> declaracao_last .

    MULTI           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ONLY            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    SAY             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    COMMENT         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    MY              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    OUR             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FUNCTION        reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ESCALAR         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    IF              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LOOP            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FOR             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    WHILE           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ABRE_CHAVE      reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    BREAK           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    EXIT            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LAST            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEXT            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    REDO            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    RETURN          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    CONSTANT        reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    STATE           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    IMPORT          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEED            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    REQUIRE         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    USE             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    PUSH            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    UNSHIFT         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    SPLICE          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    INT             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    STR             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NOT             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEGAC           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ADC_DP          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    DECREMENTO      reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LPAREN          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ID              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    INTEGER         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FLOAT           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    STRING          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    BOOLEAN         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LIST            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    $end            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FECHA_CHAVE     reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_last .)


state 51

    (160) declaracao_de_controle_de_fluxo -> declaracao_next .

    MULTI           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ONLY            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    SAY             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    COMMENT         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    MY              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    OUR             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FUNCTION        reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ESCALAR         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    IF              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LOOP            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FOR             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    WHILE           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ABRE_CHAVE      reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    BREAK           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    EXIT            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LAST            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEXT            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    REDO            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    RETURN          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    CONSTANT        reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    STATE           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    IMPORT          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEED            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    REQUIRE         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    USE             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    PUSH            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    UNSHIFT         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    SPLICE          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    INT             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    STR             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NOT             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEGAC           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ADC_DP          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    DECREMENTO      reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LPAREN          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ID              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    INTEGER         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FLOAT           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    STRING          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    BOOLEAN         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LIST            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    $end            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FECHA_CHAVE     reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_next .)


state 52

    (161) declaracao_de_controle_de_fluxo -> declaracao_redo .

    MULTI           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ONLY            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    SAY             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    COMMENT         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    MY              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    OUR             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FUNCTION        reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ESCALAR         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    IF              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LOOP            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FOR             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    WHILE           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ABRE_CHAVE      reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    BREAK           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    EXIT            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LAST            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEXT            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    REDO            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    RETURN          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    CONSTANT        reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    STATE           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    IMPORT          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEED            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    REQUIRE         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    USE             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    PUSH            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    UNSHIFT         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    SPLICE          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    INT             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    STR             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NOT             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEGAC           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ADC_DP          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    DECREMENTO      reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LPAREN          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ID              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    INTEGER         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FLOAT           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    STRING          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    BOOLEAN         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LIST            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    $end            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FECHA_CHAVE     reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_redo .)


state 53

    (162) declaracao_de_controle_de_fluxo -> declaracao_return .

    MULTI           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ONLY            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    SAY             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    COMMENT         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    MY              reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    OUR             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FUNCTION        reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ESCALAR         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    IF              reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LOOP            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FOR             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    WHILE           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ABRE_CHAVE      reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    BREAK           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    EXIT            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LAST            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEXT            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    REDO            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    RETURN          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    CONSTANT        reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    STATE           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    IMPORT          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEED            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    REQUIRE         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    USE             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    PUSH            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    UNSHIFT         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    SPLICE          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    INT             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    STR             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NOT             reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEGAC           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ADC_DP          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    DECREMENTO      reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LPAREN          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ID              reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    INTEGER         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FLOAT           reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    STRING          reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    BOOLEAN         reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LIST            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    $end            reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FECHA_CHAVE     reduce using rule 162 (declaracao_de_controle_de_fluxo -> declaracao_return .)


state 54

    (163) declaracao_de_controle_de_escopo -> declaracao_constant .

    MULTI           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ONLY            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    SAY             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    COMMENT         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    MY              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    OUR             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FUNCTION        reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ESCALAR         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    IF              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LOOP            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FOR             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    WHILE           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ABRE_CHAVE      reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    BREAK           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    EXIT            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LAST            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEXT            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    REDO            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    RETURN          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    CONSTANT        reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    STATE           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    IMPORT          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEED            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    REQUIRE         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    USE             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    PUSH            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    UNSHIFT         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    SPLICE          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    INT             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    STR             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NOT             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEGAC           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ADC_DP          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    DECREMENTO      reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LPAREN          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ID              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    INTEGER         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FLOAT           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    STRING          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    BOOLEAN         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LIST            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    $end            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FECHA_CHAVE     reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_constant .)


state 55

    (164) declaracao_de_controle_de_escopo -> declaracao_state .

    MULTI           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ONLY            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    SAY             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    COMMENT         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    MY              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    OUR             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FUNCTION        reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ESCALAR         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    IF              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LOOP            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FOR             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    WHILE           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ABRE_CHAVE      reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    BREAK           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    EXIT            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LAST            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEXT            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    REDO            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    RETURN          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    CONSTANT        reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    STATE           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    IMPORT          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEED            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    REQUIRE         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    USE             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    PUSH            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    UNSHIFT         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    SPLICE          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    INT             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    STR             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NOT             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEGAC           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ADC_DP          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    DECREMENTO      reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LPAREN          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ID              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    INTEGER         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FLOAT           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    STRING          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    BOOLEAN         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LIST            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    $end            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FECHA_CHAVE     reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_state .)


state 56

    (165) declaracao_de_controle_de_modularizacao -> import .

    MULTI           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    ONLY            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    SAY             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    COMMENT         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    MY              reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    OUR             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    FUNCTION        reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    ESCALAR         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    IF              reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    LOOP            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    FOR             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    WHILE           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    ABRE_CHAVE      reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    BREAK           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    EXIT            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    LAST            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    NEXT            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    REDO            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    RETURN          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    CONSTANT        reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    STATE           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    IMPORT          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    NEED            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    REQUIRE         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    USE             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    PUSH            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    UNSHIFT         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    SPLICE          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    INT             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    STR             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    NOT             reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    NEGAC           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    ADC_DP          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    DECREMENTO      reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    LPAREN          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    ID              reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    INTEGER         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    FLOAT           reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    STRING          reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    BOOLEAN         reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    LIST            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    $end            reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)
    FECHA_CHAVE     reduce using rule 165 (declaracao_de_controle_de_modularizacao -> import .)


state 57

    (166) declaracao_de_controle_de_modularizacao -> need .

    MULTI           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    ONLY            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    SAY             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    COMMENT         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    MY              reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    OUR             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    FUNCTION        reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    ESCALAR         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    IF              reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    LOOP            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    FOR             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    WHILE           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    ABRE_CHAVE      reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    BREAK           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    EXIT            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    LAST            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    NEXT            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    REDO            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    RETURN          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    CONSTANT        reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    STATE           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    IMPORT          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    NEED            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    REQUIRE         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    USE             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    PUSH            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    UNSHIFT         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    SPLICE          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    INT             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    STR             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    NOT             reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    NEGAC           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    ADC_DP          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    DECREMENTO      reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    LPAREN          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    ID              reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    INTEGER         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    FLOAT           reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    STRING          reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    BOOLEAN         reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    LIST            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    $end            reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)
    FECHA_CHAVE     reduce using rule 166 (declaracao_de_controle_de_modularizacao -> need .)


state 58

    (167) declaracao_de_controle_de_modularizacao -> require .

    MULTI           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    ONLY            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    SAY             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    COMMENT         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    MY              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    OUR             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    FUNCTION        reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    ESCALAR         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    IF              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    LOOP            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    FOR             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    WHILE           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    ABRE_CHAVE      reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    BREAK           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    EXIT            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    LAST            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    NEXT            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    REDO            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    RETURN          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    CONSTANT        reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    STATE           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    IMPORT          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    NEED            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    REQUIRE         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    USE             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    PUSH            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    UNSHIFT         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    SPLICE          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    INT             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    STR             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    NOT             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    NEGAC           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    ADC_DP          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    DECREMENTO      reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    LPAREN          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    ID              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    INTEGER         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    FLOAT           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    STRING          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    BOOLEAN         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    LIST            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    $end            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)
    FECHA_CHAVE     reduce using rule 167 (declaracao_de_controle_de_modularizacao -> require .)


state 59

    (168) declaracao_de_controle_de_modularizacao -> use .

    MULTI           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    ONLY            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    SAY             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    COMMENT         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    MY              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    OUR             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    FUNCTION        reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    ESCALAR         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    IF              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    LOOP            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    FOR             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    WHILE           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    ABRE_CHAVE      reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    BREAK           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    EXIT            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    LAST            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    NEXT            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    REDO            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    RETURN          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    CONSTANT        reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    STATE           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    IMPORT          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    NEED            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    REQUIRE         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    USE             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    PUSH            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    UNSHIFT         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    SPLICE          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    INT             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    STR             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    NOT             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    NEGAC           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    ADC_DP          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    DECREMENTO      reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    LPAREN          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    ID              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    INTEGER         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    FLOAT           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    STRING          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    BOOLEAN         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    LIST            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    $end            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)
    FECHA_CHAVE     reduce using rule 168 (declaracao_de_controle_de_modularizacao -> use .)


state 60

    (169) declaracao_de_controle_de_lista -> push .

    MULTI           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    ONLY            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    SAY             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    COMMENT         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    MY              reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    OUR             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    FUNCTION        reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    ESCALAR         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    IF              reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    LOOP            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    FOR             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    WHILE           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    ABRE_CHAVE      reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    BREAK           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    EXIT            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    LAST            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    NEXT            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    REDO            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    RETURN          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    CONSTANT        reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    STATE           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    IMPORT          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    NEED            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    REQUIRE         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    USE             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    PUSH            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    UNSHIFT         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    SPLICE          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    INT             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    STR             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    NOT             reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    NEGAC           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    ADC_DP          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    DECREMENTO      reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    LPAREN          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    ID              reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    INTEGER         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    FLOAT           reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    STRING          reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    BOOLEAN         reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    LIST            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    $end            reduce using rule 169 (declaracao_de_controle_de_lista -> push .)
    FECHA_CHAVE     reduce using rule 169 (declaracao_de_controle_de_lista -> push .)


state 61

    (170) declaracao_de_controle_de_lista -> unshift .

    MULTI           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    ONLY            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    SAY             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    COMMENT         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    MY              reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    OUR             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    FUNCTION        reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    ESCALAR         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    IF              reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    LOOP            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    FOR             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    WHILE           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    ABRE_CHAVE      reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    BREAK           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    EXIT            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    LAST            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    NEXT            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    REDO            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    RETURN          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    CONSTANT        reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    STATE           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    IMPORT          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    NEED            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    REQUIRE         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    USE             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    PUSH            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    UNSHIFT         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    SPLICE          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    INT             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    STR             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    NOT             reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    NEGAC           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    ADC_DP          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    DECREMENTO      reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    LPAREN          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    ID              reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    INTEGER         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    FLOAT           reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    STRING          reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    BOOLEAN         reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    LIST            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    $end            reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)
    FECHA_CHAVE     reduce using rule 170 (declaracao_de_controle_de_lista -> unshift .)


state 62

    (171) declaracao_de_controle_de_lista -> splice .

    MULTI           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    ONLY            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    SAY             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    COMMENT         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    MY              reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    OUR             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    FUNCTION        reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    ESCALAR         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    IF              reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    LOOP            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    FOR             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    WHILE           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    ABRE_CHAVE      reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    BREAK           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    EXIT            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    LAST            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    NEXT            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    REDO            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    RETURN          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    CONSTANT        reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    STATE           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    IMPORT          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    NEED            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    REQUIRE         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    USE             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    PUSH            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    UNSHIFT         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    SPLICE          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    INT             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    STR             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    NOT             reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    NEGAC           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    ADC_DP          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    DECREMENTO      reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    LPAREN          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    ID              reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    INTEGER         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    FLOAT           reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    STRING          reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    BOOLEAN         reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    LIST            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    $end            reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)
    FECHA_CHAVE     reduce using rule 171 (declaracao_de_controle_de_lista -> splice .)


state 63

    (107) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ID              shift and go to state 160


state 64

    (116) condicional -> IF . exp_2 bloco
    (117) condicional -> IF . exp_2 bloco ELSE bloco
    (118) condicional -> IF . exp_2 bloco lista_elsif
    (119) condicional -> IF . exp_2 bloco lista_elsif ELSE bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 161
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 65

    (102) loop -> LOOP . LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> LOOP . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    LPAREN          shift and go to state 162
    ABRE_CHAVE      shift and go to state 163


state 66

    (99) loop_for -> FOR . inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> FOR . LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (86) inteiro -> . INTEGER

    LIST            shift and go to state 165
    INTEGER         shift and go to state 139

    inteiro                        shift and go to state 164

state 67

    (76) tipo -> inteiro .

    POW             reduce using rule 76 (tipo -> inteiro .)
    MULT            reduce using rule 76 (tipo -> inteiro .)
    DIVIDE          reduce using rule 76 (tipo -> inteiro .)
    DIV             reduce using rule 76 (tipo -> inteiro .)
    DIVI            reduce using rule 76 (tipo -> inteiro .)
    MOD             reduce using rule 76 (tipo -> inteiro .)
    LCM             reduce using rule 76 (tipo -> inteiro .)
    GCD             reduce using rule 76 (tipo -> inteiro .)
    ADC             reduce using rule 76 (tipo -> inteiro .)
    SUB             reduce using rule 76 (tipo -> inteiro .)
    CONC            reduce using rule 76 (tipo -> inteiro .)
    IGUAL_DP        reduce using rule 76 (tipo -> inteiro .)
    DIF             reduce using rule 76 (tipo -> inteiro .)
    MAIOR           reduce using rule 76 (tipo -> inteiro .)
    MENOR           reduce using rule 76 (tipo -> inteiro .)
    MAIOR_IGL       reduce using rule 76 (tipo -> inteiro .)
    LESSEQUAL       reduce using rule 76 (tipo -> inteiro .)
    SMARTMATCH      reduce using rule 76 (tipo -> inteiro .)
    AND_S           reduce using rule 76 (tipo -> inteiro .)
    PONTO_VIRGULA   reduce using rule 76 (tipo -> inteiro .)
    OR_S            reduce using rule 76 (tipo -> inteiro .)
    XOR_S           reduce using rule 76 (tipo -> inteiro .)
    RPAREN          reduce using rule 76 (tipo -> inteiro .)
    ABRE_CHAVE      reduce using rule 76 (tipo -> inteiro .)
    COMMA           reduce using rule 76 (tipo -> inteiro .)


state 68

    (101) loop_while -> WHILE . exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 166
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 69

    (6) exp_2 -> or .

    PONTO_VIRGULA   reduce using rule 6 (exp_2 -> or .)
    OR_S            reduce using rule 6 (exp_2 -> or .)
    XOR_S           reduce using rule 6 (exp_2 -> or .)
    RPAREN          reduce using rule 6 (exp_2 -> or .)
    ABRE_CHAVE      reduce using rule 6 (exp_2 -> or .)
    COMMA           reduce using rule 6 (exp_2 -> or .)


state 70

    (7) exp_2 -> xor .

    PONTO_VIRGULA   reduce using rule 7 (exp_2 -> xor .)
    OR_S            reduce using rule 7 (exp_2 -> xor .)
    XOR_S           reduce using rule 7 (exp_2 -> xor .)
    RPAREN          reduce using rule 7 (exp_2 -> xor .)
    ABRE_CHAVE      reduce using rule 7 (exp_2 -> xor .)
    COMMA           reduce using rule 7 (exp_2 -> xor .)


state 71

    (8) exp_2 -> exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 8 (exp_2 -> exp_3 .)
    OR_S            reduce using rule 8 (exp_2 -> exp_3 .)
    XOR_S           reduce using rule 8 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 8 (exp_2 -> exp_3 .)
    ABRE_CHAVE      reduce using rule 8 (exp_2 -> exp_3 .)
    COMMA           reduce using rule 8 (exp_2 -> exp_3 .)
    AND_S           shift and go to state 167


state 72

    (80) tipo_opicional -> tipo_opicional_int .

    LIST            reduce using rule 80 (tipo_opicional -> tipo_opicional_int .)
    ESCALAR         reduce using rule 80 (tipo_opicional -> tipo_opicional_int .)


state 73

    (81) tipo_opicional -> tipo_opicional_str .

    LIST            reduce using rule 81 (tipo_opicional -> tipo_opicional_str .)
    ESCALAR         reduce using rule 81 (tipo_opicional -> tipo_opicional_str .)


state 74

    (82) tipo_opicional -> empty .

    LIST            reduce using rule 82 (tipo_opicional -> empty .)
    ESCALAR         reduce using rule 82 (tipo_opicional -> empty .)


state 75

    (172) declaracao_break -> BREAK . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 168


state 76

    (173) declaracao_exit -> EXIT . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 169
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 77

    (174) declaracao_last -> LAST . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 170


state 78

    (175) declaracao_next -> NEXT . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 171


state 79

    (176) declaracao_redo -> REDO . IF BOOLEAN PONTO_VIRGULA

    IF              shift and go to state 172


state 80

    (89) boolean -> BOOLEAN .

    POW             reduce using rule 89 (boolean -> BOOLEAN .)
    MULT            reduce using rule 89 (boolean -> BOOLEAN .)
    DIVIDE          reduce using rule 89 (boolean -> BOOLEAN .)
    DIV             reduce using rule 89 (boolean -> BOOLEAN .)
    DIVI            reduce using rule 89 (boolean -> BOOLEAN .)
    MOD             reduce using rule 89 (boolean -> BOOLEAN .)
    LCM             reduce using rule 89 (boolean -> BOOLEAN .)
    GCD             reduce using rule 89 (boolean -> BOOLEAN .)
    ADC             reduce using rule 89 (boolean -> BOOLEAN .)
    SUB             reduce using rule 89 (boolean -> BOOLEAN .)
    CONC            reduce using rule 89 (boolean -> BOOLEAN .)
    IGUAL_DP        reduce using rule 89 (boolean -> BOOLEAN .)
    DIF             reduce using rule 89 (boolean -> BOOLEAN .)
    MAIOR           reduce using rule 89 (boolean -> BOOLEAN .)
    MENOR           reduce using rule 89 (boolean -> BOOLEAN .)
    MAIOR_IGL       reduce using rule 89 (boolean -> BOOLEAN .)
    LESSEQUAL       reduce using rule 89 (boolean -> BOOLEAN .)
    SMARTMATCH      reduce using rule 89 (boolean -> BOOLEAN .)
    AND_S           reduce using rule 89 (boolean -> BOOLEAN .)
    PONTO_VIRGULA   reduce using rule 89 (boolean -> BOOLEAN .)
    OR_S            reduce using rule 89 (boolean -> BOOLEAN .)
    XOR_S           reduce using rule 89 (boolean -> BOOLEAN .)
    RPAREN          reduce using rule 89 (boolean -> BOOLEAN .)
    ABRE_CHAVE      reduce using rule 89 (boolean -> BOOLEAN .)
    COMMA           reduce using rule 89 (boolean -> BOOLEAN .)


state 81

    (177) declaracao_return -> RETURN . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 173
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 82

    (178) declaracao_constant -> CONSTANT . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 174


state 83

    (179) declaracao_state -> STATE . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 175


state 84

    (184) import -> IMPORT . ID MENOR ID MAIOR PONTO_VIRGULA

    ID              shift and go to state 176


state 85

    (185) need -> NEED . ID PONTO_VIRGULA

    ID              shift and go to state 177


state 86

    (186) require -> REQUIRE . ID PONTO_VIRGULA

    ID              shift and go to state 178


state 87

    (187) use -> USE . ID PONTO_VIRGULA

    ID              shift and go to state 179


state 88

    (188) push -> PUSH . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 180


state 89

    (189) unshift -> UNSHIFT . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 181


state 90

    (190) splice -> SPLICE . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 182


state 91

    (11) exp_3 -> and .

    AND_S           reduce using rule 11 (exp_3 -> and .)
    PONTO_VIRGULA   reduce using rule 11 (exp_3 -> and .)
    OR_S            reduce using rule 11 (exp_3 -> and .)
    XOR_S           reduce using rule 11 (exp_3 -> and .)
    RPAREN          reduce using rule 11 (exp_3 -> and .)
    ABRE_CHAVE      reduce using rule 11 (exp_3 -> and .)
    COMMA           reduce using rule 11 (exp_3 -> and .)


state 92

    (12) exp_3 -> exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 12 (exp_3 -> exp_4 .)
    PONTO_VIRGULA   reduce using rule 12 (exp_3 -> exp_4 .)
    OR_S            reduce using rule 12 (exp_3 -> exp_4 .)
    XOR_S           reduce using rule 12 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 12 (exp_3 -> exp_4 .)
    ABRE_CHAVE      reduce using rule 12 (exp_3 -> exp_4 .)
    COMMA           reduce using rule 12 (exp_3 -> exp_4 .)
    IGUAL_DP        shift and go to state 183
    DIF             shift and go to state 184
    MAIOR           shift and go to state 185
    MENOR           shift and go to state 186
    MAIOR_IGL       shift and go to state 187
    LESSEQUAL       shift and go to state 188
    SMARTMATCH      shift and go to state 189


state 93

    (83) tipo_opicional_int -> INT .

    LIST            reduce using rule 83 (tipo_opicional_int -> INT .)
    ESCALAR         reduce using rule 83 (tipo_opicional_int -> INT .)


state 94

    (84) tipo_opicional_str -> STR .

    LIST            reduce using rule 84 (tipo_opicional_str -> STR .)
    ESCALAR         reduce using rule 84 (tipo_opicional_str -> STR .)


state 95

    (14) exp_4 -> igual_dp .

    IGUAL_DP        reduce using rule 14 (exp_4 -> igual_dp .)
    DIF             reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MENOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR_IGL       reduce using rule 14 (exp_4 -> igual_dp .)
    LESSEQUAL       reduce using rule 14 (exp_4 -> igual_dp .)
    SMARTMATCH      reduce using rule 14 (exp_4 -> igual_dp .)
    AND_S           reduce using rule 14 (exp_4 -> igual_dp .)
    PONTO_VIRGULA   reduce using rule 14 (exp_4 -> igual_dp .)
    OR_S            reduce using rule 14 (exp_4 -> igual_dp .)
    XOR_S           reduce using rule 14 (exp_4 -> igual_dp .)
    RPAREN          reduce using rule 14 (exp_4 -> igual_dp .)
    ABRE_CHAVE      reduce using rule 14 (exp_4 -> igual_dp .)
    COMMA           reduce using rule 14 (exp_4 -> igual_dp .)


state 96

    (15) exp_4 -> dif .

    IGUAL_DP        reduce using rule 15 (exp_4 -> dif .)
    DIF             reduce using rule 15 (exp_4 -> dif .)
    MAIOR           reduce using rule 15 (exp_4 -> dif .)
    MENOR           reduce using rule 15 (exp_4 -> dif .)
    MAIOR_IGL       reduce using rule 15 (exp_4 -> dif .)
    LESSEQUAL       reduce using rule 15 (exp_4 -> dif .)
    SMARTMATCH      reduce using rule 15 (exp_4 -> dif .)
    AND_S           reduce using rule 15 (exp_4 -> dif .)
    PONTO_VIRGULA   reduce using rule 15 (exp_4 -> dif .)
    OR_S            reduce using rule 15 (exp_4 -> dif .)
    XOR_S           reduce using rule 15 (exp_4 -> dif .)
    RPAREN          reduce using rule 15 (exp_4 -> dif .)
    ABRE_CHAVE      reduce using rule 15 (exp_4 -> dif .)
    COMMA           reduce using rule 15 (exp_4 -> dif .)


state 97

    (16) exp_4 -> maior .

    IGUAL_DP        reduce using rule 16 (exp_4 -> maior .)
    DIF             reduce using rule 16 (exp_4 -> maior .)
    MAIOR           reduce using rule 16 (exp_4 -> maior .)
    MENOR           reduce using rule 16 (exp_4 -> maior .)
    MAIOR_IGL       reduce using rule 16 (exp_4 -> maior .)
    LESSEQUAL       reduce using rule 16 (exp_4 -> maior .)
    SMARTMATCH      reduce using rule 16 (exp_4 -> maior .)
    AND_S           reduce using rule 16 (exp_4 -> maior .)
    PONTO_VIRGULA   reduce using rule 16 (exp_4 -> maior .)
    OR_S            reduce using rule 16 (exp_4 -> maior .)
    XOR_S           reduce using rule 16 (exp_4 -> maior .)
    RPAREN          reduce using rule 16 (exp_4 -> maior .)
    ABRE_CHAVE      reduce using rule 16 (exp_4 -> maior .)
    COMMA           reduce using rule 16 (exp_4 -> maior .)


state 98

    (17) exp_4 -> menor .

    IGUAL_DP        reduce using rule 17 (exp_4 -> menor .)
    DIF             reduce using rule 17 (exp_4 -> menor .)
    MAIOR           reduce using rule 17 (exp_4 -> menor .)
    MENOR           reduce using rule 17 (exp_4 -> menor .)
    MAIOR_IGL       reduce using rule 17 (exp_4 -> menor .)
    LESSEQUAL       reduce using rule 17 (exp_4 -> menor .)
    SMARTMATCH      reduce using rule 17 (exp_4 -> menor .)
    AND_S           reduce using rule 17 (exp_4 -> menor .)
    PONTO_VIRGULA   reduce using rule 17 (exp_4 -> menor .)
    OR_S            reduce using rule 17 (exp_4 -> menor .)
    XOR_S           reduce using rule 17 (exp_4 -> menor .)
    RPAREN          reduce using rule 17 (exp_4 -> menor .)
    ABRE_CHAVE      reduce using rule 17 (exp_4 -> menor .)
    COMMA           reduce using rule 17 (exp_4 -> menor .)


state 99

    (18) exp_4 -> maior_igual .

    IGUAL_DP        reduce using rule 18 (exp_4 -> maior_igual .)
    DIF             reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MENOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR_IGL       reduce using rule 18 (exp_4 -> maior_igual .)
    LESSEQUAL       reduce using rule 18 (exp_4 -> maior_igual .)
    SMARTMATCH      reduce using rule 18 (exp_4 -> maior_igual .)
    AND_S           reduce using rule 18 (exp_4 -> maior_igual .)
    PONTO_VIRGULA   reduce using rule 18 (exp_4 -> maior_igual .)
    OR_S            reduce using rule 18 (exp_4 -> maior_igual .)
    XOR_S           reduce using rule 18 (exp_4 -> maior_igual .)
    RPAREN          reduce using rule 18 (exp_4 -> maior_igual .)
    ABRE_CHAVE      reduce using rule 18 (exp_4 -> maior_igual .)
    COMMA           reduce using rule 18 (exp_4 -> maior_igual .)


state 100

    (19) exp_4 -> menor_igual .

    IGUAL_DP        reduce using rule 19 (exp_4 -> menor_igual .)
    DIF             reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MENOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR_IGL       reduce using rule 19 (exp_4 -> menor_igual .)
    LESSEQUAL       reduce using rule 19 (exp_4 -> menor_igual .)
    SMARTMATCH      reduce using rule 19 (exp_4 -> menor_igual .)
    AND_S           reduce using rule 19 (exp_4 -> menor_igual .)
    PONTO_VIRGULA   reduce using rule 19 (exp_4 -> menor_igual .)
    OR_S            reduce using rule 19 (exp_4 -> menor_igual .)
    XOR_S           reduce using rule 19 (exp_4 -> menor_igual .)
    RPAREN          reduce using rule 19 (exp_4 -> menor_igual .)
    ABRE_CHAVE      reduce using rule 19 (exp_4 -> menor_igual .)
    COMMA           reduce using rule 19 (exp_4 -> menor_igual .)


state 101

    (20) exp_4 -> smartmatch .

    IGUAL_DP        reduce using rule 20 (exp_4 -> smartmatch .)
    DIF             reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MENOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR_IGL       reduce using rule 20 (exp_4 -> smartmatch .)
    LESSEQUAL       reduce using rule 20 (exp_4 -> smartmatch .)
    SMARTMATCH      reduce using rule 20 (exp_4 -> smartmatch .)
    AND_S           reduce using rule 20 (exp_4 -> smartmatch .)
    PONTO_VIRGULA   reduce using rule 20 (exp_4 -> smartmatch .)
    OR_S            reduce using rule 20 (exp_4 -> smartmatch .)
    XOR_S           reduce using rule 20 (exp_4 -> smartmatch .)
    RPAREN          reduce using rule 20 (exp_4 -> smartmatch .)
    ABRE_CHAVE      reduce using rule 20 (exp_4 -> smartmatch .)
    COMMA           reduce using rule 20 (exp_4 -> smartmatch .)


state 102

    (21) exp_4 -> exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 21 (exp_4 -> exp_5 .)
    DIF             reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MENOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR_IGL       reduce using rule 21 (exp_4 -> exp_5 .)
    LESSEQUAL       reduce using rule 21 (exp_4 -> exp_5 .)
    SMARTMATCH      reduce using rule 21 (exp_4 -> exp_5 .)
    AND_S           reduce using rule 21 (exp_4 -> exp_5 .)
    PONTO_VIRGULA   reduce using rule 21 (exp_4 -> exp_5 .)
    OR_S            reduce using rule 21 (exp_4 -> exp_5 .)
    XOR_S           reduce using rule 21 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 21 (exp_4 -> exp_5 .)
    ABRE_CHAVE      reduce using rule 21 (exp_4 -> exp_5 .)
    COMMA           reduce using rule 21 (exp_4 -> exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 103

    (29) exp_5 -> adicao .

    ADC             reduce using rule 29 (exp_5 -> adicao .)
    SUB             reduce using rule 29 (exp_5 -> adicao .)
    CONC            reduce using rule 29 (exp_5 -> adicao .)
    IGUAL_DP        reduce using rule 29 (exp_5 -> adicao .)
    DIF             reduce using rule 29 (exp_5 -> adicao .)
    MAIOR           reduce using rule 29 (exp_5 -> adicao .)
    MENOR           reduce using rule 29 (exp_5 -> adicao .)
    MAIOR_IGL       reduce using rule 29 (exp_5 -> adicao .)
    LESSEQUAL       reduce using rule 29 (exp_5 -> adicao .)
    SMARTMATCH      reduce using rule 29 (exp_5 -> adicao .)
    AND_S           reduce using rule 29 (exp_5 -> adicao .)
    PONTO_VIRGULA   reduce using rule 29 (exp_5 -> adicao .)
    OR_S            reduce using rule 29 (exp_5 -> adicao .)
    XOR_S           reduce using rule 29 (exp_5 -> adicao .)
    RPAREN          reduce using rule 29 (exp_5 -> adicao .)
    ABRE_CHAVE      reduce using rule 29 (exp_5 -> adicao .)
    COMMA           reduce using rule 29 (exp_5 -> adicao .)


state 104

    (30) exp_5 -> subtracao .

    ADC             reduce using rule 30 (exp_5 -> subtracao .)
    SUB             reduce using rule 30 (exp_5 -> subtracao .)
    CONC            reduce using rule 30 (exp_5 -> subtracao .)
    IGUAL_DP        reduce using rule 30 (exp_5 -> subtracao .)
    DIF             reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR           reduce using rule 30 (exp_5 -> subtracao .)
    MENOR           reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR_IGL       reduce using rule 30 (exp_5 -> subtracao .)
    LESSEQUAL       reduce using rule 30 (exp_5 -> subtracao .)
    SMARTMATCH      reduce using rule 30 (exp_5 -> subtracao .)
    AND_S           reduce using rule 30 (exp_5 -> subtracao .)
    PONTO_VIRGULA   reduce using rule 30 (exp_5 -> subtracao .)
    OR_S            reduce using rule 30 (exp_5 -> subtracao .)
    XOR_S           reduce using rule 30 (exp_5 -> subtracao .)
    RPAREN          reduce using rule 30 (exp_5 -> subtracao .)
    ABRE_CHAVE      reduce using rule 30 (exp_5 -> subtracao .)
    COMMA           reduce using rule 30 (exp_5 -> subtracao .)


state 105

    (31) exp_5 -> conc .

    ADC             reduce using rule 31 (exp_5 -> conc .)
    SUB             reduce using rule 31 (exp_5 -> conc .)
    CONC            reduce using rule 31 (exp_5 -> conc .)
    IGUAL_DP        reduce using rule 31 (exp_5 -> conc .)
    DIF             reduce using rule 31 (exp_5 -> conc .)
    MAIOR           reduce using rule 31 (exp_5 -> conc .)
    MENOR           reduce using rule 31 (exp_5 -> conc .)
    MAIOR_IGL       reduce using rule 31 (exp_5 -> conc .)
    LESSEQUAL       reduce using rule 31 (exp_5 -> conc .)
    SMARTMATCH      reduce using rule 31 (exp_5 -> conc .)
    AND_S           reduce using rule 31 (exp_5 -> conc .)
    PONTO_VIRGULA   reduce using rule 31 (exp_5 -> conc .)
    OR_S            reduce using rule 31 (exp_5 -> conc .)
    XOR_S           reduce using rule 31 (exp_5 -> conc .)
    RPAREN          reduce using rule 31 (exp_5 -> conc .)
    ABRE_CHAVE      reduce using rule 31 (exp_5 -> conc .)
    COMMA           reduce using rule 31 (exp_5 -> conc .)


state 106

    (32) exp_5 -> exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 32 (exp_5 -> exp_6 .)
    SUB             reduce using rule 32 (exp_5 -> exp_6 .)
    CONC            reduce using rule 32 (exp_5 -> exp_6 .)
    IGUAL_DP        reduce using rule 32 (exp_5 -> exp_6 .)
    DIF             reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MENOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR_IGL       reduce using rule 32 (exp_5 -> exp_6 .)
    LESSEQUAL       reduce using rule 32 (exp_5 -> exp_6 .)
    SMARTMATCH      reduce using rule 32 (exp_5 -> exp_6 .)
    AND_S           reduce using rule 32 (exp_5 -> exp_6 .)
    PONTO_VIRGULA   reduce using rule 32 (exp_5 -> exp_6 .)
    OR_S            reduce using rule 32 (exp_5 -> exp_6 .)
    XOR_S           reduce using rule 32 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 32 (exp_5 -> exp_6 .)
    ABRE_CHAVE      reduce using rule 32 (exp_5 -> exp_6 .)
    COMMA           reduce using rule 32 (exp_5 -> exp_6 .)
    MULT            shift and go to state 193
    DIVIDE          shift and go to state 194
    DIV             shift and go to state 195
    DIVI            shift and go to state 196
    MOD             shift and go to state 197
    LCM             shift and go to state 198
    GCD             shift and go to state 199


state 107

    (36) exp_6 -> mult .

    MULT            reduce using rule 36 (exp_6 -> mult .)
    DIVIDE          reduce using rule 36 (exp_6 -> mult .)
    DIV             reduce using rule 36 (exp_6 -> mult .)
    DIVI            reduce using rule 36 (exp_6 -> mult .)
    MOD             reduce using rule 36 (exp_6 -> mult .)
    LCM             reduce using rule 36 (exp_6 -> mult .)
    GCD             reduce using rule 36 (exp_6 -> mult .)
    ADC             reduce using rule 36 (exp_6 -> mult .)
    SUB             reduce using rule 36 (exp_6 -> mult .)
    CONC            reduce using rule 36 (exp_6 -> mult .)
    IGUAL_DP        reduce using rule 36 (exp_6 -> mult .)
    DIF             reduce using rule 36 (exp_6 -> mult .)
    MAIOR           reduce using rule 36 (exp_6 -> mult .)
    MENOR           reduce using rule 36 (exp_6 -> mult .)
    MAIOR_IGL       reduce using rule 36 (exp_6 -> mult .)
    LESSEQUAL       reduce using rule 36 (exp_6 -> mult .)
    SMARTMATCH      reduce using rule 36 (exp_6 -> mult .)
    AND_S           reduce using rule 36 (exp_6 -> mult .)
    PONTO_VIRGULA   reduce using rule 36 (exp_6 -> mult .)
    OR_S            reduce using rule 36 (exp_6 -> mult .)
    XOR_S           reduce using rule 36 (exp_6 -> mult .)
    RPAREN          reduce using rule 36 (exp_6 -> mult .)
    ABRE_CHAVE      reduce using rule 36 (exp_6 -> mult .)
    COMMA           reduce using rule 36 (exp_6 -> mult .)


state 108

    (37) exp_6 -> divide .

    MULT            reduce using rule 37 (exp_6 -> divide .)
    DIVIDE          reduce using rule 37 (exp_6 -> divide .)
    DIV             reduce using rule 37 (exp_6 -> divide .)
    DIVI            reduce using rule 37 (exp_6 -> divide .)
    MOD             reduce using rule 37 (exp_6 -> divide .)
    LCM             reduce using rule 37 (exp_6 -> divide .)
    GCD             reduce using rule 37 (exp_6 -> divide .)
    ADC             reduce using rule 37 (exp_6 -> divide .)
    SUB             reduce using rule 37 (exp_6 -> divide .)
    CONC            reduce using rule 37 (exp_6 -> divide .)
    IGUAL_DP        reduce using rule 37 (exp_6 -> divide .)
    DIF             reduce using rule 37 (exp_6 -> divide .)
    MAIOR           reduce using rule 37 (exp_6 -> divide .)
    MENOR           reduce using rule 37 (exp_6 -> divide .)
    MAIOR_IGL       reduce using rule 37 (exp_6 -> divide .)
    LESSEQUAL       reduce using rule 37 (exp_6 -> divide .)
    SMARTMATCH      reduce using rule 37 (exp_6 -> divide .)
    AND_S           reduce using rule 37 (exp_6 -> divide .)
    PONTO_VIRGULA   reduce using rule 37 (exp_6 -> divide .)
    OR_S            reduce using rule 37 (exp_6 -> divide .)
    XOR_S           reduce using rule 37 (exp_6 -> divide .)
    RPAREN          reduce using rule 37 (exp_6 -> divide .)
    ABRE_CHAVE      reduce using rule 37 (exp_6 -> divide .)
    COMMA           reduce using rule 37 (exp_6 -> divide .)


state 109

    (38) exp_6 -> div .

    MULT            reduce using rule 38 (exp_6 -> div .)
    DIVIDE          reduce using rule 38 (exp_6 -> div .)
    DIV             reduce using rule 38 (exp_6 -> div .)
    DIVI            reduce using rule 38 (exp_6 -> div .)
    MOD             reduce using rule 38 (exp_6 -> div .)
    LCM             reduce using rule 38 (exp_6 -> div .)
    GCD             reduce using rule 38 (exp_6 -> div .)
    ADC             reduce using rule 38 (exp_6 -> div .)
    SUB             reduce using rule 38 (exp_6 -> div .)
    CONC            reduce using rule 38 (exp_6 -> div .)
    IGUAL_DP        reduce using rule 38 (exp_6 -> div .)
    DIF             reduce using rule 38 (exp_6 -> div .)
    MAIOR           reduce using rule 38 (exp_6 -> div .)
    MENOR           reduce using rule 38 (exp_6 -> div .)
    MAIOR_IGL       reduce using rule 38 (exp_6 -> div .)
    LESSEQUAL       reduce using rule 38 (exp_6 -> div .)
    SMARTMATCH      reduce using rule 38 (exp_6 -> div .)
    AND_S           reduce using rule 38 (exp_6 -> div .)
    PONTO_VIRGULA   reduce using rule 38 (exp_6 -> div .)
    OR_S            reduce using rule 38 (exp_6 -> div .)
    XOR_S           reduce using rule 38 (exp_6 -> div .)
    RPAREN          reduce using rule 38 (exp_6 -> div .)
    ABRE_CHAVE      reduce using rule 38 (exp_6 -> div .)
    COMMA           reduce using rule 38 (exp_6 -> div .)


state 110

    (39) exp_6 -> divi .

    MULT            reduce using rule 39 (exp_6 -> divi .)
    DIVIDE          reduce using rule 39 (exp_6 -> divi .)
    DIV             reduce using rule 39 (exp_6 -> divi .)
    DIVI            reduce using rule 39 (exp_6 -> divi .)
    MOD             reduce using rule 39 (exp_6 -> divi .)
    LCM             reduce using rule 39 (exp_6 -> divi .)
    GCD             reduce using rule 39 (exp_6 -> divi .)
    ADC             reduce using rule 39 (exp_6 -> divi .)
    SUB             reduce using rule 39 (exp_6 -> divi .)
    CONC            reduce using rule 39 (exp_6 -> divi .)
    IGUAL_DP        reduce using rule 39 (exp_6 -> divi .)
    DIF             reduce using rule 39 (exp_6 -> divi .)
    MAIOR           reduce using rule 39 (exp_6 -> divi .)
    MENOR           reduce using rule 39 (exp_6 -> divi .)
    MAIOR_IGL       reduce using rule 39 (exp_6 -> divi .)
    LESSEQUAL       reduce using rule 39 (exp_6 -> divi .)
    SMARTMATCH      reduce using rule 39 (exp_6 -> divi .)
    AND_S           reduce using rule 39 (exp_6 -> divi .)
    PONTO_VIRGULA   reduce using rule 39 (exp_6 -> divi .)
    OR_S            reduce using rule 39 (exp_6 -> divi .)
    XOR_S           reduce using rule 39 (exp_6 -> divi .)
    RPAREN          reduce using rule 39 (exp_6 -> divi .)
    ABRE_CHAVE      reduce using rule 39 (exp_6 -> divi .)
    COMMA           reduce using rule 39 (exp_6 -> divi .)


state 111

    (40) exp_6 -> mod .

    MULT            reduce using rule 40 (exp_6 -> mod .)
    DIVIDE          reduce using rule 40 (exp_6 -> mod .)
    DIV             reduce using rule 40 (exp_6 -> mod .)
    DIVI            reduce using rule 40 (exp_6 -> mod .)
    MOD             reduce using rule 40 (exp_6 -> mod .)
    LCM             reduce using rule 40 (exp_6 -> mod .)
    GCD             reduce using rule 40 (exp_6 -> mod .)
    ADC             reduce using rule 40 (exp_6 -> mod .)
    SUB             reduce using rule 40 (exp_6 -> mod .)
    CONC            reduce using rule 40 (exp_6 -> mod .)
    IGUAL_DP        reduce using rule 40 (exp_6 -> mod .)
    DIF             reduce using rule 40 (exp_6 -> mod .)
    MAIOR           reduce using rule 40 (exp_6 -> mod .)
    MENOR           reduce using rule 40 (exp_6 -> mod .)
    MAIOR_IGL       reduce using rule 40 (exp_6 -> mod .)
    LESSEQUAL       reduce using rule 40 (exp_6 -> mod .)
    SMARTMATCH      reduce using rule 40 (exp_6 -> mod .)
    AND_S           reduce using rule 40 (exp_6 -> mod .)
    PONTO_VIRGULA   reduce using rule 40 (exp_6 -> mod .)
    OR_S            reduce using rule 40 (exp_6 -> mod .)
    XOR_S           reduce using rule 40 (exp_6 -> mod .)
    RPAREN          reduce using rule 40 (exp_6 -> mod .)
    ABRE_CHAVE      reduce using rule 40 (exp_6 -> mod .)
    COMMA           reduce using rule 40 (exp_6 -> mod .)


state 112

    (41) exp_6 -> lcm .

    MULT            reduce using rule 41 (exp_6 -> lcm .)
    DIVIDE          reduce using rule 41 (exp_6 -> lcm .)
    DIV             reduce using rule 41 (exp_6 -> lcm .)
    DIVI            reduce using rule 41 (exp_6 -> lcm .)
    MOD             reduce using rule 41 (exp_6 -> lcm .)
    LCM             reduce using rule 41 (exp_6 -> lcm .)
    GCD             reduce using rule 41 (exp_6 -> lcm .)
    ADC             reduce using rule 41 (exp_6 -> lcm .)
    SUB             reduce using rule 41 (exp_6 -> lcm .)
    CONC            reduce using rule 41 (exp_6 -> lcm .)
    IGUAL_DP        reduce using rule 41 (exp_6 -> lcm .)
    DIF             reduce using rule 41 (exp_6 -> lcm .)
    MAIOR           reduce using rule 41 (exp_6 -> lcm .)
    MENOR           reduce using rule 41 (exp_6 -> lcm .)
    MAIOR_IGL       reduce using rule 41 (exp_6 -> lcm .)
    LESSEQUAL       reduce using rule 41 (exp_6 -> lcm .)
    SMARTMATCH      reduce using rule 41 (exp_6 -> lcm .)
    AND_S           reduce using rule 41 (exp_6 -> lcm .)
    PONTO_VIRGULA   reduce using rule 41 (exp_6 -> lcm .)
    OR_S            reduce using rule 41 (exp_6 -> lcm .)
    XOR_S           reduce using rule 41 (exp_6 -> lcm .)
    RPAREN          reduce using rule 41 (exp_6 -> lcm .)
    ABRE_CHAVE      reduce using rule 41 (exp_6 -> lcm .)
    COMMA           reduce using rule 41 (exp_6 -> lcm .)


state 113

    (42) exp_6 -> gcd .

    MULT            reduce using rule 42 (exp_6 -> gcd .)
    DIVIDE          reduce using rule 42 (exp_6 -> gcd .)
    DIV             reduce using rule 42 (exp_6 -> gcd .)
    DIVI            reduce using rule 42 (exp_6 -> gcd .)
    MOD             reduce using rule 42 (exp_6 -> gcd .)
    LCM             reduce using rule 42 (exp_6 -> gcd .)
    GCD             reduce using rule 42 (exp_6 -> gcd .)
    ADC             reduce using rule 42 (exp_6 -> gcd .)
    SUB             reduce using rule 42 (exp_6 -> gcd .)
    CONC            reduce using rule 42 (exp_6 -> gcd .)
    IGUAL_DP        reduce using rule 42 (exp_6 -> gcd .)
    DIF             reduce using rule 42 (exp_6 -> gcd .)
    MAIOR           reduce using rule 42 (exp_6 -> gcd .)
    MENOR           reduce using rule 42 (exp_6 -> gcd .)
    MAIOR_IGL       reduce using rule 42 (exp_6 -> gcd .)
    LESSEQUAL       reduce using rule 42 (exp_6 -> gcd .)
    SMARTMATCH      reduce using rule 42 (exp_6 -> gcd .)
    AND_S           reduce using rule 42 (exp_6 -> gcd .)
    PONTO_VIRGULA   reduce using rule 42 (exp_6 -> gcd .)
    OR_S            reduce using rule 42 (exp_6 -> gcd .)
    XOR_S           reduce using rule 42 (exp_6 -> gcd .)
    RPAREN          reduce using rule 42 (exp_6 -> gcd .)
    ABRE_CHAVE      reduce using rule 42 (exp_6 -> gcd .)
    COMMA           reduce using rule 42 (exp_6 -> gcd .)


state 114

    (43) exp_6 -> exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 43 (exp_6 -> exp_7 .)
    DIVIDE          reduce using rule 43 (exp_6 -> exp_7 .)
    DIV             reduce using rule 43 (exp_6 -> exp_7 .)
    DIVI            reduce using rule 43 (exp_6 -> exp_7 .)
    MOD             reduce using rule 43 (exp_6 -> exp_7 .)
    LCM             reduce using rule 43 (exp_6 -> exp_7 .)
    GCD             reduce using rule 43 (exp_6 -> exp_7 .)
    ADC             reduce using rule 43 (exp_6 -> exp_7 .)
    SUB             reduce using rule 43 (exp_6 -> exp_7 .)
    CONC            reduce using rule 43 (exp_6 -> exp_7 .)
    IGUAL_DP        reduce using rule 43 (exp_6 -> exp_7 .)
    DIF             reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MENOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR_IGL       reduce using rule 43 (exp_6 -> exp_7 .)
    LESSEQUAL       reduce using rule 43 (exp_6 -> exp_7 .)
    SMARTMATCH      reduce using rule 43 (exp_6 -> exp_7 .)
    AND_S           reduce using rule 43 (exp_6 -> exp_7 .)
    PONTO_VIRGULA   reduce using rule 43 (exp_6 -> exp_7 .)
    OR_S            reduce using rule 43 (exp_6 -> exp_7 .)
    XOR_S           reduce using rule 43 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 43 (exp_6 -> exp_7 .)
    ABRE_CHAVE      reduce using rule 43 (exp_6 -> exp_7 .)
    COMMA           reduce using rule 43 (exp_6 -> exp_7 .)
    POW             shift and go to state 200


state 115

    (51) exp_7 -> pow .

    POW             reduce using rule 51 (exp_7 -> pow .)
    MULT            reduce using rule 51 (exp_7 -> pow .)
    DIVIDE          reduce using rule 51 (exp_7 -> pow .)
    DIV             reduce using rule 51 (exp_7 -> pow .)
    DIVI            reduce using rule 51 (exp_7 -> pow .)
    MOD             reduce using rule 51 (exp_7 -> pow .)
    LCM             reduce using rule 51 (exp_7 -> pow .)
    GCD             reduce using rule 51 (exp_7 -> pow .)
    ADC             reduce using rule 51 (exp_7 -> pow .)
    SUB             reduce using rule 51 (exp_7 -> pow .)
    CONC            reduce using rule 51 (exp_7 -> pow .)
    IGUAL_DP        reduce using rule 51 (exp_7 -> pow .)
    DIF             reduce using rule 51 (exp_7 -> pow .)
    MAIOR           reduce using rule 51 (exp_7 -> pow .)
    MENOR           reduce using rule 51 (exp_7 -> pow .)
    MAIOR_IGL       reduce using rule 51 (exp_7 -> pow .)
    LESSEQUAL       reduce using rule 51 (exp_7 -> pow .)
    SMARTMATCH      reduce using rule 51 (exp_7 -> pow .)
    AND_S           reduce using rule 51 (exp_7 -> pow .)
    PONTO_VIRGULA   reduce using rule 51 (exp_7 -> pow .)
    OR_S            reduce using rule 51 (exp_7 -> pow .)
    XOR_S           reduce using rule 51 (exp_7 -> pow .)
    RPAREN          reduce using rule 51 (exp_7 -> pow .)
    ABRE_CHAVE      reduce using rule 51 (exp_7 -> pow .)
    COMMA           reduce using rule 51 (exp_7 -> pow .)


state 116

    (52) exp_7 -> exp_8 .

    POW             reduce using rule 52 (exp_7 -> exp_8 .)
    MULT            reduce using rule 52 (exp_7 -> exp_8 .)
    DIVIDE          reduce using rule 52 (exp_7 -> exp_8 .)
    DIV             reduce using rule 52 (exp_7 -> exp_8 .)
    DIVI            reduce using rule 52 (exp_7 -> exp_8 .)
    MOD             reduce using rule 52 (exp_7 -> exp_8 .)
    LCM             reduce using rule 52 (exp_7 -> exp_8 .)
    GCD             reduce using rule 52 (exp_7 -> exp_8 .)
    ADC             reduce using rule 52 (exp_7 -> exp_8 .)
    SUB             reduce using rule 52 (exp_7 -> exp_8 .)
    CONC            reduce using rule 52 (exp_7 -> exp_8 .)
    IGUAL_DP        reduce using rule 52 (exp_7 -> exp_8 .)
    DIF             reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MENOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR_IGL       reduce using rule 52 (exp_7 -> exp_8 .)
    LESSEQUAL       reduce using rule 52 (exp_7 -> exp_8 .)
    SMARTMATCH      reduce using rule 52 (exp_7 -> exp_8 .)
    AND_S           reduce using rule 52 (exp_7 -> exp_8 .)
    PONTO_VIRGULA   reduce using rule 52 (exp_7 -> exp_8 .)
    OR_S            reduce using rule 52 (exp_7 -> exp_8 .)
    XOR_S           reduce using rule 52 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 52 (exp_7 -> exp_8 .)
    ABRE_CHAVE      reduce using rule 52 (exp_7 -> exp_8 .)
    COMMA           reduce using rule 52 (exp_7 -> exp_8 .)


state 117

    (54) exp_8 -> not_op .

    POW             reduce using rule 54 (exp_8 -> not_op .)
    MULT            reduce using rule 54 (exp_8 -> not_op .)
    DIVIDE          reduce using rule 54 (exp_8 -> not_op .)
    DIV             reduce using rule 54 (exp_8 -> not_op .)
    DIVI            reduce using rule 54 (exp_8 -> not_op .)
    MOD             reduce using rule 54 (exp_8 -> not_op .)
    LCM             reduce using rule 54 (exp_8 -> not_op .)
    GCD             reduce using rule 54 (exp_8 -> not_op .)
    ADC             reduce using rule 54 (exp_8 -> not_op .)
    SUB             reduce using rule 54 (exp_8 -> not_op .)
    CONC            reduce using rule 54 (exp_8 -> not_op .)
    IGUAL_DP        reduce using rule 54 (exp_8 -> not_op .)
    DIF             reduce using rule 54 (exp_8 -> not_op .)
    MAIOR           reduce using rule 54 (exp_8 -> not_op .)
    MENOR           reduce using rule 54 (exp_8 -> not_op .)
    MAIOR_IGL       reduce using rule 54 (exp_8 -> not_op .)
    LESSEQUAL       reduce using rule 54 (exp_8 -> not_op .)
    SMARTMATCH      reduce using rule 54 (exp_8 -> not_op .)
    AND_S           reduce using rule 54 (exp_8 -> not_op .)
    PONTO_VIRGULA   reduce using rule 54 (exp_8 -> not_op .)
    OR_S            reduce using rule 54 (exp_8 -> not_op .)
    XOR_S           reduce using rule 54 (exp_8 -> not_op .)
    RPAREN          reduce using rule 54 (exp_8 -> not_op .)
    ABRE_CHAVE      reduce using rule 54 (exp_8 -> not_op .)
    COMMA           reduce using rule 54 (exp_8 -> not_op .)


state 118

    (55) exp_8 -> not_s .

    POW             reduce using rule 55 (exp_8 -> not_s .)
    MULT            reduce using rule 55 (exp_8 -> not_s .)
    DIVIDE          reduce using rule 55 (exp_8 -> not_s .)
    DIV             reduce using rule 55 (exp_8 -> not_s .)
    DIVI            reduce using rule 55 (exp_8 -> not_s .)
    MOD             reduce using rule 55 (exp_8 -> not_s .)
    LCM             reduce using rule 55 (exp_8 -> not_s .)
    GCD             reduce using rule 55 (exp_8 -> not_s .)
    ADC             reduce using rule 55 (exp_8 -> not_s .)
    SUB             reduce using rule 55 (exp_8 -> not_s .)
    CONC            reduce using rule 55 (exp_8 -> not_s .)
    IGUAL_DP        reduce using rule 55 (exp_8 -> not_s .)
    DIF             reduce using rule 55 (exp_8 -> not_s .)
    MAIOR           reduce using rule 55 (exp_8 -> not_s .)
    MENOR           reduce using rule 55 (exp_8 -> not_s .)
    MAIOR_IGL       reduce using rule 55 (exp_8 -> not_s .)
    LESSEQUAL       reduce using rule 55 (exp_8 -> not_s .)
    SMARTMATCH      reduce using rule 55 (exp_8 -> not_s .)
    AND_S           reduce using rule 55 (exp_8 -> not_s .)
    PONTO_VIRGULA   reduce using rule 55 (exp_8 -> not_s .)
    OR_S            reduce using rule 55 (exp_8 -> not_s .)
    XOR_S           reduce using rule 55 (exp_8 -> not_s .)
    RPAREN          reduce using rule 55 (exp_8 -> not_s .)
    ABRE_CHAVE      reduce using rule 55 (exp_8 -> not_s .)
    COMMA           reduce using rule 55 (exp_8 -> not_s .)


state 119

    (56) exp_8 -> exp_9 .

    POW             reduce using rule 56 (exp_8 -> exp_9 .)
    MULT            reduce using rule 56 (exp_8 -> exp_9 .)
    DIVIDE          reduce using rule 56 (exp_8 -> exp_9 .)
    DIV             reduce using rule 56 (exp_8 -> exp_9 .)
    DIVI            reduce using rule 56 (exp_8 -> exp_9 .)
    MOD             reduce using rule 56 (exp_8 -> exp_9 .)
    LCM             reduce using rule 56 (exp_8 -> exp_9 .)
    GCD             reduce using rule 56 (exp_8 -> exp_9 .)
    ADC             reduce using rule 56 (exp_8 -> exp_9 .)
    SUB             reduce using rule 56 (exp_8 -> exp_9 .)
    CONC            reduce using rule 56 (exp_8 -> exp_9 .)
    IGUAL_DP        reduce using rule 56 (exp_8 -> exp_9 .)
    DIF             reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MENOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR_IGL       reduce using rule 56 (exp_8 -> exp_9 .)
    LESSEQUAL       reduce using rule 56 (exp_8 -> exp_9 .)
    SMARTMATCH      reduce using rule 56 (exp_8 -> exp_9 .)
    AND_S           reduce using rule 56 (exp_8 -> exp_9 .)
    PONTO_VIRGULA   reduce using rule 56 (exp_8 -> exp_9 .)
    OR_S            reduce using rule 56 (exp_8 -> exp_9 .)
    XOR_S           reduce using rule 56 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 56 (exp_8 -> exp_9 .)
    ABRE_CHAVE      reduce using rule 56 (exp_8 -> exp_9 .)
    COMMA           reduce using rule 56 (exp_8 -> exp_9 .)


state 120

    (57) not_op -> NOT . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_8                          shift and go to state 201
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 121

    (58) not_s -> NEGAC . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_8                          shift and go to state 202
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 122

    (59) exp_9 -> unario .

    POW             reduce using rule 59 (exp_9 -> unario .)
    MULT            reduce using rule 59 (exp_9 -> unario .)
    DIVIDE          reduce using rule 59 (exp_9 -> unario .)
    DIV             reduce using rule 59 (exp_9 -> unario .)
    DIVI            reduce using rule 59 (exp_9 -> unario .)
    MOD             reduce using rule 59 (exp_9 -> unario .)
    LCM             reduce using rule 59 (exp_9 -> unario .)
    GCD             reduce using rule 59 (exp_9 -> unario .)
    ADC             reduce using rule 59 (exp_9 -> unario .)
    SUB             reduce using rule 59 (exp_9 -> unario .)
    CONC            reduce using rule 59 (exp_9 -> unario .)
    IGUAL_DP        reduce using rule 59 (exp_9 -> unario .)
    DIF             reduce using rule 59 (exp_9 -> unario .)
    MAIOR           reduce using rule 59 (exp_9 -> unario .)
    MENOR           reduce using rule 59 (exp_9 -> unario .)
    MAIOR_IGL       reduce using rule 59 (exp_9 -> unario .)
    LESSEQUAL       reduce using rule 59 (exp_9 -> unario .)
    SMARTMATCH      reduce using rule 59 (exp_9 -> unario .)
    AND_S           reduce using rule 59 (exp_9 -> unario .)
    PONTO_VIRGULA   reduce using rule 59 (exp_9 -> unario .)
    OR_S            reduce using rule 59 (exp_9 -> unario .)
    XOR_S           reduce using rule 59 (exp_9 -> unario .)
    RPAREN          reduce using rule 59 (exp_9 -> unario .)
    ABRE_CHAVE      reduce using rule 59 (exp_9 -> unario .)
    COMMA           reduce using rule 59 (exp_9 -> unario .)


state 123

    (60) exp_9 -> operando .

    POW             reduce using rule 60 (exp_9 -> operando .)
    MULT            reduce using rule 60 (exp_9 -> operando .)
    DIVIDE          reduce using rule 60 (exp_9 -> operando .)
    DIV             reduce using rule 60 (exp_9 -> operando .)
    DIVI            reduce using rule 60 (exp_9 -> operando .)
    MOD             reduce using rule 60 (exp_9 -> operando .)
    LCM             reduce using rule 60 (exp_9 -> operando .)
    GCD             reduce using rule 60 (exp_9 -> operando .)
    ADC             reduce using rule 60 (exp_9 -> operando .)
    SUB             reduce using rule 60 (exp_9 -> operando .)
    CONC            reduce using rule 60 (exp_9 -> operando .)
    IGUAL_DP        reduce using rule 60 (exp_9 -> operando .)
    DIF             reduce using rule 60 (exp_9 -> operando .)
    MAIOR           reduce using rule 60 (exp_9 -> operando .)
    MENOR           reduce using rule 60 (exp_9 -> operando .)
    MAIOR_IGL       reduce using rule 60 (exp_9 -> operando .)
    LESSEQUAL       reduce using rule 60 (exp_9 -> operando .)
    SMARTMATCH      reduce using rule 60 (exp_9 -> operando .)
    AND_S           reduce using rule 60 (exp_9 -> operando .)
    PONTO_VIRGULA   reduce using rule 60 (exp_9 -> operando .)
    OR_S            reduce using rule 60 (exp_9 -> operando .)
    XOR_S           reduce using rule 60 (exp_9 -> operando .)
    RPAREN          reduce using rule 60 (exp_9 -> operando .)
    ABRE_CHAVE      reduce using rule 60 (exp_9 -> operando .)
    COMMA           reduce using rule 60 (exp_9 -> operando .)


state 124

    (61) unario -> prefixo_incremento .

    POW             reduce using rule 61 (unario -> prefixo_incremento .)
    MULT            reduce using rule 61 (unario -> prefixo_incremento .)
    DIVIDE          reduce using rule 61 (unario -> prefixo_incremento .)
    DIV             reduce using rule 61 (unario -> prefixo_incremento .)
    DIVI            reduce using rule 61 (unario -> prefixo_incremento .)
    MOD             reduce using rule 61 (unario -> prefixo_incremento .)
    LCM             reduce using rule 61 (unario -> prefixo_incremento .)
    GCD             reduce using rule 61 (unario -> prefixo_incremento .)
    ADC             reduce using rule 61 (unario -> prefixo_incremento .)
    SUB             reduce using rule 61 (unario -> prefixo_incremento .)
    CONC            reduce using rule 61 (unario -> prefixo_incremento .)
    IGUAL_DP        reduce using rule 61 (unario -> prefixo_incremento .)
    DIF             reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MENOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR_IGL       reduce using rule 61 (unario -> prefixo_incremento .)
    LESSEQUAL       reduce using rule 61 (unario -> prefixo_incremento .)
    SMARTMATCH      reduce using rule 61 (unario -> prefixo_incremento .)
    AND_S           reduce using rule 61 (unario -> prefixo_incremento .)
    PONTO_VIRGULA   reduce using rule 61 (unario -> prefixo_incremento .)
    OR_S            reduce using rule 61 (unario -> prefixo_incremento .)
    XOR_S           reduce using rule 61 (unario -> prefixo_incremento .)
    RPAREN          reduce using rule 61 (unario -> prefixo_incremento .)
    ABRE_CHAVE      reduce using rule 61 (unario -> prefixo_incremento .)
    COMMA           reduce using rule 61 (unario -> prefixo_incremento .)


state 125

    (62) unario -> posfixo_incremento .

    POW             reduce using rule 62 (unario -> posfixo_incremento .)
    MULT            reduce using rule 62 (unario -> posfixo_incremento .)
    DIVIDE          reduce using rule 62 (unario -> posfixo_incremento .)
    DIV             reduce using rule 62 (unario -> posfixo_incremento .)
    DIVI            reduce using rule 62 (unario -> posfixo_incremento .)
    MOD             reduce using rule 62 (unario -> posfixo_incremento .)
    LCM             reduce using rule 62 (unario -> posfixo_incremento .)
    GCD             reduce using rule 62 (unario -> posfixo_incremento .)
    ADC             reduce using rule 62 (unario -> posfixo_incremento .)
    SUB             reduce using rule 62 (unario -> posfixo_incremento .)
    CONC            reduce using rule 62 (unario -> posfixo_incremento .)
    IGUAL_DP        reduce using rule 62 (unario -> posfixo_incremento .)
    DIF             reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MENOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR_IGL       reduce using rule 62 (unario -> posfixo_incremento .)
    LESSEQUAL       reduce using rule 62 (unario -> posfixo_incremento .)
    SMARTMATCH      reduce using rule 62 (unario -> posfixo_incremento .)
    AND_S           reduce using rule 62 (unario -> posfixo_incremento .)
    PONTO_VIRGULA   reduce using rule 62 (unario -> posfixo_incremento .)
    OR_S            reduce using rule 62 (unario -> posfixo_incremento .)
    XOR_S           reduce using rule 62 (unario -> posfixo_incremento .)
    RPAREN          reduce using rule 62 (unario -> posfixo_incremento .)
    ABRE_CHAVE      reduce using rule 62 (unario -> posfixo_incremento .)
    COMMA           reduce using rule 62 (unario -> posfixo_incremento .)


state 126

    (63) unario -> prefixo_decremento .

    POW             reduce using rule 63 (unario -> prefixo_decremento .)
    MULT            reduce using rule 63 (unario -> prefixo_decremento .)
    DIVIDE          reduce using rule 63 (unario -> prefixo_decremento .)
    DIV             reduce using rule 63 (unario -> prefixo_decremento .)
    DIVI            reduce using rule 63 (unario -> prefixo_decremento .)
    MOD             reduce using rule 63 (unario -> prefixo_decremento .)
    LCM             reduce using rule 63 (unario -> prefixo_decremento .)
    GCD             reduce using rule 63 (unario -> prefixo_decremento .)
    ADC             reduce using rule 63 (unario -> prefixo_decremento .)
    SUB             reduce using rule 63 (unario -> prefixo_decremento .)
    CONC            reduce using rule 63 (unario -> prefixo_decremento .)
    IGUAL_DP        reduce using rule 63 (unario -> prefixo_decremento .)
    DIF             reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MENOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR_IGL       reduce using rule 63 (unario -> prefixo_decremento .)
    LESSEQUAL       reduce using rule 63 (unario -> prefixo_decremento .)
    SMARTMATCH      reduce using rule 63 (unario -> prefixo_decremento .)
    AND_S           reduce using rule 63 (unario -> prefixo_decremento .)
    PONTO_VIRGULA   reduce using rule 63 (unario -> prefixo_decremento .)
    OR_S            reduce using rule 63 (unario -> prefixo_decremento .)
    XOR_S           reduce using rule 63 (unario -> prefixo_decremento .)
    RPAREN          reduce using rule 63 (unario -> prefixo_decremento .)
    ABRE_CHAVE      reduce using rule 63 (unario -> prefixo_decremento .)
    COMMA           reduce using rule 63 (unario -> prefixo_decremento .)


state 127

    (64) unario -> posfixo_decremento .

    POW             reduce using rule 64 (unario -> posfixo_decremento .)
    MULT            reduce using rule 64 (unario -> posfixo_decremento .)
    DIVIDE          reduce using rule 64 (unario -> posfixo_decremento .)
    DIV             reduce using rule 64 (unario -> posfixo_decremento .)
    DIVI            reduce using rule 64 (unario -> posfixo_decremento .)
    MOD             reduce using rule 64 (unario -> posfixo_decremento .)
    LCM             reduce using rule 64 (unario -> posfixo_decremento .)
    GCD             reduce using rule 64 (unario -> posfixo_decremento .)
    ADC             reduce using rule 64 (unario -> posfixo_decremento .)
    SUB             reduce using rule 64 (unario -> posfixo_decremento .)
    CONC            reduce using rule 64 (unario -> posfixo_decremento .)
    IGUAL_DP        reduce using rule 64 (unario -> posfixo_decremento .)
    DIF             reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MENOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR_IGL       reduce using rule 64 (unario -> posfixo_decremento .)
    LESSEQUAL       reduce using rule 64 (unario -> posfixo_decremento .)
    SMARTMATCH      reduce using rule 64 (unario -> posfixo_decremento .)
    AND_S           reduce using rule 64 (unario -> posfixo_decremento .)
    PONTO_VIRGULA   reduce using rule 64 (unario -> posfixo_decremento .)
    OR_S            reduce using rule 64 (unario -> posfixo_decremento .)
    XOR_S           reduce using rule 64 (unario -> posfixo_decremento .)
    RPAREN          reduce using rule 64 (unario -> posfixo_decremento .)
    ABRE_CHAVE      reduce using rule 64 (unario -> posfixo_decremento .)
    COMMA           reduce using rule 64 (unario -> posfixo_decremento .)


state 128

    (69) operando -> parenteses .

    POW             reduce using rule 69 (operando -> parenteses .)
    MULT            reduce using rule 69 (operando -> parenteses .)
    DIVIDE          reduce using rule 69 (operando -> parenteses .)
    DIV             reduce using rule 69 (operando -> parenteses .)
    DIVI            reduce using rule 69 (operando -> parenteses .)
    MOD             reduce using rule 69 (operando -> parenteses .)
    LCM             reduce using rule 69 (operando -> parenteses .)
    GCD             reduce using rule 69 (operando -> parenteses .)
    ADC             reduce using rule 69 (operando -> parenteses .)
    SUB             reduce using rule 69 (operando -> parenteses .)
    CONC            reduce using rule 69 (operando -> parenteses .)
    IGUAL_DP        reduce using rule 69 (operando -> parenteses .)
    DIF             reduce using rule 69 (operando -> parenteses .)
    MAIOR           reduce using rule 69 (operando -> parenteses .)
    MENOR           reduce using rule 69 (operando -> parenteses .)
    MAIOR_IGL       reduce using rule 69 (operando -> parenteses .)
    LESSEQUAL       reduce using rule 69 (operando -> parenteses .)
    SMARTMATCH      reduce using rule 69 (operando -> parenteses .)
    AND_S           reduce using rule 69 (operando -> parenteses .)
    PONTO_VIRGULA   reduce using rule 69 (operando -> parenteses .)
    OR_S            reduce using rule 69 (operando -> parenteses .)
    XOR_S           reduce using rule 69 (operando -> parenteses .)
    RPAREN          reduce using rule 69 (operando -> parenteses .)
    ABRE_CHAVE      reduce using rule 69 (operando -> parenteses .)
    COMMA           reduce using rule 69 (operando -> parenteses .)


state 129

    (70) operando -> completo .

    POW             reduce using rule 70 (operando -> completo .)
    MULT            reduce using rule 70 (operando -> completo .)
    DIVIDE          reduce using rule 70 (operando -> completo .)
    DIV             reduce using rule 70 (operando -> completo .)
    DIVI            reduce using rule 70 (operando -> completo .)
    MOD             reduce using rule 70 (operando -> completo .)
    LCM             reduce using rule 70 (operando -> completo .)
    GCD             reduce using rule 70 (operando -> completo .)
    ADC             reduce using rule 70 (operando -> completo .)
    SUB             reduce using rule 70 (operando -> completo .)
    CONC            reduce using rule 70 (operando -> completo .)
    IGUAL_DP        reduce using rule 70 (operando -> completo .)
    DIF             reduce using rule 70 (operando -> completo .)
    MAIOR           reduce using rule 70 (operando -> completo .)
    MENOR           reduce using rule 70 (operando -> completo .)
    MAIOR_IGL       reduce using rule 70 (operando -> completo .)
    LESSEQUAL       reduce using rule 70 (operando -> completo .)
    SMARTMATCH      reduce using rule 70 (operando -> completo .)
    AND_S           reduce using rule 70 (operando -> completo .)
    PONTO_VIRGULA   reduce using rule 70 (operando -> completo .)
    OR_S            reduce using rule 70 (operando -> completo .)
    XOR_S           reduce using rule 70 (operando -> completo .)
    RPAREN          reduce using rule 70 (operando -> completo .)
    ABRE_CHAVE      reduce using rule 70 (operando -> completo .)
    COMMA           reduce using rule 70 (operando -> completo .)


state 130

    (65) prefixo_incremento -> ADC_DP . escalar
    (90) escalar -> . ESCALAR

    ESCALAR         shift and go to state 146

    escalar                        shift and go to state 203

state 131

    (66) posfixo_incremento -> escalar . ADC_DP
    (68) posfixo_decremento -> escalar . DECREMENTO
    (75) completo -> escalar .

    ADC_DP          shift and go to state 204
    DECREMENTO      shift and go to state 205
    POW             reduce using rule 75 (completo -> escalar .)
    MULT            reduce using rule 75 (completo -> escalar .)
    DIVIDE          reduce using rule 75 (completo -> escalar .)
    DIV             reduce using rule 75 (completo -> escalar .)
    DIVI            reduce using rule 75 (completo -> escalar .)
    MOD             reduce using rule 75 (completo -> escalar .)
    LCM             reduce using rule 75 (completo -> escalar .)
    GCD             reduce using rule 75 (completo -> escalar .)
    ADC             reduce using rule 75 (completo -> escalar .)
    SUB             reduce using rule 75 (completo -> escalar .)
    CONC            reduce using rule 75 (completo -> escalar .)
    IGUAL_DP        reduce using rule 75 (completo -> escalar .)
    DIF             reduce using rule 75 (completo -> escalar .)
    MAIOR           reduce using rule 75 (completo -> escalar .)
    MENOR           reduce using rule 75 (completo -> escalar .)
    MAIOR_IGL       reduce using rule 75 (completo -> escalar .)
    LESSEQUAL       reduce using rule 75 (completo -> escalar .)
    SMARTMATCH      reduce using rule 75 (completo -> escalar .)
    AND_S           reduce using rule 75 (completo -> escalar .)
    PONTO_VIRGULA   reduce using rule 75 (completo -> escalar .)
    OR_S            reduce using rule 75 (completo -> escalar .)
    XOR_S           reduce using rule 75 (completo -> escalar .)
    RPAREN          reduce using rule 75 (completo -> escalar .)
    ABRE_CHAVE      reduce using rule 75 (completo -> escalar .)
    COMMA           reduce using rule 75 (completo -> escalar .)


state 132

    (67) prefixo_decremento -> DECREMENTO . escalar
    (90) escalar -> . ESCALAR

    ESCALAR         shift and go to state 146

    escalar                        shift and go to state 206

state 133

    (72) completo -> tipo .

    POW             reduce using rule 72 (completo -> tipo .)
    MULT            reduce using rule 72 (completo -> tipo .)
    DIVIDE          reduce using rule 72 (completo -> tipo .)
    DIV             reduce using rule 72 (completo -> tipo .)
    DIVI            reduce using rule 72 (completo -> tipo .)
    MOD             reduce using rule 72 (completo -> tipo .)
    LCM             reduce using rule 72 (completo -> tipo .)
    GCD             reduce using rule 72 (completo -> tipo .)
    ADC             reduce using rule 72 (completo -> tipo .)
    SUB             reduce using rule 72 (completo -> tipo .)
    CONC            reduce using rule 72 (completo -> tipo .)
    IGUAL_DP        reduce using rule 72 (completo -> tipo .)
    DIF             reduce using rule 72 (completo -> tipo .)
    MAIOR           reduce using rule 72 (completo -> tipo .)
    MENOR           reduce using rule 72 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 72 (completo -> tipo .)
    LESSEQUAL       reduce using rule 72 (completo -> tipo .)
    SMARTMATCH      reduce using rule 72 (completo -> tipo .)
    AND_S           reduce using rule 72 (completo -> tipo .)
    PONTO_VIRGULA   reduce using rule 72 (completo -> tipo .)
    OR_S            reduce using rule 72 (completo -> tipo .)
    XOR_S           reduce using rule 72 (completo -> tipo .)
    RPAREN          reduce using rule 72 (completo -> tipo .)
    ABRE_CHAVE      reduce using rule 72 (completo -> tipo .)
    COMMA           reduce using rule 72 (completo -> tipo .)


state 134

    (73) completo -> chamada_funcao .

    POW             reduce using rule 73 (completo -> chamada_funcao .)
    MULT            reduce using rule 73 (completo -> chamada_funcao .)
    DIVIDE          reduce using rule 73 (completo -> chamada_funcao .)
    DIV             reduce using rule 73 (completo -> chamada_funcao .)
    DIVI            reduce using rule 73 (completo -> chamada_funcao .)
    MOD             reduce using rule 73 (completo -> chamada_funcao .)
    LCM             reduce using rule 73 (completo -> chamada_funcao .)
    GCD             reduce using rule 73 (completo -> chamada_funcao .)
    ADC             reduce using rule 73 (completo -> chamada_funcao .)
    SUB             reduce using rule 73 (completo -> chamada_funcao .)
    CONC            reduce using rule 73 (completo -> chamada_funcao .)
    IGUAL_DP        reduce using rule 73 (completo -> chamada_funcao .)
    DIF             reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR           reduce using rule 73 (completo -> chamada_funcao .)
    MENOR           reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR_IGL       reduce using rule 73 (completo -> chamada_funcao .)
    LESSEQUAL       reduce using rule 73 (completo -> chamada_funcao .)
    SMARTMATCH      reduce using rule 73 (completo -> chamada_funcao .)
    AND_S           reduce using rule 73 (completo -> chamada_funcao .)
    PONTO_VIRGULA   reduce using rule 73 (completo -> chamada_funcao .)
    OR_S            reduce using rule 73 (completo -> chamada_funcao .)
    XOR_S           reduce using rule 73 (completo -> chamada_funcao .)
    RPAREN          reduce using rule 73 (completo -> chamada_funcao .)
    ABRE_CHAVE      reduce using rule 73 (completo -> chamada_funcao .)
    COMMA           reduce using rule 73 (completo -> chamada_funcao .)


state 135

    (74) completo -> chamada_funcao_sem_parametro .

    POW             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MULT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVIDE          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIV             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVI            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MOD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LCM             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    GCD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ADC             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SUB             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    CONC            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IGUAL_DP        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIF             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MENOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR_IGL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LESSEQUAL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SMARTMATCH      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    AND_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    PONTO_VIRGULA   reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    OR_S            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    XOR_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    RPAREN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ABRE_CHAVE      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    COMMA           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)


state 136

    (77) tipo -> float .

    POW             reduce using rule 77 (tipo -> float .)
    MULT            reduce using rule 77 (tipo -> float .)
    DIVIDE          reduce using rule 77 (tipo -> float .)
    DIV             reduce using rule 77 (tipo -> float .)
    DIVI            reduce using rule 77 (tipo -> float .)
    MOD             reduce using rule 77 (tipo -> float .)
    LCM             reduce using rule 77 (tipo -> float .)
    GCD             reduce using rule 77 (tipo -> float .)
    ADC             reduce using rule 77 (tipo -> float .)
    SUB             reduce using rule 77 (tipo -> float .)
    CONC            reduce using rule 77 (tipo -> float .)
    IGUAL_DP        reduce using rule 77 (tipo -> float .)
    DIF             reduce using rule 77 (tipo -> float .)
    MAIOR           reduce using rule 77 (tipo -> float .)
    MENOR           reduce using rule 77 (tipo -> float .)
    MAIOR_IGL       reduce using rule 77 (tipo -> float .)
    LESSEQUAL       reduce using rule 77 (tipo -> float .)
    SMARTMATCH      reduce using rule 77 (tipo -> float .)
    AND_S           reduce using rule 77 (tipo -> float .)
    PONTO_VIRGULA   reduce using rule 77 (tipo -> float .)
    OR_S            reduce using rule 77 (tipo -> float .)
    XOR_S           reduce using rule 77 (tipo -> float .)
    RPAREN          reduce using rule 77 (tipo -> float .)
    ABRE_CHAVE      reduce using rule 77 (tipo -> float .)
    COMMA           reduce using rule 77 (tipo -> float .)


state 137

    (78) tipo -> string .

    POW             reduce using rule 78 (tipo -> string .)
    MULT            reduce using rule 78 (tipo -> string .)
    DIVIDE          reduce using rule 78 (tipo -> string .)
    DIV             reduce using rule 78 (tipo -> string .)
    DIVI            reduce using rule 78 (tipo -> string .)
    MOD             reduce using rule 78 (tipo -> string .)
    LCM             reduce using rule 78 (tipo -> string .)
    GCD             reduce using rule 78 (tipo -> string .)
    ADC             reduce using rule 78 (tipo -> string .)
    SUB             reduce using rule 78 (tipo -> string .)
    CONC            reduce using rule 78 (tipo -> string .)
    IGUAL_DP        reduce using rule 78 (tipo -> string .)
    DIF             reduce using rule 78 (tipo -> string .)
    MAIOR           reduce using rule 78 (tipo -> string .)
    MENOR           reduce using rule 78 (tipo -> string .)
    MAIOR_IGL       reduce using rule 78 (tipo -> string .)
    LESSEQUAL       reduce using rule 78 (tipo -> string .)
    SMARTMATCH      reduce using rule 78 (tipo -> string .)
    AND_S           reduce using rule 78 (tipo -> string .)
    PONTO_VIRGULA   reduce using rule 78 (tipo -> string .)
    OR_S            reduce using rule 78 (tipo -> string .)
    XOR_S           reduce using rule 78 (tipo -> string .)
    RPAREN          reduce using rule 78 (tipo -> string .)
    ABRE_CHAVE      reduce using rule 78 (tipo -> string .)
    COMMA           reduce using rule 78 (tipo -> string .)


state 138

    (79) tipo -> boolean .

    POW             reduce using rule 79 (tipo -> boolean .)
    MULT            reduce using rule 79 (tipo -> boolean .)
    DIVIDE          reduce using rule 79 (tipo -> boolean .)
    DIV             reduce using rule 79 (tipo -> boolean .)
    DIVI            reduce using rule 79 (tipo -> boolean .)
    MOD             reduce using rule 79 (tipo -> boolean .)
    LCM             reduce using rule 79 (tipo -> boolean .)
    GCD             reduce using rule 79 (tipo -> boolean .)
    ADC             reduce using rule 79 (tipo -> boolean .)
    SUB             reduce using rule 79 (tipo -> boolean .)
    CONC            reduce using rule 79 (tipo -> boolean .)
    IGUAL_DP        reduce using rule 79 (tipo -> boolean .)
    DIF             reduce using rule 79 (tipo -> boolean .)
    MAIOR           reduce using rule 79 (tipo -> boolean .)
    MENOR           reduce using rule 79 (tipo -> boolean .)
    MAIOR_IGL       reduce using rule 79 (tipo -> boolean .)
    LESSEQUAL       reduce using rule 79 (tipo -> boolean .)
    SMARTMATCH      reduce using rule 79 (tipo -> boolean .)
    AND_S           reduce using rule 79 (tipo -> boolean .)
    PONTO_VIRGULA   reduce using rule 79 (tipo -> boolean .)
    OR_S            reduce using rule 79 (tipo -> boolean .)
    XOR_S           reduce using rule 79 (tipo -> boolean .)
    RPAREN          reduce using rule 79 (tipo -> boolean .)
    ABRE_CHAVE      reduce using rule 79 (tipo -> boolean .)
    COMMA           reduce using rule 79 (tipo -> boolean .)


state 139

    (86) inteiro -> INTEGER .

    POW             reduce using rule 86 (inteiro -> INTEGER .)
    MULT            reduce using rule 86 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 86 (inteiro -> INTEGER .)
    DIV             reduce using rule 86 (inteiro -> INTEGER .)
    DIVI            reduce using rule 86 (inteiro -> INTEGER .)
    MOD             reduce using rule 86 (inteiro -> INTEGER .)
    LCM             reduce using rule 86 (inteiro -> INTEGER .)
    GCD             reduce using rule 86 (inteiro -> INTEGER .)
    ADC             reduce using rule 86 (inteiro -> INTEGER .)
    SUB             reduce using rule 86 (inteiro -> INTEGER .)
    CONC            reduce using rule 86 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 86 (inteiro -> INTEGER .)
    DIF             reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 86 (inteiro -> INTEGER .)
    MENOR           reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 86 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 86 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 86 (inteiro -> INTEGER .)
    AND_S           reduce using rule 86 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 86 (inteiro -> INTEGER .)
    OR_S            reduce using rule 86 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 86 (inteiro -> INTEGER .)
    RPAREN          reduce using rule 86 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 86 (inteiro -> INTEGER .)
    INTERPOLACAO    reduce using rule 86 (inteiro -> INTEGER .)
    COMMA           reduce using rule 86 (inteiro -> INTEGER .)
    SETA            reduce using rule 86 (inteiro -> INTEGER .)


state 140

    (87) float -> FLOAT .

    POW             reduce using rule 87 (float -> FLOAT .)
    MULT            reduce using rule 87 (float -> FLOAT .)
    DIVIDE          reduce using rule 87 (float -> FLOAT .)
    DIV             reduce using rule 87 (float -> FLOAT .)
    DIVI            reduce using rule 87 (float -> FLOAT .)
    MOD             reduce using rule 87 (float -> FLOAT .)
    LCM             reduce using rule 87 (float -> FLOAT .)
    GCD             reduce using rule 87 (float -> FLOAT .)
    ADC             reduce using rule 87 (float -> FLOAT .)
    SUB             reduce using rule 87 (float -> FLOAT .)
    CONC            reduce using rule 87 (float -> FLOAT .)
    IGUAL_DP        reduce using rule 87 (float -> FLOAT .)
    DIF             reduce using rule 87 (float -> FLOAT .)
    MAIOR           reduce using rule 87 (float -> FLOAT .)
    MENOR           reduce using rule 87 (float -> FLOAT .)
    MAIOR_IGL       reduce using rule 87 (float -> FLOAT .)
    LESSEQUAL       reduce using rule 87 (float -> FLOAT .)
    SMARTMATCH      reduce using rule 87 (float -> FLOAT .)
    AND_S           reduce using rule 87 (float -> FLOAT .)
    PONTO_VIRGULA   reduce using rule 87 (float -> FLOAT .)
    OR_S            reduce using rule 87 (float -> FLOAT .)
    XOR_S           reduce using rule 87 (float -> FLOAT .)
    RPAREN          reduce using rule 87 (float -> FLOAT .)
    ABRE_CHAVE      reduce using rule 87 (float -> FLOAT .)
    COMMA           reduce using rule 87 (float -> FLOAT .)


state 141

    (88) string -> STRING .

    POW             reduce using rule 88 (string -> STRING .)
    MULT            reduce using rule 88 (string -> STRING .)
    DIVIDE          reduce using rule 88 (string -> STRING .)
    DIV             reduce using rule 88 (string -> STRING .)
    DIVI            reduce using rule 88 (string -> STRING .)
    MOD             reduce using rule 88 (string -> STRING .)
    LCM             reduce using rule 88 (string -> STRING .)
    GCD             reduce using rule 88 (string -> STRING .)
    ADC             reduce using rule 88 (string -> STRING .)
    SUB             reduce using rule 88 (string -> STRING .)
    CONC            reduce using rule 88 (string -> STRING .)
    IGUAL_DP        reduce using rule 88 (string -> STRING .)
    DIF             reduce using rule 88 (string -> STRING .)
    MAIOR           reduce using rule 88 (string -> STRING .)
    MENOR           reduce using rule 88 (string -> STRING .)
    MAIOR_IGL       reduce using rule 88 (string -> STRING .)
    LESSEQUAL       reduce using rule 88 (string -> STRING .)
    SMARTMATCH      reduce using rule 88 (string -> STRING .)
    AND_S           reduce using rule 88 (string -> STRING .)
    PONTO_VIRGULA   reduce using rule 88 (string -> STRING .)
    OR_S            reduce using rule 88 (string -> STRING .)
    XOR_S           reduce using rule 88 (string -> STRING .)
    RPAREN          reduce using rule 88 (string -> STRING .)
    ABRE_CHAVE      reduce using rule 88 (string -> STRING .)
    COMMA           reduce using rule 88 (string -> STRING .)


state 142

    (2) lista_declaracoes -> lista_declaracoes declaracoes .

    MULTI           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ONLY            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    SAY             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    COMMENT         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    MY              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    OUR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FUNCTION        reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ESCALAR         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    IF              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LOOP            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FOR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    WHILE           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ABRE_CHAVE      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    BREAK           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    EXIT            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LAST            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEXT            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    REDO            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    RETURN          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    CONSTANT        reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STATE           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    IMPORT          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEED            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    REQUIRE         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    USE             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    PUSH            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    UNSHIFT         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    SPLICE          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    INT             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NOT             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEGAC           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ADC_DP          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    DECREMENTO      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LPAREN          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ID              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    INTEGER         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FLOAT           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STRING          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    BOOLEAN         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LIST            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    $end            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FECHA_CHAVE     reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)


state 143

    (180) declaracao_multi -> MULTI ID . LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> MULTI ID . LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    LPAREN          shift and go to state 207


state 144

    (112) chamada_funcao -> ID LPAREN . chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> ID LPAREN . RPAREN
    (114) chamada_funcao_auxiliar -> . chamada_funcao_auxiliar COMMA exp_2
    (115) chamada_funcao_auxiliar -> . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    RPAREN          shift and go to state 209
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    chamada_funcao_auxiliar        shift and go to state 208
    exp_2                          shift and go to state 210
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 145

    (71) parenteses -> LPAREN exp_2 . RPAREN
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          shift and go to state 211
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 146

    (90) escalar -> ESCALAR .

    ADC_DP          reduce using rule 90 (escalar -> ESCALAR .)
    DECREMENTO      reduce using rule 90 (escalar -> ESCALAR .)
    POW             reduce using rule 90 (escalar -> ESCALAR .)
    MULT            reduce using rule 90 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 90 (escalar -> ESCALAR .)
    DIV             reduce using rule 90 (escalar -> ESCALAR .)
    DIVI            reduce using rule 90 (escalar -> ESCALAR .)
    MOD             reduce using rule 90 (escalar -> ESCALAR .)
    LCM             reduce using rule 90 (escalar -> ESCALAR .)
    GCD             reduce using rule 90 (escalar -> ESCALAR .)
    ADC             reduce using rule 90 (escalar -> ESCALAR .)
    SUB             reduce using rule 90 (escalar -> ESCALAR .)
    CONC            reduce using rule 90 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 90 (escalar -> ESCALAR .)
    DIF             reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 90 (escalar -> ESCALAR .)
    MENOR           reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 90 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 90 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 90 (escalar -> ESCALAR .)
    AND_S           reduce using rule 90 (escalar -> ESCALAR .)
    RPAREN          reduce using rule 90 (escalar -> ESCALAR .)
    OR_S            reduce using rule 90 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 90 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 90 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 90 (escalar -> ESCALAR .)
    COMMA           reduce using rule 90 (escalar -> ESCALAR .)


state 147

    (122) bloco -> ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 212
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 148

    (182) declaracao_only -> ONLY ID . LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> ONLY ID . LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    LPAREN          shift and go to state 213


state 149

    (146) declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .

    MULTI           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ONLY            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    SAY             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    COMMENT         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    MY              reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    OUR             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FUNCTION        reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LOOP            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BREAK           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    EXIT            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LAST            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEXT            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    REDO            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    RETURN          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    CONSTANT        reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STATE           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IMPORT          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEED            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    REQUIRE         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    USE             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    PUSH            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    SPLICE          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INT             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STR             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NOT             reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEGAC           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LPAREN          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INTEGER         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FLOAT           reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LIST            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    $end            reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 146 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)


state 150

    (104) say -> SAY say_func . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 214


state 151

    (105) say_func -> exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 105 (say_func -> exp_2 .)
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 152

    (106) say_func -> LIST .

    PONTO_VIRGULA   reduce using rule 106 (say_func -> LIST .)


state 153

    (155) declaracao_de_expressao -> exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 155 (declaracao_de_expressao -> exp_2 PONTO_VIRGULA .)


state 154

    (9) or -> exp_2 OR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_3                          shift and go to state 215
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 155

    (10) xor -> exp_2 XOR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_3                          shift and go to state 216
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 156

    (91) declaracao_escalar_MY -> MY tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (94) declaracao_lista_MY -> MY tipo_opicional . LIST IGUAL lista_valores PONTO_VIRGULA

    ESCALAR         shift and go to state 217
    LIST            shift and go to state 218


state 157

    (93) declaracao_lista -> tipo_opicional LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 219


state 158

    (111) atribuicao -> ESCALAR IGUAL . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 220
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 159

    (92) declaracao_escalar_OUR -> OUR tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (95) declaracao_lista_OUR -> OUR tipo_opicional . LIST IGUAL lista_valores PONTO_VIRGULA

    ESCALAR         shift and go to state 221
    LIST            shift and go to state 222


state 160

    (107) funcao_com_params -> FUNCTION ID . LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> FUNCTION ID . LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    LPAREN          shift and go to state 223


state 161

    (116) condicional -> IF exp_2 . bloco
    (117) condicional -> IF exp_2 . bloco ELSE bloco
    (118) condicional -> IF exp_2 . bloco lista_elsif
    (119) condicional -> IF exp_2 . bloco lista_elsif ELSE bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155
    ABRE_CHAVE      shift and go to state 29

    bloco                          shift and go to state 224

state 162

    (102) loop -> LOOP LPAREN . declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA

    MY              shift and go to state 226

    declaracao_escalar_MY          shift and go to state 225

state 163

    (103) loop_sem_condicao -> LOOP ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes              shift and go to state 227
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 164

    (99) loop_for -> FOR inteiro . INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    INTERPOLACAO    shift and go to state 228


state 165

    (100) loop_for_com_lista -> FOR LIST . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 229


state 166

    (101) loop_while -> WHILE exp_2 . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    ABRE_CHAVE      shift and go to state 230
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 167

    (13) and -> exp_3 AND_S . exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_4                          shift and go to state 231
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 168

    (172) declaracao_break -> BREAK PONTO_VIRGULA .

    MULTI           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ONLY            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    SAY             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    COMMENT         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    MY              reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    OUR             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FUNCTION        reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ESCALAR         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    IF              reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LOOP            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FOR             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    WHILE           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    BREAK           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    EXIT            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LAST            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEXT            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    REDO            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    RETURN          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    CONSTANT        reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    STATE           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    IMPORT          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEED            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    REQUIRE         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    USE             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    PUSH            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    SPLICE          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    INT             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    STR             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NOT             reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEGAC           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ADC_DP          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LPAREN          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ID              reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    INTEGER         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FLOAT           reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    STRING          reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LIST            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    $end            reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 172 (declaracao_break -> BREAK PONTO_VIRGULA .)


state 169

    (173) declaracao_exit -> EXIT exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 232
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 170

    (174) declaracao_last -> LAST PONTO_VIRGULA .

    MULTI           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    ONLY            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    SAY             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    COMMENT         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    MY              reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    OUR             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    FUNCTION        reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    ESCALAR         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    IF              reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    LOOP            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    FOR             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    WHILE           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    BREAK           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    EXIT            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    LAST            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEXT            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    REDO            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    RETURN          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    CONSTANT        reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    STATE           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    IMPORT          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEED            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    REQUIRE         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    USE             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    PUSH            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    SPLICE          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    INT             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    STR             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    NOT             reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEGAC           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    ADC_DP          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    LPAREN          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    ID              reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    INTEGER         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    FLOAT           reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    STRING          reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    LIST            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    $end            reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 174 (declaracao_last -> LAST PONTO_VIRGULA .)


state 171

    (175) declaracao_next -> NEXT PONTO_VIRGULA .

    MULTI           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ONLY            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    SAY             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    COMMENT         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    MY              reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    OUR             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FUNCTION        reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ESCALAR         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    IF              reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LOOP            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FOR             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    WHILE           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    BREAK           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    EXIT            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LAST            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEXT            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    REDO            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    RETURN          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    CONSTANT        reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    STATE           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    IMPORT          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEED            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    REQUIRE         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    USE             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    PUSH            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    SPLICE          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    INT             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    STR             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NOT             reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEGAC           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ADC_DP          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LPAREN          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ID              reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    INTEGER         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FLOAT           reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    STRING          reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LIST            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    $end            reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 175 (declaracao_next -> NEXT PONTO_VIRGULA .)


state 172

    (176) declaracao_redo -> REDO IF . BOOLEAN PONTO_VIRGULA

    BOOLEAN         shift and go to state 233


state 173

    (177) declaracao_return -> RETURN exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 234
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 174

    (178) declaracao_constant -> CONSTANT ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 235


state 175

    (179) declaracao_state -> STATE ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 236


state 176

    (184) import -> IMPORT ID . MENOR ID MAIOR PONTO_VIRGULA

    MENOR           shift and go to state 237


state 177

    (185) need -> NEED ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 238


state 178

    (186) require -> REQUIRE ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 239


state 179

    (187) use -> USE ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 240


state 180

    (188) push -> PUSH LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 241


state 181

    (189) unshift -> UNSHIFT LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 242


state 182

    (190) splice -> SPLICE LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 243


state 183

    (22) igual_dp -> exp_4 IGUAL_DP . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 244
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 184

    (23) dif -> exp_4 DIF . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 245
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 185

    (24) maior -> exp_4 MAIOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 246
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 186

    (25) menor -> exp_4 MENOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 247
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 187

    (26) maior_igual -> exp_4 MAIOR_IGL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 248
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 188

    (27) menor_igual -> exp_4 LESSEQUAL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 249
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 189

    (28) smartmatch -> exp_4 SMARTMATCH . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_5                          shift and go to state 250
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 190

    (33) adicao -> exp_5 ADC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_6                          shift and go to state 251
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 191

    (34) subtracao -> exp_5 SUB . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_6                          shift and go to state 252
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 192

    (35) conc -> exp_5 CONC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_6                          shift and go to state 253
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 193

    (44) mult -> exp_6 MULT . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 254
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 194

    (45) divide -> exp_6 DIVIDE . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 255
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 195

    (46) div -> exp_6 DIV . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 256
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 196

    (47) divi -> exp_6 DIVI . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 257
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 197

    (48) mod -> exp_6 MOD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 258
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 198

    (49) lcm -> exp_6 LCM . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 259
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 199

    (50) gcd -> exp_6 GCD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_7                          shift and go to state 260
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 200

    (53) pow -> exp_7 POW . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_8                          shift and go to state 261
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 201

    (57) not_op -> NOT exp_8 .

    POW             reduce using rule 57 (not_op -> NOT exp_8 .)
    MULT            reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVIDE          reduce using rule 57 (not_op -> NOT exp_8 .)
    DIV             reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVI            reduce using rule 57 (not_op -> NOT exp_8 .)
    MOD             reduce using rule 57 (not_op -> NOT exp_8 .)
    LCM             reduce using rule 57 (not_op -> NOT exp_8 .)
    GCD             reduce using rule 57 (not_op -> NOT exp_8 .)
    ADC             reduce using rule 57 (not_op -> NOT exp_8 .)
    SUB             reduce using rule 57 (not_op -> NOT exp_8 .)
    CONC            reduce using rule 57 (not_op -> NOT exp_8 .)
    IGUAL_DP        reduce using rule 57 (not_op -> NOT exp_8 .)
    DIF             reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MENOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR_IGL       reduce using rule 57 (not_op -> NOT exp_8 .)
    LESSEQUAL       reduce using rule 57 (not_op -> NOT exp_8 .)
    SMARTMATCH      reduce using rule 57 (not_op -> NOT exp_8 .)
    AND_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    PONTO_VIRGULA   reduce using rule 57 (not_op -> NOT exp_8 .)
    OR_S            reduce using rule 57 (not_op -> NOT exp_8 .)
    XOR_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    RPAREN          reduce using rule 57 (not_op -> NOT exp_8 .)
    ABRE_CHAVE      reduce using rule 57 (not_op -> NOT exp_8 .)
    COMMA           reduce using rule 57 (not_op -> NOT exp_8 .)


state 202

    (58) not_s -> NEGAC exp_8 .

    POW             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MULT            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVIDE          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIV             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVI            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MOD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LCM             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    GCD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ADC             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SUB             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    CONC            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    IGUAL_DP        reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIF             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MENOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR_IGL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LESSEQUAL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SMARTMATCH      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    AND_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    PONTO_VIRGULA   reduce using rule 58 (not_s -> NEGAC exp_8 .)
    OR_S            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    XOR_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    RPAREN          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ABRE_CHAVE      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    COMMA           reduce using rule 58 (not_s -> NEGAC exp_8 .)


state 203

    (65) prefixo_incremento -> ADC_DP escalar .

    POW             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    MULT            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    DIVIDE          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    DIV             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    DIVI            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    MOD             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    LCM             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    GCD             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    ADC             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    SUB             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    CONC            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    IGUAL_DP        reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    DIF             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    MAIOR           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    MENOR           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    MAIOR_IGL       reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    LESSEQUAL       reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    SMARTMATCH      reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    AND_S           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    PONTO_VIRGULA   reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    OR_S            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    XOR_S           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    RPAREN          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    ABRE_CHAVE      reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)
    COMMA           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar .)


state 204

    (66) posfixo_incremento -> escalar ADC_DP .

    POW             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    MULT            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    DIVIDE          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    DIV             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    DIVI            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    MOD             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    LCM             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    GCD             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    ADC             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    SUB             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    CONC            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    IGUAL_DP        reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    DIF             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    MAIOR           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    MENOR           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    MAIOR_IGL       reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    LESSEQUAL       reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    SMARTMATCH      reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    AND_S           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    PONTO_VIRGULA   reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    OR_S            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    XOR_S           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    RPAREN          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    ABRE_CHAVE      reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)
    COMMA           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP .)


state 205

    (68) posfixo_decremento -> escalar DECREMENTO .

    POW             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    MULT            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    DIVIDE          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    DIV             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    DIVI            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    MOD             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    LCM             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    GCD             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    ADC             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    SUB             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    CONC            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    IGUAL_DP        reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    DIF             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    MAIOR           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    MENOR           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    MAIOR_IGL       reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    LESSEQUAL       reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    SMARTMATCH      reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    AND_S           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    PONTO_VIRGULA   reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    OR_S            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    XOR_S           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    RPAREN          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    ABRE_CHAVE      reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)
    COMMA           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO .)


state 206

    (67) prefixo_decremento -> DECREMENTO escalar .

    POW             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    MULT            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    DIVIDE          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    DIV             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    DIVI            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    MOD             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    LCM             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    GCD             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    ADC             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    SUB             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    CONC            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    IGUAL_DP        reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    DIF             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    MAIOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    MENOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    MAIOR_IGL       reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    LESSEQUAL       reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    SMARTMATCH      reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    AND_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    PONTO_VIRGULA   reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    OR_S            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    XOR_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    RPAREN          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    ABRE_CHAVE      reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)
    COMMA           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar .)


state 207

    (180) declaracao_multi -> MULTI ID LPAREN . parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> MULTI ID LPAREN . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) parametros -> . tipo_opicional ESCALAR
    (110) parametros -> . parametros COMMA tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    RPAREN          shift and go to state 263
    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)

    parametros                     shift and go to state 262
    tipo_opicional                 shift and go to state 264
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 208

    (112) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar . RPAREN
    (114) chamada_funcao_auxiliar -> chamada_funcao_auxiliar . COMMA exp_2

    RPAREN          shift and go to state 265
    COMMA           shift and go to state 266


state 209

    (113) chamada_funcao_sem_parametro -> ID LPAREN RPAREN .

    POW             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MULT            reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIV             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIVI            reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MOD             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LCM             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    GCD             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ADC             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SUB             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    CONC            reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    IGUAL_DP        reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIF             reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MAIOR           reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MENOR           reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MAIOR_IGL       reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SMARTMATCH      reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    AND_S           reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    PONTO_VIRGULA   reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    OR_S            reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    XOR_S           reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ABRE_CHAVE      reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 113 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)


state 210

    (115) chamada_funcao_auxiliar -> exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 115 (chamada_funcao_auxiliar -> exp_2 .)
    COMMA           reduce using rule 115 (chamada_funcao_auxiliar -> exp_2 .)
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 211

    (71) parenteses -> LPAREN exp_2 RPAREN .

    POW             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MULT            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVIDE          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIV             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVI            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MOD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LCM             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    GCD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ADC             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SUB             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    CONC            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    IGUAL_DP        reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIF             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MENOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR_IGL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LESSEQUAL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SMARTMATCH      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    AND_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    PONTO_VIRGULA   reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    OR_S            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    XOR_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    RPAREN          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ABRE_CHAVE      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    COMMA           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)


state 212

    (122) bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSE            reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSIF           reduce using rule 122 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 213

    (182) declaracao_only -> ONLY ID LPAREN . parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> ONLY ID LPAREN . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) parametros -> . tipo_opicional ESCALAR
    (110) parametros -> . parametros COMMA tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    RPAREN          shift and go to state 268
    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)

    parametros                     shift and go to state 267
    tipo_opicional                 shift and go to state 264
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 214

    (104) say -> SAY say_func PONTO_VIRGULA .

    MULTI           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    ONLY            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    SAY             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    COMMENT         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    MY              reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    OUR             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    FUNCTION        reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    ESCALAR         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    IF              reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    LOOP            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    FOR             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    WHILE           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    BREAK           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    EXIT            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    LAST            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    NEXT            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    REDO            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    RETURN          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    CONSTANT        reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    STATE           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    IMPORT          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    NEED            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    REQUIRE         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    USE             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    PUSH            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    SPLICE          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    INT             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    STR             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    NOT             reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    NEGAC           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    ADC_DP          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    LPAREN          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    ID              reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    INTEGER         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    FLOAT           reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    STRING          reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    LIST            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    $end            reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 104 (say -> SAY say_func PONTO_VIRGULA .)


state 215

    (9) or -> exp_2 OR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    OR_S            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    XOR_S           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    RPAREN          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    COMMA           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    AND_S           shift and go to state 167


state 216

    (10) xor -> exp_2 XOR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    PONTO_VIRGULA   reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    OR_S            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    XOR_S           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    RPAREN          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    COMMA           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    AND_S           shift and go to state 167


state 217

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 269


state 218

    (94) declaracao_lista_MY -> MY tipo_opicional LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 270


state 219

    (93) declaracao_lista -> tipo_opicional LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 271
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 220

    (111) atribuicao -> ESCALAR IGUAL exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 111 (atribuicao -> ESCALAR IGUAL exp_2 .)
    RPAREN          reduce using rule 111 (atribuicao -> ESCALAR IGUAL exp_2 .)
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 221

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 274


state 222

    (95) declaracao_lista_OUR -> OUR tipo_opicional LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 275


state 223

    (107) funcao_com_params -> FUNCTION ID LPAREN . parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> FUNCTION ID LPAREN . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) parametros -> . tipo_opicional ESCALAR
    (110) parametros -> . parametros COMMA tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    RPAREN          shift and go to state 277
    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)

    parametros                     shift and go to state 276
    tipo_opicional                 shift and go to state 264
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 224

    (116) condicional -> IF exp_2 bloco .
    (117) condicional -> IF exp_2 bloco . ELSE bloco
    (118) condicional -> IF exp_2 bloco . lista_elsif
    (119) condicional -> IF exp_2 bloco . lista_elsif ELSE bloco
    (120) lista_elsif -> . ELSIF exp_2 bloco
    (121) lista_elsif -> . lista_elsif ELSIF exp_2 bloco

    MULTI           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ONLY            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    SAY             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    COMMENT         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    MY              reduce using rule 116 (condicional -> IF exp_2 bloco .)
    OUR             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    FUNCTION        reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ESCALAR         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    IF              reduce using rule 116 (condicional -> IF exp_2 bloco .)
    LOOP            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    FOR             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    WHILE           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 116 (condicional -> IF exp_2 bloco .)
    BREAK           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    EXIT            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    LAST            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    NEXT            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    REDO            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    RETURN          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    CONSTANT        reduce using rule 116 (condicional -> IF exp_2 bloco .)
    STATE           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    IMPORT          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    NEED            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    REQUIRE         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    USE             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    PUSH            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    UNSHIFT         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    SPLICE          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    INT             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    STR             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    NOT             reduce using rule 116 (condicional -> IF exp_2 bloco .)
    NEGAC           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ADC_DP          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    DECREMENTO      reduce using rule 116 (condicional -> IF exp_2 bloco .)
    LPAREN          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ID              reduce using rule 116 (condicional -> IF exp_2 bloco .)
    INTEGER         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    FLOAT           reduce using rule 116 (condicional -> IF exp_2 bloco .)
    STRING          reduce using rule 116 (condicional -> IF exp_2 bloco .)
    BOOLEAN         reduce using rule 116 (condicional -> IF exp_2 bloco .)
    LIST            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    $end            reduce using rule 116 (condicional -> IF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 116 (condicional -> IF exp_2 bloco .)
    ELSE            shift and go to state 278
    ELSIF           shift and go to state 280

    lista_elsif                    shift and go to state 279

state 225

    (102) loop -> LOOP LPAREN declaracao_escalar_MY . exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 281
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 226

    (91) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 282
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 227

    (103) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 283
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 228

    (99) loop_for -> FOR inteiro INTERPOLACAO . inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (86) inteiro -> . INTEGER

    INTEGER         shift and go to state 139

    inteiro                        shift and go to state 284

state 229

    (100) loop_for_com_lista -> FOR LIST SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 285


state 230

    (101) loop_while -> WHILE exp_2 ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 42
    lista_declaracoes              shift and go to state 286
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 231

    (13) and -> exp_3 AND_S exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    PONTO_VIRGULA   reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    OR_S            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    XOR_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    RPAREN          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ABRE_CHAVE      reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    COMMA           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    IGUAL_DP        shift and go to state 183
    DIF             shift and go to state 184
    MAIOR           shift and go to state 185
    MENOR           shift and go to state 186
    MAIOR_IGL       shift and go to state 187
    LESSEQUAL       shift and go to state 188
    SMARTMATCH      shift and go to state 189


state 232

    (173) declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 173 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)


state 233

    (176) declaracao_redo -> REDO IF BOOLEAN . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 287


state 234

    (177) declaracao_return -> RETURN exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 177 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)


state 235

    (178) declaracao_constant -> CONSTANT ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 288
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 236

    (179) declaracao_state -> STATE ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 289
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 237

    (184) import -> IMPORT ID MENOR . ID MAIOR PONTO_VIRGULA

    ID              shift and go to state 290


state 238

    (185) need -> NEED ID PONTO_VIRGULA .

    MULTI           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    ONLY            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    SAY             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    COMMENT         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    MY              reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    OUR             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    IF              reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    LOOP            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    FOR             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    WHILE           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    BREAK           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    EXIT            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    LAST            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    NEXT            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    REDO            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    RETURN          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    STATE           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    NEED            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    USE             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    PUSH            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    INT             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    STR             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    NOT             reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    ID              reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    STRING          reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    LIST            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    $end            reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 185 (need -> NEED ID PONTO_VIRGULA .)


state 239

    (186) require -> REQUIRE ID PONTO_VIRGULA .

    MULTI           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    ONLY            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    SAY             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    COMMENT         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    MY              reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    OUR             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    IF              reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    LOOP            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    FOR             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    WHILE           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    BREAK           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    EXIT            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    LAST            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEXT            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    REDO            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    RETURN          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    STATE           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEED            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    USE             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    PUSH            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    INT             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    STR             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    NOT             reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    ID              reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    STRING          reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    LIST            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    $end            reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 186 (require -> REQUIRE ID PONTO_VIRGULA .)


state 240

    (187) use -> USE ID PONTO_VIRGULA .

    MULTI           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    ONLY            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    SAY             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    COMMENT         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    MY              reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    OUR             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    IF              reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    LOOP            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    FOR             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    WHILE           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    BREAK           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    EXIT            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    LAST            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    NEXT            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    REDO            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    RETURN          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    STATE           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    NEED            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    USE             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    PUSH            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    INT             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    STR             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    NOT             reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    ID              reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    STRING          reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    LIST            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    $end            reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 187 (use -> USE ID PONTO_VIRGULA .)


state 241

    (188) push -> PUSH LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 291
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 242

    (189) unshift -> UNSHIFT LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 292
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 243

    (190) splice -> SPLICE LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 293
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 244

    (22) igual_dp -> exp_4 IGUAL_DP exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DIF             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MENOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR_IGL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LESSEQUAL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SMARTMATCH      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    AND_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PONTO_VIRGULA   reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OR_S            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    XOR_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RPAREN          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ABRE_CHAVE      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    COMMA           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 245

    (23) dif -> exp_4 DIF exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    DIF             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MENOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR_IGL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LESSEQUAL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    SMARTMATCH      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    AND_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    PONTO_VIRGULA   reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    OR_S            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    XOR_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    RPAREN          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ABRE_CHAVE      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    COMMA           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 246

    (24) maior -> exp_4 MAIOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    DIF             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MENOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR_IGL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LESSEQUAL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    SMARTMATCH      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    AND_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    OR_S            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    XOR_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    RPAREN          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ABRE_CHAVE      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    COMMA           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 247

    (25) menor -> exp_4 MENOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    DIF             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MENOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR_IGL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LESSEQUAL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    SMARTMATCH      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    AND_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    OR_S            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    XOR_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    RPAREN          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ABRE_CHAVE      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    COMMA           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 248

    (26) maior_igual -> exp_4 MAIOR_IGL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DIF             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MENOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR_IGL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LESSEQUAL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SMARTMATCH      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    AND_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PONTO_VIRGULA   reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OR_S            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    XOR_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RPAREN          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ABRE_CHAVE      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    COMMA           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 249

    (27) menor_igual -> exp_4 LESSEQUAL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DIF             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MENOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR_IGL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LESSEQUAL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SMARTMATCH      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    AND_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PONTO_VIRGULA   reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OR_S            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    XOR_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RPAREN          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ABRE_CHAVE      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    COMMA           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 250

    (28) smartmatch -> exp_4 SMARTMATCH exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DIF             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MENOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR_IGL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LESSEQUAL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SMARTMATCH      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    AND_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PONTO_VIRGULA   reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OR_S            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    XOR_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RPAREN          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ABRE_CHAVE      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    COMMA           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC             shift and go to state 190
    SUB             shift and go to state 191
    CONC            shift and go to state 192


state 251

    (33) adicao -> exp_5 ADC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SUB             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    CONC            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    IGUAL_DP        reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    DIF             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MENOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR_IGL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LESSEQUAL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SMARTMATCH      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    AND_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    PONTO_VIRGULA   reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    OR_S            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    XOR_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    RPAREN          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ABRE_CHAVE      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    COMMA           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MULT            shift and go to state 193
    DIVIDE          shift and go to state 194
    DIV             shift and go to state 195
    DIVI            shift and go to state 196
    MOD             shift and go to state 197
    LCM             shift and go to state 198
    GCD             shift and go to state 199


state 252

    (34) subtracao -> exp_5 SUB exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SUB             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    CONC            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    IGUAL_DP        reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    DIF             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MENOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR_IGL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LESSEQUAL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SMARTMATCH      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    AND_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    PONTO_VIRGULA   reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    OR_S            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    XOR_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    RPAREN          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ABRE_CHAVE      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    COMMA           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MULT            shift and go to state 193
    DIVIDE          shift and go to state 194
    DIV             shift and go to state 195
    DIVI            shift and go to state 196
    MOD             shift and go to state 197
    LCM             shift and go to state 198
    GCD             shift and go to state 199


state 253

    (35) conc -> exp_5 CONC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SUB             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    CONC            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    IGUAL_DP        reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    DIF             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MENOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR_IGL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LESSEQUAL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SMARTMATCH      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    AND_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    PONTO_VIRGULA   reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    OR_S            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    XOR_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    RPAREN          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ABRE_CHAVE      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    COMMA           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MULT            shift and go to state 193
    DIVIDE          shift and go to state 194
    DIV             shift and go to state 195
    DIVI            shift and go to state 196
    MOD             shift and go to state 197
    LCM             shift and go to state 198
    GCD             shift and go to state 199


state 254

    (44) mult -> exp_6 MULT exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVIDE          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIV             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVI            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MOD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LCM             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    GCD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ADC             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SUB             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    CONC            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    IGUAL_DP        reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIF             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MENOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR_IGL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LESSEQUAL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SMARTMATCH      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    AND_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    PONTO_VIRGULA   reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    OR_S            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    XOR_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    RPAREN          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ABRE_CHAVE      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    COMMA           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    POW             shift and go to state 200


state 255

    (45) divide -> exp_6 DIVIDE exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVIDE          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIV             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVI            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MOD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LCM             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    GCD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ADC             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SUB             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    CONC            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    IGUAL_DP        reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIF             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MENOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR_IGL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LESSEQUAL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SMARTMATCH      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    AND_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    PONTO_VIRGULA   reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    OR_S            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    XOR_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    RPAREN          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ABRE_CHAVE      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    COMMA           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    POW             shift and go to state 200


state 256

    (46) div -> exp_6 DIV exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVIDE          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIV             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVI            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MOD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LCM             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    GCD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ADC             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SUB             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    CONC            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    IGUAL_DP        reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIF             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MENOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR_IGL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LESSEQUAL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SMARTMATCH      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    AND_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    PONTO_VIRGULA   reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    OR_S            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    XOR_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    RPAREN          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ABRE_CHAVE      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    COMMA           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    POW             shift and go to state 200


state 257

    (47) divi -> exp_6 DIVI exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVIDE          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIV             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVI            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MOD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LCM             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    GCD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ADC             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SUB             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    CONC            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    IGUAL_DP        reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIF             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MENOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR_IGL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LESSEQUAL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SMARTMATCH      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    AND_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    PONTO_VIRGULA   reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    OR_S            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    XOR_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    RPAREN          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ABRE_CHAVE      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    COMMA           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    POW             shift and go to state 200


state 258

    (48) mod -> exp_6 MOD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVIDE          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIV             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVI            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MOD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LCM             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    GCD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ADC             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SUB             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    CONC            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    IGUAL_DP        reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIF             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MENOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR_IGL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LESSEQUAL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SMARTMATCH      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    AND_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    PONTO_VIRGULA   reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    OR_S            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    XOR_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    RPAREN          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ABRE_CHAVE      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    COMMA           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    POW             shift and go to state 200


state 259

    (49) lcm -> exp_6 LCM exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVIDE          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIV             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVI            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MOD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LCM             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    GCD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ADC             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SUB             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    CONC            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    IGUAL_DP        reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIF             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MENOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR_IGL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LESSEQUAL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SMARTMATCH      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    AND_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    PONTO_VIRGULA   reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    OR_S            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    XOR_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    RPAREN          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ABRE_CHAVE      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    COMMA           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    POW             shift and go to state 200


state 260

    (50) gcd -> exp_6 GCD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVIDE          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIV             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVI            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MOD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LCM             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    GCD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ADC             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SUB             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    CONC            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    IGUAL_DP        reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIF             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MENOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR_IGL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LESSEQUAL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SMARTMATCH      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    AND_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    PONTO_VIRGULA   reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    OR_S            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    XOR_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    RPAREN          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ABRE_CHAVE      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    COMMA           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    POW             shift and go to state 200


state 261

    (53) pow -> exp_7 POW exp_8 .

    POW             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MULT            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVIDE          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIV             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVI            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MOD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LCM             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    GCD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ADC             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SUB             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    CONC            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    IGUAL_DP        reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIF             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MENOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR_IGL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LESSEQUAL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SMARTMATCH      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    AND_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    PONTO_VIRGULA   reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    OR_S            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    XOR_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    RPAREN          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ABRE_CHAVE      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    COMMA           reduce using rule 53 (pow -> exp_7 POW exp_8 .)


state 262

    (180) declaracao_multi -> MULTI ID LPAREN parametros . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (110) parametros -> parametros . COMMA tipo_opicional ESCALAR

    RPAREN          shift and go to state 294
    COMMA           shift and go to state 295


state 263

    (181) declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 296


state 264

    (109) parametros -> tipo_opicional . ESCALAR

    ESCALAR         shift and go to state 297


state 265

    (112) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .

    POW             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MULT            reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIVIDE          reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIV             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIVI            reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MOD             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LCM             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    GCD             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ADC             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SUB             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    CONC            reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    IGUAL_DP        reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIF             reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MAIOR           reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MENOR           reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MAIOR_IGL       reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LESSEQUAL       reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SMARTMATCH      reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    AND_S           reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    PONTO_VIRGULA   reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    OR_S            reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    XOR_S           reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    RPAREN          reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ABRE_CHAVE      reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    COMMA           reduce using rule 112 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)


state 266

    (114) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 298
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 267

    (182) declaracao_only -> ONLY ID LPAREN parametros . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (110) parametros -> parametros . COMMA tipo_opicional ESCALAR

    RPAREN          shift and go to state 299
    COMMA           shift and go to state 295


state 268

    (183) declaracao_only_sem_par -> ONLY ID LPAREN RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 300


state 269

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 301
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 270

    (94) declaracao_lista_MY -> MY tipo_opicional LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 302
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 271

    (93) declaracao_lista -> tipo_opicional LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 303
    COMMA           shift and go to state 304


state 272

    (98) lista_valores_base -> tipo .

    PONTO_VIRGULA   reduce using rule 98 (lista_valores_base -> tipo .)
    COMMA           reduce using rule 98 (lista_valores_base -> tipo .)


state 273

    (97) lista_valores -> lista_valores_base .

    PONTO_VIRGULA   reduce using rule 97 (lista_valores -> lista_valores_base .)
    COMMA           reduce using rule 97 (lista_valores -> lista_valores_base .)


state 274

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 305
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 275

    (95) declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_valores                  shift and go to state 306
    tipo                           shift and go to state 272
    lista_valores_base             shift and go to state 273
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 276

    (107) funcao_com_params -> FUNCTION ID LPAREN parametros . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (110) parametros -> parametros . COMMA tipo_opicional ESCALAR

    RPAREN          shift and go to state 307
    COMMA           shift and go to state 295


state 277

    (108) funcao_sem_params -> FUNCTION ID LPAREN RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 308


state 278

    (117) condicional -> IF exp_2 bloco ELSE . bloco
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 29

    bloco                          shift and go to state 309

state 279

    (118) condicional -> IF exp_2 bloco lista_elsif .
    (119) condicional -> IF exp_2 bloco lista_elsif . ELSE bloco
    (121) lista_elsif -> lista_elsif . ELSIF exp_2 bloco

    MULTI           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ONLY            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    SAY             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    COMMENT         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    MY              reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    OUR             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    FUNCTION        reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ESCALAR         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    IF              reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    LOOP            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    FOR             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    WHILE           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ABRE_CHAVE      reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    BREAK           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    EXIT            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    LAST            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    NEXT            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    REDO            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    RETURN          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    CONSTANT        reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    STATE           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    IMPORT          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    NEED            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    REQUIRE         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    USE             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    PUSH            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    UNSHIFT         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    SPLICE          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    INT             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    STR             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    NOT             reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    NEGAC           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ADC_DP          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    DECREMENTO      reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    LPAREN          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ID              reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    INTEGER         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    FLOAT           reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    STRING          reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    BOOLEAN         reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    LIST            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    $end            reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    FECHA_CHAVE     reduce using rule 118 (condicional -> IF exp_2 bloco lista_elsif .)
    ELSE            shift and go to state 310
    ELSIF           shift and go to state 311


state 280

    (120) lista_elsif -> ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 312
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 281

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 . PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 313
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 282

    (91) declaracao_escalar_MY -> MY tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 217


state 283

    (103) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 103 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 284

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 314


state 285

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 315


state 286

    (101) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 316
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 42
    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 287

    (176) declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .

    MULTI           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ONLY            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    SAY             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    COMMENT         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    MY              reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    OUR             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FUNCTION        reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ESCALAR         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    IF              reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LOOP            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FOR             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    WHILE           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    BREAK           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    EXIT            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LAST            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEXT            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    REDO            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    RETURN          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    CONSTANT        reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    STATE           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    IMPORT          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEED            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    REQUIRE         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    USE             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    PUSH            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    SPLICE          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    INT             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    STR             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NOT             reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEGAC           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ADC_DP          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LPAREN          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ID              reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    INTEGER         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FLOAT           reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    STRING          reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LIST            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    $end            reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 176 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)


state 288

    (178) declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 317
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 289

    (179) declaracao_state -> STATE ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 318
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 290

    (184) import -> IMPORT ID MENOR ID . MAIOR PONTO_VIRGULA

    MAIOR           shift and go to state 319


state 291

    (188) push -> PUSH LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 320
    COMMA           shift and go to state 304


state 292

    (189) unshift -> UNSHIFT LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 321
    COMMA           shift and go to state 304


state 293

    (190) splice -> SPLICE LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 322
    COMMA           shift and go to state 304


state 294

    (180) declaracao_multi -> MULTI ID LPAREN parametros RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 323


state 295

    (110) parametros -> parametros COMMA . tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 93
    STR             shift and go to state 94
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 324
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74

state 296

    (181) declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 325
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 297

    (109) parametros -> tipo_opicional ESCALAR .

    RPAREN          reduce using rule 109 (parametros -> tipo_opicional ESCALAR .)
    COMMA           reduce using rule 109 (parametros -> tipo_opicional ESCALAR .)


state 298

    (114) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 114 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .)
    COMMA           reduce using rule 114 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .)
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 299

    (182) declaracao_only -> ONLY ID LPAREN parametros RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 328


state 300

    (183) declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 329
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 301

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 330
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 302

    (94) declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 331
    COMMA           shift and go to state 304


state 303

    (93) declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 93 (declaracao_lista -> tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)


state 304

    (96) lista_valores -> lista_valores COMMA . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    tipo                           shift and go to state 332
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 305

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 333
    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155


state 306

    (95) declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 334
    COMMA           shift and go to state 304


state 307

    (107) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 335


state 308

    (108) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 336
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 309

    (117) condicional -> IF exp_2 bloco ELSE bloco .

    MULTI           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    ONLY            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    SAY             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    COMMENT         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    MY              reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    OUR             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    FUNCTION        reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    ESCALAR         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    IF              reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    LOOP            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    FOR             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    WHILE           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    ABRE_CHAVE      reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    BREAK           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    EXIT            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    LAST            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEXT            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    REDO            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    RETURN          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    CONSTANT        reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    STATE           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    IMPORT          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEED            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    REQUIRE         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    USE             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    PUSH            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    UNSHIFT         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    SPLICE          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    INT             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    STR             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    NOT             reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEGAC           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    ADC_DP          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    DECREMENTO      reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    LPAREN          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    ID              reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    INTEGER         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    FLOAT           reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    STRING          reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    BOOLEAN         reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    LIST            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    $end            reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)
    FECHA_CHAVE     reduce using rule 117 (condicional -> IF exp_2 bloco ELSE bloco .)


state 310

    (119) condicional -> IF exp_2 bloco lista_elsif ELSE . bloco
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 29

    bloco                          shift and go to state 337

state 311

    (121) lista_elsif -> lista_elsif ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ESCALAR         shift and go to state 146
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    exp_2                          shift and go to state 338
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    inteiro                        shift and go to state 67
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 312

    (120) lista_elsif -> ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155
    ABRE_CHAVE      shift and go to state 29

    bloco                          shift and go to state 339

state 313

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA . atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2

    ESCALAR         shift and go to state 341

    atribuicao                     shift and go to state 340

state 314

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 342


state 315

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes              shift and go to state 343
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 316

    (101) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 101 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 317

    (178) declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 178 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 318

    (179) declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 179 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 319

    (184) import -> IMPORT ID MENOR ID MAIOR . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 344


state 320

    (188) push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 188 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)


state 321

    (189) unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 189 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)


state 322

    (190) splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 190 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)


state 323

    (180) declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 345
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 324

    (110) parametros -> parametros COMMA tipo_opicional . ESCALAR

    ESCALAR         shift and go to state 346


state 325

    (181) declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 347


state 326

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes . declaracoes_para_funcoes
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracoes_para_funcoes       shift and go to state 348
    declaracoes                    shift and go to state 142
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 327

    (5) lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .
    (123) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 5 (lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .)
    SAY             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    COMMENT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    MULTI           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)


state 328

    (182) declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 349
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 329

    (183) declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 350


state 330

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 331

    (94) declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 94 (declaracao_lista_MY -> MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)


state 332

    (96) lista_valores -> lista_valores COMMA tipo .

    PONTO_VIRGULA   reduce using rule 96 (lista_valores -> lista_valores COMMA tipo .)
    COMMA           reduce using rule 96 (lista_valores -> lista_valores COMMA tipo .)


state 333

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    MULTI           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SAY             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    COMMENT         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INT             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STR             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 334

    (95) declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .

    MULTI           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SAY             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    COMMENT         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INT             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STR             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 95 (declaracao_lista_OUR -> OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA .)


state 335

    (107) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 63
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    lista_declaracoes_para_funcoes shift and go to state 351
    lista_declaracoes              shift and go to state 326
    declaracoes_para_funcoes       shift and go to state 327
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 336

    (108) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 352


state 337

    (119) condicional -> IF exp_2 bloco lista_elsif ELSE bloco .

    MULTI           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ONLY            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    SAY             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    COMMENT         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    MY              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    OUR             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FUNCTION        reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ESCALAR         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IF              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LOOP            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FOR             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    WHILE           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ABRE_CHAVE      reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BREAK           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    EXIT            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LAST            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEXT            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    REDO            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    RETURN          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    CONSTANT        reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STATE           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IMPORT          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEED            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    REQUIRE         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    USE             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    PUSH            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    UNSHIFT         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    SPLICE          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INT             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STR             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NOT             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEGAC           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ADC_DP          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    DECREMENTO      reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LPAREN          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ID              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INTEGER         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FLOAT           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STRING          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BOOLEAN         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LIST            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    $end            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FECHA_CHAVE     reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)


state 338

    (121) lista_elsif -> lista_elsif ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 154
    XOR_S           shift and go to state 155
    ABRE_CHAVE      shift and go to state 29

    bloco                          shift and go to state 353

state 339

    (120) lista_elsif -> ELSIF exp_2 bloco .

    ELSE            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    MULTI           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ONLY            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    SAY             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    COMMENT         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    MY              reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    OUR             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    IF              reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    LOOP            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    FOR             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    WHILE           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    BREAK           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    EXIT            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    LAST            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    NEXT            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    REDO            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    RETURN          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    CONSTANT        reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    STATE           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    IMPORT          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    NEED            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    REQUIRE         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    USE             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    PUSH            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    UNSHIFT         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    SPLICE          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    INT             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    STR             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    NOT             reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    ID              reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    STRING          reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    LIST            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    $end            reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 120 (lista_elsif -> ELSIF exp_2 bloco .)


state 340

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao . RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    RPAREN          shift and go to state 354


state 341

    (111) atribuicao -> ESCALAR . IGUAL exp_2

    IGUAL           shift and go to state 158


state 342

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 355


state 343

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 356
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 344

    (184) import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .

    MULTI           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ONLY            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    SAY             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    COMMENT         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    MY              reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    OUR             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FUNCTION        reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ESCALAR         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    IF              reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LOOP            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FOR             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    WHILE           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    BREAK           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    EXIT            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LAST            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEXT            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    REDO            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    RETURN          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    CONSTANT        reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    STATE           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    IMPORT          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEED            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    REQUIRE         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    USE             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    PUSH            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    SPLICE          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    INT             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    STR             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NOT             reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEGAC           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ADC_DP          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LPAREN          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ID              reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    INTEGER         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FLOAT           reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    STRING          reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LIST            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    $end            reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 184 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)


state 345

    (180) declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 357


state 346

    (110) parametros -> parametros COMMA tipo_opicional ESCALAR .

    RPAREN          reduce using rule 110 (parametros -> parametros COMMA tipo_opicional ESCALAR .)
    COMMA           reduce using rule 110 (parametros -> parametros COMMA tipo_opicional ESCALAR .)


state 347

    (181) declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 181 (declaracao_multi_sem_par -> MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 348

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .
    (123) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 4 (lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .)
    SAY             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    COMMENT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    MULTI           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STR             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 123 (declaracoes -> declaracoes_para_funcoes .)


state 349

    (182) declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 358


state 350

    (183) declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 183 (declaracao_only_sem_par -> ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 351

    (107) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 359


state 352

    (108) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 108 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 353

    (121) lista_elsif -> lista_elsif ELSIF exp_2 bloco .

    ELSE            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MULTI           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ONLY            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    SAY             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    COMMENT         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MY              reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    OUR             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IF              reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LOOP            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FOR             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    WHILE           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BREAK           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    EXIT            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LAST            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEXT            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    REDO            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    RETURN          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    CONSTANT        reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STATE           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IMPORT          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEED            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    REQUIRE         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    USE             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    PUSH            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    UNSHIFT         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    SPLICE          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INT             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STR             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NOT             reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ID              reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STRING          reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LIST            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    $end            reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 121 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)


state 354

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 360


state 355

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    inteiro                        shift and go to state 67
    lista_declaracoes              shift and go to state 361
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 356

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 357

    (180) declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 180 (declaracao_multi -> MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 358

    (182) declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 182 (declaracao_only -> ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 359

    (107) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    MULTI           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SAY             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    COMMENT         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INT             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STR             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 107 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 360

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracao_escalar_MY          shift and go to state 17
    exp_2                          shift and go to state 42
    atribuicao                     shift and go to state 33
    lista_declaracoes              shift and go to state 362
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 361

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 363
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    inteiro                        shift and go to state 67
    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_MY          shift and go to state 17
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    atribuicao                     shift and go to state 33
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    exp_2                          shift and go to state 42
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 362

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (123) declaracoes -> . declaracoes_para_funcoes
    (124) declaracoes -> . declaracao_multi
    (125) declaracoes -> . declaracao_multi_sem_par
    (126) declaracoes -> . declaracao_only
    (127) declaracoes -> . declaracao_only_sem_par
    (128) declaracoes -> . declaracao_de_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (130) declaracoes_para_funcoes -> . say
    (131) declaracoes_para_funcoes -> . comentario
    (132) declaracoes_para_funcoes -> . declaracao_de_condicional
    (133) declaracoes_para_funcoes -> . declaracao_loop
    (134) declaracoes_para_funcoes -> . declaracao_de_expressao
    (135) declaracoes_para_funcoes -> . declaracao_bloco
    (136) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (137) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (138) declaracoes_para_funcoes -> . declaracao_lista
    (139) declaracoes_para_funcoes -> . declaracao_lista_MY
    (140) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (142) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (143) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (144) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (180) declaracao_multi -> . MULTI ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (181) declaracao_multi_sem_par -> . MULTI ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (182) declaracao_only -> . ONLY ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (183) declaracao_only_sem_par -> . ONLY ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (147) declaracao_de_funcao -> . funcao_com_params
    (148) declaracao_de_funcao -> . funcao_sem_params
    (146) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (104) say -> . SAY say_func PONTO_VIRGULA
    (145) comentario -> . COMMENT
    (149) declaracao_de_condicional -> . condicional
    (150) declaracao_loop -> . loop
    (151) declaracao_loop -> . loop_for
    (152) declaracao_loop -> . loop_for_com_lista
    (153) declaracao_loop -> . loop_while
    (154) declaracao_loop -> . loop_sem_condicao
    (155) declaracao_de_expressao -> . exp_2 PONTO_VIRGULA
    (156) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR tipo_opicional LIST IGUAL lista_valores PONTO_VIRGULA
    (157) declaracao_de_controle_de_fluxo -> . declaracao_break
    (158) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (159) declaracao_de_controle_de_fluxo -> . declaracao_last
    (160) declaracao_de_controle_de_fluxo -> . declaracao_next
    (161) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (162) declaracao_de_controle_de_fluxo -> . declaracao_return
    (163) declaracao_de_controle_de_escopo -> . declaracao_constant
    (164) declaracao_de_controle_de_escopo -> . declaracao_state
    (165) declaracao_de_controle_de_modularizacao -> . import
    (166) declaracao_de_controle_de_modularizacao -> . need
    (167) declaracao_de_controle_de_modularizacao -> . require
    (168) declaracao_de_controle_de_modularizacao -> . use
    (169) declaracao_de_controle_de_lista -> . push
    (170) declaracao_de_controle_de_lista -> . unshift
    (171) declaracao_de_controle_de_lista -> . splice
    (107) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (108) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) atribuicao -> . ESCALAR IGUAL exp_2
    (116) condicional -> . IF exp_2 bloco
    (117) condicional -> . IF exp_2 bloco ELSE bloco
    (118) condicional -> . IF exp_2 bloco lista_elsif
    (119) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (102) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (103) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (122) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (172) declaracao_break -> . BREAK PONTO_VIRGULA
    (173) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (174) declaracao_last -> . LAST PONTO_VIRGULA
    (175) declaracao_next -> . NEXT PONTO_VIRGULA
    (176) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (177) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (178) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (179) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (184) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (185) need -> . NEED ID PONTO_VIRGULA
    (186) require -> . REQUIRE ID PONTO_VIRGULA
    (187) use -> . USE ID PONTO_VIRGULA
    (188) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (189) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (190) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar
    (66) posfixo_incremento -> . escalar ADC_DP
    (67) prefixo_decremento -> . DECREMENTO escalar
    (68) posfixo_decremento -> . escalar DECREMENTO
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (112) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (113) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 364
    MULTI           shift and go to state 26
    ONLY            shift and go to state 30
    SAY             shift and go to state 34
    COMMENT         shift and go to state 35
    MY              shift and go to state 44
    OUR             shift and go to state 47
    FUNCTION        shift and go to state 63
    ESCALAR         shift and go to state 46
    IF              shift and go to state 64
    LOOP            shift and go to state 65
    FOR             shift and go to state 66
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 29
    BREAK           shift and go to state 75
    EXIT            shift and go to state 76
    LAST            shift and go to state 77
    NEXT            shift and go to state 78
    REDO            shift and go to state 79
    RETURN          shift and go to state 81
    CONSTANT        shift and go to state 82
    STATE           shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    INT             shift and go to state 93
    STR             shift and go to state 94
    LIST            reduce using rule 85 (empty -> .)
    NOT             shift and go to state 120
    NEGAC           shift and go to state 121
    ADC_DP          shift and go to state 130
    DECREMENTO      shift and go to state 132
    LPAREN          shift and go to state 28
    ID              shift and go to state 27
    INTEGER         shift and go to state 139
    FLOAT           shift and go to state 140
    STRING          shift and go to state 141
    BOOLEAN         shift and go to state 80

    declaracao_escalar_MY          shift and go to state 17
    exp_2                          shift and go to state 42
    atribuicao                     shift and go to state 33
    declaracoes                    shift and go to state 142
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_multi               shift and go to state 5
    declaracao_multi_sem_par       shift and go to state 6
    declaracao_only                shift and go to state 7
    declaracao_only_sem_par        shift and go to state 8
    declaracao_de_funcao           shift and go to state 9
    declaracao_de_atribuicao       shift and go to state 10
    say                            shift and go to state 11
    comentario                     shift and go to state 12
    declaracao_de_condicional      shift and go to state 13
    declaracao_loop                shift and go to state 14
    declaracao_de_expressao        shift and go to state 15
    declaracao_bloco               shift and go to state 16
    declaracao_escalar_OUR         shift and go to state 18
    declaracao_lista               shift and go to state 19
    declaracao_lista_MY            shift and go to state 20
    declaracao_lista_OUR           shift and go to state 21
    declaracao_de_controle_de_fluxo shift and go to state 22
    declaracao_de_controle_de_escopo shift and go to state 23
    declaracao_de_controle_de_modularizacao shift and go to state 24
    declaracao_de_controle_de_lista shift and go to state 25
    funcao_com_params              shift and go to state 31
    funcao_sem_params              shift and go to state 32
    condicional                    shift and go to state 36
    loop                           shift and go to state 37
    loop_for                       shift and go to state 38
    loop_for_com_lista             shift and go to state 39
    loop_while                     shift and go to state 40
    loop_sem_condicao              shift and go to state 41
    bloco                          shift and go to state 43
    tipo_opicional                 shift and go to state 45
    declaracao_break               shift and go to state 48
    declaracao_exit                shift and go to state 49
    declaracao_last                shift and go to state 50
    declaracao_next                shift and go to state 51
    declaracao_redo                shift and go to state 52
    declaracao_return              shift and go to state 53
    declaracao_constant            shift and go to state 54
    declaracao_state               shift and go to state 55
    import                         shift and go to state 56
    need                           shift and go to state 57
    require                        shift and go to state 58
    use                            shift and go to state 59
    push                           shift and go to state 60
    unshift                        shift and go to state 61
    splice                         shift and go to state 62
    inteiro                        shift and go to state 67
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    tipo_opicional_int             shift and go to state 72
    tipo_opicional_str             shift and go to state 73
    empty                          shift and go to state 74
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 95
    dif                            shift and go to state 96
    maior                          shift and go to state 97
    menor                          shift and go to state 98
    maior_igual                    shift and go to state 99
    menor_igual                    shift and go to state 100
    smartmatch                     shift and go to state 101
    exp_5                          shift and go to state 102
    adicao                         shift and go to state 103
    subtracao                      shift and go to state 104
    conc                           shift and go to state 105
    exp_6                          shift and go to state 106
    mult                           shift and go to state 107
    divide                         shift and go to state 108
    div                            shift and go to state 109
    divi                           shift and go to state 110
    mod                            shift and go to state 111
    lcm                            shift and go to state 112
    gcd                            shift and go to state 113
    exp_7                          shift and go to state 114
    pow                            shift and go to state 115
    exp_8                          shift and go to state 116
    not_op                         shift and go to state 117
    not_s                          shift and go to state 118
    exp_9                          shift and go to state 119
    unario                         shift and go to state 122
    operando                       shift and go to state 123
    prefixo_incremento             shift and go to state 124
    posfixo_incremento             shift and go to state 125
    prefixo_decremento             shift and go to state 126
    posfixo_decremento             shift and go to state 127
    parenteses                     shift and go to state 128
    completo                       shift and go to state 129
    escalar                        shift and go to state 131
    tipo                           shift and go to state 133
    chamada_funcao                 shift and go to state 134
    chamada_funcao_sem_parametro   shift and go to state 135
    float                          shift and go to state 136
    string                         shift and go to state 137
    boolean                        shift and go to state 138

state 363

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 364

    (102) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    MULTI           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SAY             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    COMMENT         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INT             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STR             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 102 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)

