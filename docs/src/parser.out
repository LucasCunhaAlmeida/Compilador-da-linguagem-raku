Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    EXPORT
    KMARK
    MU
    NIL
    UNIT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> lista_declaracoes
Rule 2     lista_declaracoes -> lista_declaracoes declaracoes
Rule 3     lista_declaracoes -> declaracoes
Rule 4     lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes
Rule 5     lista_declaracoes_para_funcoes -> declaracoes_para_funcoes
Rule 6     exp_2 -> or
Rule 7     exp_2 -> xor
Rule 8     exp_2 -> exp_3
Rule 9     or -> exp_2 OR_S exp_3
Rule 10    xor -> exp_2 XOR_S exp_3
Rule 11    exp_3 -> and
Rule 12    exp_3 -> exp_4
Rule 13    and -> exp_3 AND_S exp_4
Rule 14    exp_4 -> igual_dp
Rule 15    exp_4 -> dif
Rule 16    exp_4 -> maior
Rule 17    exp_4 -> menor
Rule 18    exp_4 -> maior_igual
Rule 19    exp_4 -> menor_igual
Rule 20    exp_4 -> smartmatch
Rule 21    exp_4 -> exp_5
Rule 22    igual_dp -> exp_4 IGUAL_DP exp_5
Rule 23    dif -> exp_4 DIF exp_5
Rule 24    maior -> exp_4 MAIOR exp_5
Rule 25    menor -> exp_4 MENOR exp_5
Rule 26    maior_igual -> exp_4 MAIOR_IGL exp_5
Rule 27    menor_igual -> exp_4 LESSEQUAL exp_5
Rule 28    smartmatch -> exp_4 SMARTMATCH exp_5
Rule 29    exp_5 -> adicao
Rule 30    exp_5 -> subtracao
Rule 31    exp_5 -> conc
Rule 32    exp_5 -> exp_6
Rule 33    adicao -> exp_5 ADC exp_6
Rule 34    subtracao -> exp_5 SUB exp_6
Rule 35    conc -> exp_5 CONC exp_6
Rule 36    exp_6 -> mult
Rule 37    exp_6 -> divide
Rule 38    exp_6 -> div
Rule 39    exp_6 -> divi
Rule 40    exp_6 -> mod
Rule 41    exp_6 -> lcm
Rule 42    exp_6 -> gcd
Rule 43    exp_6 -> exp_7
Rule 44    mult -> exp_6 MULT exp_7
Rule 45    divide -> exp_6 DIVIDE exp_7
Rule 46    div -> exp_6 DIV exp_7
Rule 47    divi -> exp_6 DIVI exp_7
Rule 48    mod -> exp_6 MOD exp_7
Rule 49    lcm -> exp_6 LCM exp_7
Rule 50    gcd -> exp_6 GCD exp_7
Rule 51    exp_7 -> pow
Rule 52    exp_7 -> exp_8
Rule 53    pow -> exp_7 POW exp_8
Rule 54    exp_8 -> not_op
Rule 55    exp_8 -> not_s
Rule 56    exp_8 -> exp_9
Rule 57    not_op -> NOT exp_8
Rule 58    not_s -> NEGAC exp_8
Rule 59    exp_9 -> unario
Rule 60    exp_9 -> operando
Rule 61    unario -> prefixo_incremento
Rule 62    unario -> posfixo_incremento
Rule 63    unario -> prefixo_decremento
Rule 64    unario -> posfixo_decremento
Rule 65    prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA
Rule 66    posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA
Rule 67    prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA
Rule 68    posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA
Rule 69    operando -> parenteses
Rule 70    operando -> completo
Rule 71    parenteses -> LPAREN exp_2 RPAREN
Rule 72    completo -> tipo
Rule 73    completo -> chamada_funcao
Rule 74    completo -> chamada_funcao_sem_parametro
Rule 75    completo -> escalar
Rule 76    tipo -> inteiro
Rule 77    tipo -> float
Rule 78    tipo -> string
Rule 79    tipo -> boolean
Rule 80    tipo_opicional -> tipo_opicional_int
Rule 81    tipo_opicional -> tipo_opicional_str
Rule 82    tipo_opicional -> empty
Rule 83    tipo_opicional_int -> INT
Rule 84    tipo_opicional_str -> STR
Rule 85    empty -> <empty>
Rule 86    inteiro -> INTEGER
Rule 87    float -> FLOAT
Rule 88    string -> STRING
Rule 89    boolean -> BOOLEAN
Rule 90    escalar -> ESCALAR
Rule 91    declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 92    declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 93    declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA
Rule 94    declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA
Rule 95    declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA
Rule 96    lista_valores -> lista_valores COMMA tipo
Rule 97    lista_valores -> lista_valores_base
Rule 98    lista_valores_base -> tipo
Rule 99    loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 100   loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 101   loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 102   loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 103   loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 104   loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 105   say -> SAY say_func PONTO_VIRGULA
Rule 106   say_func -> exp_2
Rule 107   say_func -> LIST
Rule 108   funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 109   funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
Rule 110   parametros -> tipo_opicional ESCALAR
Rule 111   parametros -> parametros COMMA tipo_opicional ESCALAR
Rule 112   atribuicao -> ESCALAR IGUAL exp_2
Rule 113   chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN
Rule 114   chamada_funcao_sem_parametro -> ID LPAREN RPAREN
Rule 115   chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2
Rule 116   chamada_funcao_auxiliar -> exp_2
Rule 117   condicional -> IF exp_2 bloco
Rule 118   condicional -> IF exp_2 bloco ELSE bloco
Rule 119   condicional -> IF exp_2 bloco lista_elsif
Rule 120   condicional -> IF exp_2 bloco lista_elsif ELSE bloco
Rule 121   lista_elsif -> ELSIF exp_2 bloco
Rule 122   lista_elsif -> lista_elsif ELSIF exp_2 bloco
Rule 123   bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE
Rule 124   declaracoes -> declaracoes_para_funcoes
Rule 125   declaracoes -> declaracao_de_funcao
Rule 126   declaracoes_para_funcoes -> declaracao_de_atribuicao
Rule 127   declaracoes_para_funcoes -> say
Rule 128   declaracoes_para_funcoes -> declaracao_de_chamada_funcao
Rule 129   declaracoes_para_funcoes -> declaracao_de_condicional
Rule 130   declaracoes_para_funcoes -> declaracao_loop
Rule 131   declaracoes_para_funcoes -> declaracao_de_expressao
Rule 132   declaracoes_para_funcoes -> declaracao_bloco
Rule 133   declaracoes_para_funcoes -> declaracao_escalar_MY
Rule 134   declaracoes_para_funcoes -> declaracao_escalar_OUR
Rule 135   declaracoes_para_funcoes -> declaracao_lista
Rule 136   declaracoes_para_funcoes -> declaracao_lista_MY
Rule 137   declaracoes_para_funcoes -> declaracao_lista_OUR
Rule 138   declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo
Rule 139   declaracoes_para_funcoes -> declaracao_de_controle_de_escopo
Rule 140   declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao
Rule 141   declaracoes_para_funcoes -> declaracao_de_controle_de_lista
Rule 142   declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA
Rule 143   declaracao_de_funcao -> funcao_com_params
Rule 144   declaracao_de_funcao -> funcao_sem_params
Rule 145   declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA
Rule 146   declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA
Rule 147   declaracao_de_condicional -> condicional
Rule 148   declaracao_loop -> loop
Rule 149   declaracao_loop -> loop_for
Rule 150   declaracao_loop -> loop_for_com_lista
Rule 151   declaracao_loop -> loop_times
Rule 152   declaracao_loop -> loop_while
Rule 153   declaracao_loop -> loop_sem_condicao
Rule 154   declaracao_de_expressao -> exp_2
Rule 155   declaracao_bloco -> bloco
Rule 156   declaracao_de_controle_de_fluxo -> declaracao_break
Rule 157   declaracao_de_controle_de_fluxo -> declaracao_exit
Rule 158   declaracao_de_controle_de_fluxo -> declaracao_last
Rule 159   declaracao_de_controle_de_fluxo -> declaracao_next
Rule 160   declaracao_de_controle_de_fluxo -> declaracao_redo
Rule 161   declaracao_de_controle_de_fluxo -> declaracao_return
Rule 162   declaracao_de_controle_de_escopo -> declaracao_constant
Rule 163   declaracao_de_controle_de_escopo -> declaracao_state
Rule 164   declaracao_de_controle_de_escopo -> declaracao_let
Rule 165   declaracao_de_controle_de_escopo -> declaracao_multi
Rule 166   declaracao_de_controle_de_escopo -> declaracao_only
Rule 167   declaracao_de_controle_de_modularizacao -> import
Rule 168   declaracao_de_controle_de_modularizacao -> need
Rule 169   declaracao_de_controle_de_modularizacao -> require
Rule 170   declaracao_de_controle_de_modularizacao -> use
Rule 171   declaracao_de_controle_de_lista -> push
Rule 172   declaracao_de_controle_de_lista -> unshift
Rule 173   declaracao_de_controle_de_lista -> splice
Rule 174   declaracao_break -> BREAK PONTO_VIRGULA
Rule 175   declaracao_exit -> EXIT exp_2 PONTO_VIRGULA
Rule 176   declaracao_last -> LAST PONTO_VIRGULA
Rule 177   declaracao_next -> NEXT PONTO_VIRGULA
Rule 178   declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA
Rule 179   declaracao_return -> RETURN exp_2 PONTO_VIRGULA
Rule 180   declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 181   declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 182   declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
Rule 183   declaracao_multi -> MULTI declaracao_de_funcao
Rule 184   declaracao_only -> ONLY declaracao_de_funcao
Rule 185   import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
Rule 186   need -> NEED ID PONTO_VIRGULA
Rule 187   require -> REQUIRE ID PONTO_VIRGULA
Rule 188   use -> USE ID PONTO_VIRGULA
Rule 189   push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA
Rule 190   unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
Rule 191   splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA

Terminals, with rules where they appear

ABRE_CHAVE           : 99 100 101 102 103 104 108 109 123
ADC                  : 33
ADC_DP               : 65 66
AND_S                : 13
BOOLEAN              : 89 178
BREAK                : 174
COMMA                : 96 111 115 189 190 191
COMMENT              : 
CONC                 : 35
CONSTANT             : 180
DECREMENTO           : 67 68
DIF                  : 23
DIV                  : 46
DIVI                 : 47
DIVIDE               : 45
ELSE                 : 118 120
ELSIF                : 121 122
ESCALAR              : 90 91 92 99 100 101 110 111 112 180 181 182
EXIT                 : 175
EXPORT               : 
FECHA_CHAVE          : 99 100 101 102 103 104 108 109 123
FLOAT                : 87
FOR                  : 99 100
FUNCTION             : 108 109
GCD                  : 50
ID                   : 108 109 113 114 185 185 186 187 188
IF                   : 117 118 119 120 178
IGUAL                : 91 92 93 94 95 112 180 181 182
IGUAL_DP             : 22
IMPORT               : 185
INT                  : 83
INTEGER              : 86 101
INTERPOLACAO         : 99
KMARK                : 
LAST                 : 176
LCM                  : 49
LESSEQUAL            : 27
LET                  : 182
LIST                 : 93 94 95 100 107 189 190 191
LOOP                 : 103 104
LPAREN               : 71 103 108 109 113 114
MAIOR                : 24 185
MAIOR_IGL            : 26
MENOR                : 25 185
MOD                  : 48
MU                   : 
MULT                 : 44
MULTI                : 183
MY                   : 91 94
NEED                 : 186
NEGAC                : 58
NEXT                 : 177
NIL                  : 
NOT                  : 57
ONLY                 : 184
OR_S                 : 9
OUR                  : 92 95
PONTO_VIRGULA        : 65 66 67 68 91 92 93 94 95 103 105 142 145 146 174 175 176 177 178 179 180 181 182 185 186 187 188 189 190 191
POW                  : 53
PUSH                 : 189
REDO                 : 178
REQUIRE              : 187
RETURN               : 179
RPAREN               : 71 103 108 109 113 114
SAY                  : 105
SETA                 : 99 100 101
SMARTMATCH           : 28
SPLICE               : 191
STATE                : 181
STR                  : 84
STRING               : 88
SUB                  : 34
TIMES                : 101
UNIT                 : 
UNSHIFT              : 190
USE                  : 188
WHILE                : 102
XOR_S                : 10
error                : 

Nonterminals, with rules where they appear

adicao               : 29
and                  : 11
atribuicao           : 103 142
bloco                : 117 118 118 119 120 120 121 122 155
boolean              : 79
chamada_funcao       : 73 145
chamada_funcao_auxiliar : 113 115
chamada_funcao_sem_parametro : 74 146
completo             : 70
conc                 : 31
condicional          : 147
declaracao_bloco     : 132
declaracao_break     : 156
declaracao_constant  : 162
declaracao_de_atribuicao : 126
declaracao_de_chamada_funcao : 128
declaracao_de_condicional : 129
declaracao_de_controle_de_escopo : 139
declaracao_de_controle_de_fluxo : 138
declaracao_de_controle_de_lista : 141
declaracao_de_controle_de_modularizacao : 140
declaracao_de_expressao : 131
declaracao_de_funcao : 125 183 184
declaracao_escalar_MY : 103 133
declaracao_escalar_OUR : 134
declaracao_exit      : 157
declaracao_last      : 158
declaracao_let       : 164
declaracao_lista     : 135
declaracao_lista_MY  : 136
declaracao_lista_OUR : 137
declaracao_loop      : 130
declaracao_multi     : 165
declaracao_next      : 159
declaracao_only      : 166
declaracao_redo      : 160
declaracao_return    : 161
declaracao_state     : 163
declaracoes          : 2 3
declaracoes_para_funcoes : 4 5 124
dif                  : 15
div                  : 38
divi                 : 39
divide               : 37
empty                : 82
escalar              : 65 66 67 68 75
exp_2                : 9 10 71 91 92 102 103 106 112 115 116 117 118 119 120 121 122 154 175 179 180 181 182
exp_3                : 8 9 10 13
exp_4                : 12 13 22 23 24 25 26 27 28
exp_5                : 21 22 23 24 25 26 27 28 33 34 35
exp_6                : 32 33 34 35 44 45 46 47 48 49 50
exp_7                : 43 44 45 46 47 48 49 50 53
exp_8                : 52 53 57 58
exp_9                : 56
float                : 77
funcao_com_params    : 143
funcao_sem_params    : 144
gcd                  : 42
igual_dp             : 14
import               : 167
inteiro              : 76 99 99
lcm                  : 41
lista_declaracoes    : 1 2 4 99 100 101 102 103 104 123
lista_declaracoes_para_funcoes : 108 109
lista_elsif          : 119 120 122
lista_valores        : 93 94 95 96 189 190 191
lista_valores_base   : 97
loop                 : 148
loop_for             : 149
loop_for_com_lista   : 150
loop_sem_condicao    : 153
loop_times           : 151
loop_while           : 152
maior                : 16
maior_igual          : 18
menor                : 17
menor_igual          : 19
mod                  : 40
mult                 : 36
need                 : 168
not_op               : 54
not_s                : 55
operando             : 60
or                   : 6
parametros           : 108 111
parenteses           : 69
posfixo_decremento   : 64
posfixo_incremento   : 62
pow                  : 51
prefixo_decremento   : 63
prefixo_incremento   : 61
programa             : 0
push                 : 171
require              : 169
say                  : 127
say_func             : 105
smartmatch           : 20
splice               : 173
string               : 78
subtracao            : 30
tipo                 : 72 96 98
tipo_opicional       : 91 92 110 111
tipo_opicional_int   : 80
tipo_opicional_str   : 81
unario               : 59
unshift              : 172
use                  : 170
xor                  : 7

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . lista_declaracoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    programa                       shift and go to state 1
    lista_declaracoes              shift and go to state 2
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 1

    (0) S' -> programa .



state 2

    (1) programa -> lista_declaracoes .
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    $end            reduce using rule 1 (programa -> lista_declaracoes .)
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 3

    (3) lista_declaracoes -> declaracoes .

    SAY             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    MY              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    OUR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LIST            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FUNCTION        reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ESCALAR         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ID              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    IF              reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LOOP            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FOR             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    INTEGER         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    WHILE           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ABRE_CHAVE      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    BREAK           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    EXIT            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LAST            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEXT            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    REDO            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    RETURN          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    CONSTANT        reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STATE           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LET             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    MULTI           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ONLY            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    IMPORT          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEED            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    REQUIRE         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    USE             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    PUSH            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    UNSHIFT         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    SPLICE          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NOT             reduce using rule 3 (lista_declaracoes -> declaracoes .)
    NEGAC           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    ADC_DP          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    DECREMENTO      reduce using rule 3 (lista_declaracoes -> declaracoes .)
    LPAREN          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FLOAT           reduce using rule 3 (lista_declaracoes -> declaracoes .)
    STRING          reduce using rule 3 (lista_declaracoes -> declaracoes .)
    BOOLEAN         reduce using rule 3 (lista_declaracoes -> declaracoes .)
    $end            reduce using rule 3 (lista_declaracoes -> declaracoes .)
    FECHA_CHAVE     reduce using rule 3 (lista_declaracoes -> declaracoes .)


state 4

    (124) declaracoes -> declaracoes_para_funcoes .

    SAY             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LET             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MULTI           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    $end            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FECHA_CHAVE     reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)


state 5

    (125) declaracoes -> declaracao_de_funcao .

    SAY             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    MY              reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    OUR             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    LIST            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    FUNCTION        reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    ESCALAR         reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    ID              reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    IF              reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    LOOP            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    FOR             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    INTEGER         reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    WHILE           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    BREAK           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    EXIT            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    LAST            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    NEXT            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    REDO            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    RETURN          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    CONSTANT        reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    STATE           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    LET             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    MULTI           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    ONLY            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    IMPORT          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    NEED            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    REQUIRE         reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    USE             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    PUSH            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    UNSHIFT         reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    SPLICE          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    NOT             reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    NEGAC           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    ADC_DP          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    DECREMENTO      reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    LPAREN          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    FLOAT           reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    STRING          reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    BOOLEAN         reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    $end            reduce using rule 125 (declaracoes -> declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 125 (declaracoes -> declaracao_de_funcao .)


state 6

    (126) declaracoes_para_funcoes -> declaracao_de_atribuicao .

    SAY             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    MY              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    OUR             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LIST            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FUNCTION        reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ESCALAR         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ID              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    IF              reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LOOP            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FOR             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    INTEGER         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    WHILE           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ABRE_CHAVE      reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    BREAK           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    EXIT            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LAST            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEXT            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    REDO            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    RETURN          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    CONSTANT        reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STATE           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LET             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    MULTI           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ONLY            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    IMPORT          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEED            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    REQUIRE         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    USE             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    PUSH            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    UNSHIFT         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    SPLICE          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NOT             reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    NEGAC           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    ADC_DP          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    DECREMENTO      reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    LPAREN          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FLOAT           reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    STRING          reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    BOOLEAN         reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    $end            reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)
    FECHA_CHAVE     reduce using rule 126 (declaracoes_para_funcoes -> declaracao_de_atribuicao .)


state 7

    (127) declaracoes_para_funcoes -> say .

    SAY             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    MY              reduce using rule 127 (declaracoes_para_funcoes -> say .)
    OUR             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    LIST            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    FUNCTION        reduce using rule 127 (declaracoes_para_funcoes -> say .)
    ESCALAR         reduce using rule 127 (declaracoes_para_funcoes -> say .)
    ID              reduce using rule 127 (declaracoes_para_funcoes -> say .)
    IF              reduce using rule 127 (declaracoes_para_funcoes -> say .)
    LOOP            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    FOR             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    INTEGER         reduce using rule 127 (declaracoes_para_funcoes -> say .)
    WHILE           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    ABRE_CHAVE      reduce using rule 127 (declaracoes_para_funcoes -> say .)
    BREAK           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    EXIT            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    LAST            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    NEXT            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    REDO            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    RETURN          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    CONSTANT        reduce using rule 127 (declaracoes_para_funcoes -> say .)
    STATE           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    LET             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    MULTI           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    ONLY            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    IMPORT          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    NEED            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    REQUIRE         reduce using rule 127 (declaracoes_para_funcoes -> say .)
    USE             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    PUSH            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    UNSHIFT         reduce using rule 127 (declaracoes_para_funcoes -> say .)
    SPLICE          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    NOT             reduce using rule 127 (declaracoes_para_funcoes -> say .)
    NEGAC           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    ADC_DP          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    DECREMENTO      reduce using rule 127 (declaracoes_para_funcoes -> say .)
    LPAREN          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    FLOAT           reduce using rule 127 (declaracoes_para_funcoes -> say .)
    STRING          reduce using rule 127 (declaracoes_para_funcoes -> say .)
    BOOLEAN         reduce using rule 127 (declaracoes_para_funcoes -> say .)
    $end            reduce using rule 127 (declaracoes_para_funcoes -> say .)
    FECHA_CHAVE     reduce using rule 127 (declaracoes_para_funcoes -> say .)


state 8

    (128) declaracoes_para_funcoes -> declaracao_de_chamada_funcao .

    SAY             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    MY              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    OUR             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LIST            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FUNCTION        reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ESCALAR         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ID              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    IF              reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LOOP            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FOR             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    INTEGER         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    WHILE           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ABRE_CHAVE      reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    BREAK           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    EXIT            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LAST            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NEXT            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    REDO            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    RETURN          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    CONSTANT        reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    STATE           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LET             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    MULTI           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ONLY            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    IMPORT          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NEED            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    REQUIRE         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    USE             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    PUSH            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    UNSHIFT         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    SPLICE          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NOT             reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    NEGAC           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    ADC_DP          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    DECREMENTO      reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    LPAREN          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FLOAT           reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    STRING          reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    BOOLEAN         reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    $end            reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)
    FECHA_CHAVE     reduce using rule 128 (declaracoes_para_funcoes -> declaracao_de_chamada_funcao .)


state 9

    (129) declaracoes_para_funcoes -> declaracao_de_condicional .

    SAY             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    MY              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    OUR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LIST            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FUNCTION        reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ESCALAR         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ID              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    IF              reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LOOP            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FOR             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    INTEGER         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    WHILE           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ABRE_CHAVE      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    BREAK           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    EXIT            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LAST            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEXT            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    REDO            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    RETURN          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    CONSTANT        reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STATE           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LET             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    MULTI           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ONLY            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    IMPORT          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEED            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    REQUIRE         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    USE             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    PUSH            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    UNSHIFT         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    SPLICE          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NOT             reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    NEGAC           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    ADC_DP          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    DECREMENTO      reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    LPAREN          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FLOAT           reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    STRING          reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    BOOLEAN         reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    $end            reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)
    FECHA_CHAVE     reduce using rule 129 (declaracoes_para_funcoes -> declaracao_de_condicional .)


state 10

    (130) declaracoes_para_funcoes -> declaracao_loop .

    SAY             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    MY              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    OUR             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    LIST            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    FUNCTION        reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    ESCALAR         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    ID              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    IF              reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    LOOP            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    FOR             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    INTEGER         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    WHILE           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    ABRE_CHAVE      reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    BREAK           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    EXIT            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    LAST            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    NEXT            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    REDO            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    RETURN          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    CONSTANT        reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    STATE           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    LET             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    MULTI           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    ONLY            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    IMPORT          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    NEED            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    REQUIRE         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    USE             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    PUSH            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    UNSHIFT         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    SPLICE          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    NOT             reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    NEGAC           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    ADC_DP          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    DECREMENTO      reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    LPAREN          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    FLOAT           reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    STRING          reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    BOOLEAN         reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    $end            reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)
    FECHA_CHAVE     reduce using rule 130 (declaracoes_para_funcoes -> declaracao_loop .)


state 11

    (131) declaracoes_para_funcoes -> declaracao_de_expressao .

    SAY             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    MY              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    OUR             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LIST            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FUNCTION        reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ESCALAR         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ID              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    IF              reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LOOP            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FOR             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    INTEGER         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    WHILE           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ABRE_CHAVE      reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    BREAK           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    EXIT            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LAST            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEXT            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    REDO            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    RETURN          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    CONSTANT        reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STATE           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LET             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    MULTI           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ONLY            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    IMPORT          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEED            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    REQUIRE         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    USE             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    PUSH            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    UNSHIFT         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    SPLICE          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NOT             reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    NEGAC           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    ADC_DP          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    DECREMENTO      reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    LPAREN          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FLOAT           reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    STRING          reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    BOOLEAN         reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    $end            reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)
    FECHA_CHAVE     reduce using rule 131 (declaracoes_para_funcoes -> declaracao_de_expressao .)


state 12

    (132) declaracoes_para_funcoes -> declaracao_bloco .

    SAY             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    MY              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    OUR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    LIST            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    FUNCTION        reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    ESCALAR         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    ID              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    IF              reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    LOOP            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    FOR             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    INTEGER         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    WHILE           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    ABRE_CHAVE      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    BREAK           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    EXIT            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    LAST            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEXT            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    REDO            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    RETURN          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    CONSTANT        reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    STATE           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    LET             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    MULTI           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    ONLY            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    IMPORT          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEED            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    REQUIRE         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    USE             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    PUSH            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    UNSHIFT         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    SPLICE          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    NOT             reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    NEGAC           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    ADC_DP          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    DECREMENTO      reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    LPAREN          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    FLOAT           reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    STRING          reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    BOOLEAN         reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    $end            reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)
    FECHA_CHAVE     reduce using rule 132 (declaracoes_para_funcoes -> declaracao_bloco .)


state 13

    (133) declaracoes_para_funcoes -> declaracao_escalar_MY .

    SAY             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    MY              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    OUR             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LIST            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FUNCTION        reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ESCALAR         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ID              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    IF              reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LOOP            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FOR             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    INTEGER         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    WHILE           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ABRE_CHAVE      reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    BREAK           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    EXIT            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LAST            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEXT            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    REDO            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    RETURN          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    CONSTANT        reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STATE           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LET             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    MULTI           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ONLY            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    IMPORT          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEED            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    REQUIRE         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    USE             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    PUSH            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    UNSHIFT         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    SPLICE          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NOT             reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    NEGAC           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    ADC_DP          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    DECREMENTO      reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    LPAREN          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FLOAT           reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    STRING          reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    BOOLEAN         reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    $end            reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)
    FECHA_CHAVE     reduce using rule 133 (declaracoes_para_funcoes -> declaracao_escalar_MY .)


state 14

    (134) declaracoes_para_funcoes -> declaracao_escalar_OUR .

    SAY             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    MY              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    OUR             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LIST            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FUNCTION        reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ESCALAR         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ID              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    IF              reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LOOP            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FOR             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    INTEGER         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    WHILE           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ABRE_CHAVE      reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    BREAK           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    EXIT            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LAST            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEXT            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    REDO            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    RETURN          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    CONSTANT        reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STATE           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LET             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    MULTI           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ONLY            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    IMPORT          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEED            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    REQUIRE         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    USE             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    PUSH            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    UNSHIFT         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    SPLICE          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NOT             reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    NEGAC           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    ADC_DP          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    DECREMENTO      reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    LPAREN          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FLOAT           reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    STRING          reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    BOOLEAN         reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    $end            reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)
    FECHA_CHAVE     reduce using rule 134 (declaracoes_para_funcoes -> declaracao_escalar_OUR .)


state 15

    (135) declaracoes_para_funcoes -> declaracao_lista .

    SAY             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    MY              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    OUR             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    LIST            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    FUNCTION        reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    ESCALAR         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    ID              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    IF              reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    LOOP            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    FOR             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    INTEGER         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    WHILE           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    ABRE_CHAVE      reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    BREAK           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    EXIT            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    LAST            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    NEXT            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    REDO            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    RETURN          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    CONSTANT        reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    STATE           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    LET             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    MULTI           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    ONLY            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    IMPORT          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    NEED            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    REQUIRE         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    USE             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    PUSH            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    UNSHIFT         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    SPLICE          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    NOT             reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    NEGAC           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    ADC_DP          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    DECREMENTO      reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    LPAREN          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    FLOAT           reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    STRING          reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    BOOLEAN         reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    $end            reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)
    FECHA_CHAVE     reduce using rule 135 (declaracoes_para_funcoes -> declaracao_lista .)


state 16

    (136) declaracoes_para_funcoes -> declaracao_lista_MY .

    SAY             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    MY              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    OUR             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LIST            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FUNCTION        reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ESCALAR         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ID              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    IF              reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LOOP            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FOR             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    INTEGER         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    WHILE           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ABRE_CHAVE      reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    BREAK           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    EXIT            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LAST            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEXT            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    REDO            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    RETURN          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    CONSTANT        reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STATE           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LET             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    MULTI           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ONLY            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    IMPORT          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEED            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    REQUIRE         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    USE             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    PUSH            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    UNSHIFT         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    SPLICE          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NOT             reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    NEGAC           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    ADC_DP          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    DECREMENTO      reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    LPAREN          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FLOAT           reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    STRING          reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    BOOLEAN         reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    $end            reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)
    FECHA_CHAVE     reduce using rule 136 (declaracoes_para_funcoes -> declaracao_lista_MY .)


state 17

    (137) declaracoes_para_funcoes -> declaracao_lista_OUR .

    SAY             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    MY              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    OUR             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LIST            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FUNCTION        reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ESCALAR         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ID              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    IF              reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LOOP            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FOR             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    INTEGER         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    WHILE           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ABRE_CHAVE      reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    BREAK           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    EXIT            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LAST            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEXT            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    REDO            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    RETURN          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    CONSTANT        reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STATE           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LET             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    MULTI           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ONLY            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    IMPORT          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEED            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    REQUIRE         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    USE             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    PUSH            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    UNSHIFT         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    SPLICE          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NOT             reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    NEGAC           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    ADC_DP          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    DECREMENTO      reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    LPAREN          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FLOAT           reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    STRING          reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    BOOLEAN         reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    $end            reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)
    FECHA_CHAVE     reduce using rule 137 (declaracoes_para_funcoes -> declaracao_lista_OUR .)


state 18

    (138) declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .

    SAY             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    MY              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    OUR             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LIST            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FUNCTION        reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ESCALAR         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ID              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    IF              reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LOOP            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FOR             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    INTEGER         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    WHILE           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ABRE_CHAVE      reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    BREAK           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    EXIT            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LAST            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEXT            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    REDO            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    RETURN          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    CONSTANT        reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    STATE           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LET             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    MULTI           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ONLY            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    IMPORT          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEED            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    REQUIRE         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    USE             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    PUSH            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    UNSHIFT         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    SPLICE          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NOT             reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    NEGAC           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    ADC_DP          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    DECREMENTO      reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    LPAREN          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FLOAT           reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    STRING          reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    BOOLEAN         reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    $end            reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)
    FECHA_CHAVE     reduce using rule 138 (declaracoes_para_funcoes -> declaracao_de_controle_de_fluxo .)


state 19

    (139) declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .

    SAY             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    MY              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    OUR             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LIST            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FUNCTION        reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ESCALAR         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ID              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    IF              reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LOOP            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FOR             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    INTEGER         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    WHILE           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ABRE_CHAVE      reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    BREAK           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    EXIT            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LAST            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEXT            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    REDO            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    RETURN          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    CONSTANT        reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    STATE           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LET             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    MULTI           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ONLY            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    IMPORT          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEED            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    REQUIRE         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    USE             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    PUSH            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    UNSHIFT         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    SPLICE          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NOT             reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    NEGAC           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    ADC_DP          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    DECREMENTO      reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    LPAREN          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FLOAT           reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    STRING          reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    BOOLEAN         reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    $end            reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)
    FECHA_CHAVE     reduce using rule 139 (declaracoes_para_funcoes -> declaracao_de_controle_de_escopo .)


state 20

    (140) declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .

    SAY             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    MY              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    OUR             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LIST            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FUNCTION        reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ESCALAR         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ID              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    IF              reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LOOP            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FOR             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    INTEGER         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    WHILE           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ABRE_CHAVE      reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    BREAK           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    EXIT            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LAST            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEXT            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    REDO            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    RETURN          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    CONSTANT        reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    STATE           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LET             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    MULTI           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ONLY            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    IMPORT          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEED            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    REQUIRE         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    USE             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    PUSH            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    UNSHIFT         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    SPLICE          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NOT             reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    NEGAC           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    ADC_DP          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    DECREMENTO      reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    LPAREN          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FLOAT           reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    STRING          reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    BOOLEAN         reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    $end            reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)
    FECHA_CHAVE     reduce using rule 140 (declaracoes_para_funcoes -> declaracao_de_controle_de_modularizacao .)


state 21

    (141) declaracoes_para_funcoes -> declaracao_de_controle_de_lista .

    SAY             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    MY              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    OUR             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LIST            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FUNCTION        reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ESCALAR         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ID              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    IF              reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LOOP            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FOR             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    INTEGER         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    WHILE           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ABRE_CHAVE      reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    BREAK           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    EXIT            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LAST            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEXT            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    REDO            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    RETURN          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    CONSTANT        reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    STATE           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LET             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    MULTI           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ONLY            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    IMPORT          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEED            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    REQUIRE         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    USE             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    PUSH            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    UNSHIFT         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    SPLICE          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NOT             reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    NEGAC           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    ADC_DP          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    DECREMENTO      reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    LPAREN          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FLOAT           reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    STRING          reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    BOOLEAN         reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    $end            reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)
    FECHA_CHAVE     reduce using rule 141 (declaracoes_para_funcoes -> declaracao_de_controle_de_lista .)


state 22

    (143) declaracao_de_funcao -> funcao_com_params .

    SAY             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    MY              reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    OUR             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    LIST            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    FUNCTION        reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    ESCALAR         reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    ID              reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    IF              reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    LOOP            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    FOR             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    INTEGER         reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    WHILE           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    ABRE_CHAVE      reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    BREAK           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    EXIT            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    LAST            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    NEXT            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    REDO            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    RETURN          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    CONSTANT        reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    STATE           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    LET             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    MULTI           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    ONLY            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    IMPORT          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    NEED            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    REQUIRE         reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    USE             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    PUSH            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    UNSHIFT         reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    SPLICE          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    NOT             reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    NEGAC           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    ADC_DP          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    DECREMENTO      reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    LPAREN          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    FLOAT           reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    STRING          reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    BOOLEAN         reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    $end            reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)
    FECHA_CHAVE     reduce using rule 143 (declaracao_de_funcao -> funcao_com_params .)


state 23

    (144) declaracao_de_funcao -> funcao_sem_params .

    SAY             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    MY              reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    OUR             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    LIST            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    FUNCTION        reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    ESCALAR         reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    ID              reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    IF              reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    LOOP            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    FOR             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    INTEGER         reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    WHILE           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    ABRE_CHAVE      reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    BREAK           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    EXIT            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    LAST            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    NEXT            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    REDO            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    RETURN          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    CONSTANT        reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    STATE           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    LET             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    MULTI           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    ONLY            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    IMPORT          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    NEED            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    REQUIRE         reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    USE             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    PUSH            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    UNSHIFT         reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    SPLICE          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    NOT             reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    NEGAC           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    ADC_DP          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    DECREMENTO      reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    LPAREN          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    FLOAT           reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    STRING          reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    BOOLEAN         reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    $end            reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)
    FECHA_CHAVE     reduce using rule 144 (declaracao_de_funcao -> funcao_sem_params .)


state 24

    (142) declaracao_de_atribuicao -> atribuicao . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 138


state 25

    (105) say -> SAY . say_func PONTO_VIRGULA
    (106) say_func -> . exp_2
    (107) say_func -> . LIST
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    LIST            shift and go to state 141
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    say_func                       shift and go to state 139
    exp_2                          shift and go to state 140
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 26

    (145) declaracao_de_chamada_funcao -> chamada_funcao . PONTO_VIRGULA
    (73) completo -> chamada_funcao .

    PONTO_VIRGULA   shift and go to state 146
    POW             reduce using rule 73 (completo -> chamada_funcao .)
    MULT            reduce using rule 73 (completo -> chamada_funcao .)
    DIVIDE          reduce using rule 73 (completo -> chamada_funcao .)
    DIV             reduce using rule 73 (completo -> chamada_funcao .)
    DIVI            reduce using rule 73 (completo -> chamada_funcao .)
    MOD             reduce using rule 73 (completo -> chamada_funcao .)
    LCM             reduce using rule 73 (completo -> chamada_funcao .)
    GCD             reduce using rule 73 (completo -> chamada_funcao .)
    ADC             reduce using rule 73 (completo -> chamada_funcao .)
    SUB             reduce using rule 73 (completo -> chamada_funcao .)
    CONC            reduce using rule 73 (completo -> chamada_funcao .)
    IGUAL_DP        reduce using rule 73 (completo -> chamada_funcao .)
    DIF             reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR           reduce using rule 73 (completo -> chamada_funcao .)
    MENOR           reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR_IGL       reduce using rule 73 (completo -> chamada_funcao .)
    LESSEQUAL       reduce using rule 73 (completo -> chamada_funcao .)
    SMARTMATCH      reduce using rule 73 (completo -> chamada_funcao .)
    AND_S           reduce using rule 73 (completo -> chamada_funcao .)
    OR_S            reduce using rule 73 (completo -> chamada_funcao .)
    XOR_S           reduce using rule 73 (completo -> chamada_funcao .)
    SAY             reduce using rule 73 (completo -> chamada_funcao .)
    MY              reduce using rule 73 (completo -> chamada_funcao .)
    OUR             reduce using rule 73 (completo -> chamada_funcao .)
    LIST            reduce using rule 73 (completo -> chamada_funcao .)
    FUNCTION        reduce using rule 73 (completo -> chamada_funcao .)
    ESCALAR         reduce using rule 73 (completo -> chamada_funcao .)
    ID              reduce using rule 73 (completo -> chamada_funcao .)
    IF              reduce using rule 73 (completo -> chamada_funcao .)
    LOOP            reduce using rule 73 (completo -> chamada_funcao .)
    FOR             reduce using rule 73 (completo -> chamada_funcao .)
    INTEGER         reduce using rule 73 (completo -> chamada_funcao .)
    WHILE           reduce using rule 73 (completo -> chamada_funcao .)
    ABRE_CHAVE      reduce using rule 73 (completo -> chamada_funcao .)
    BREAK           reduce using rule 73 (completo -> chamada_funcao .)
    EXIT            reduce using rule 73 (completo -> chamada_funcao .)
    LAST            reduce using rule 73 (completo -> chamada_funcao .)
    NEXT            reduce using rule 73 (completo -> chamada_funcao .)
    REDO            reduce using rule 73 (completo -> chamada_funcao .)
    RETURN          reduce using rule 73 (completo -> chamada_funcao .)
    CONSTANT        reduce using rule 73 (completo -> chamada_funcao .)
    STATE           reduce using rule 73 (completo -> chamada_funcao .)
    LET             reduce using rule 73 (completo -> chamada_funcao .)
    MULTI           reduce using rule 73 (completo -> chamada_funcao .)
    ONLY            reduce using rule 73 (completo -> chamada_funcao .)
    IMPORT          reduce using rule 73 (completo -> chamada_funcao .)
    NEED            reduce using rule 73 (completo -> chamada_funcao .)
    REQUIRE         reduce using rule 73 (completo -> chamada_funcao .)
    USE             reduce using rule 73 (completo -> chamada_funcao .)
    PUSH            reduce using rule 73 (completo -> chamada_funcao .)
    UNSHIFT         reduce using rule 73 (completo -> chamada_funcao .)
    SPLICE          reduce using rule 73 (completo -> chamada_funcao .)
    NOT             reduce using rule 73 (completo -> chamada_funcao .)
    NEGAC           reduce using rule 73 (completo -> chamada_funcao .)
    ADC_DP          reduce using rule 73 (completo -> chamada_funcao .)
    DECREMENTO      reduce using rule 73 (completo -> chamada_funcao .)
    LPAREN          reduce using rule 73 (completo -> chamada_funcao .)
    FLOAT           reduce using rule 73 (completo -> chamada_funcao .)
    STRING          reduce using rule 73 (completo -> chamada_funcao .)
    BOOLEAN         reduce using rule 73 (completo -> chamada_funcao .)
    $end            reduce using rule 73 (completo -> chamada_funcao .)
    FECHA_CHAVE     reduce using rule 73 (completo -> chamada_funcao .)


state 27

    (146) declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro . PONTO_VIRGULA
    (74) completo -> chamada_funcao_sem_parametro .

    PONTO_VIRGULA   shift and go to state 147
    POW             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MULT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVIDE          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIV             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVI            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MOD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LCM             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    GCD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ADC             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SUB             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    CONC            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IGUAL_DP        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIF             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MENOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR_IGL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LESSEQUAL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SMARTMATCH      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    AND_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    OR_S            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    XOR_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SAY             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MY              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    OUR             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LIST            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FUNCTION        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ESCALAR         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ID              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IF              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LOOP            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FOR             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    INTEGER         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    WHILE           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ABRE_CHAVE      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    BREAK           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    EXIT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LAST            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEXT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    REDO            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    RETURN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    CONSTANT        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    STATE           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LET             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MULTI           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ONLY            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IMPORT          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEED            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    REQUIRE         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    USE             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    PUSH            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    UNSHIFT         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SPLICE          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NOT             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEGAC           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ADC_DP          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DECREMENTO      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LPAREN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FLOAT           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    STRING          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    BOOLEAN         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    $end            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FECHA_CHAVE     reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)


state 28

    (147) declaracao_de_condicional -> condicional .

    SAY             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    MY              reduce using rule 147 (declaracao_de_condicional -> condicional .)
    OUR             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    LIST            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    FUNCTION        reduce using rule 147 (declaracao_de_condicional -> condicional .)
    ESCALAR         reduce using rule 147 (declaracao_de_condicional -> condicional .)
    ID              reduce using rule 147 (declaracao_de_condicional -> condicional .)
    IF              reduce using rule 147 (declaracao_de_condicional -> condicional .)
    LOOP            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    FOR             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    INTEGER         reduce using rule 147 (declaracao_de_condicional -> condicional .)
    WHILE           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    ABRE_CHAVE      reduce using rule 147 (declaracao_de_condicional -> condicional .)
    BREAK           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    EXIT            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    LAST            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    NEXT            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    REDO            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    RETURN          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    CONSTANT        reduce using rule 147 (declaracao_de_condicional -> condicional .)
    STATE           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    LET             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    MULTI           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    ONLY            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    IMPORT          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    NEED            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    REQUIRE         reduce using rule 147 (declaracao_de_condicional -> condicional .)
    USE             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    PUSH            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    UNSHIFT         reduce using rule 147 (declaracao_de_condicional -> condicional .)
    SPLICE          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    NOT             reduce using rule 147 (declaracao_de_condicional -> condicional .)
    NEGAC           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    ADC_DP          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    DECREMENTO      reduce using rule 147 (declaracao_de_condicional -> condicional .)
    LPAREN          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    FLOAT           reduce using rule 147 (declaracao_de_condicional -> condicional .)
    STRING          reduce using rule 147 (declaracao_de_condicional -> condicional .)
    BOOLEAN         reduce using rule 147 (declaracao_de_condicional -> condicional .)
    $end            reduce using rule 147 (declaracao_de_condicional -> condicional .)
    FECHA_CHAVE     reduce using rule 147 (declaracao_de_condicional -> condicional .)


state 29

    (148) declaracao_loop -> loop .

    SAY             reduce using rule 148 (declaracao_loop -> loop .)
    MY              reduce using rule 148 (declaracao_loop -> loop .)
    OUR             reduce using rule 148 (declaracao_loop -> loop .)
    LIST            reduce using rule 148 (declaracao_loop -> loop .)
    FUNCTION        reduce using rule 148 (declaracao_loop -> loop .)
    ESCALAR         reduce using rule 148 (declaracao_loop -> loop .)
    ID              reduce using rule 148 (declaracao_loop -> loop .)
    IF              reduce using rule 148 (declaracao_loop -> loop .)
    LOOP            reduce using rule 148 (declaracao_loop -> loop .)
    FOR             reduce using rule 148 (declaracao_loop -> loop .)
    INTEGER         reduce using rule 148 (declaracao_loop -> loop .)
    WHILE           reduce using rule 148 (declaracao_loop -> loop .)
    ABRE_CHAVE      reduce using rule 148 (declaracao_loop -> loop .)
    BREAK           reduce using rule 148 (declaracao_loop -> loop .)
    EXIT            reduce using rule 148 (declaracao_loop -> loop .)
    LAST            reduce using rule 148 (declaracao_loop -> loop .)
    NEXT            reduce using rule 148 (declaracao_loop -> loop .)
    REDO            reduce using rule 148 (declaracao_loop -> loop .)
    RETURN          reduce using rule 148 (declaracao_loop -> loop .)
    CONSTANT        reduce using rule 148 (declaracao_loop -> loop .)
    STATE           reduce using rule 148 (declaracao_loop -> loop .)
    LET             reduce using rule 148 (declaracao_loop -> loop .)
    MULTI           reduce using rule 148 (declaracao_loop -> loop .)
    ONLY            reduce using rule 148 (declaracao_loop -> loop .)
    IMPORT          reduce using rule 148 (declaracao_loop -> loop .)
    NEED            reduce using rule 148 (declaracao_loop -> loop .)
    REQUIRE         reduce using rule 148 (declaracao_loop -> loop .)
    USE             reduce using rule 148 (declaracao_loop -> loop .)
    PUSH            reduce using rule 148 (declaracao_loop -> loop .)
    UNSHIFT         reduce using rule 148 (declaracao_loop -> loop .)
    SPLICE          reduce using rule 148 (declaracao_loop -> loop .)
    NOT             reduce using rule 148 (declaracao_loop -> loop .)
    NEGAC           reduce using rule 148 (declaracao_loop -> loop .)
    ADC_DP          reduce using rule 148 (declaracao_loop -> loop .)
    DECREMENTO      reduce using rule 148 (declaracao_loop -> loop .)
    LPAREN          reduce using rule 148 (declaracao_loop -> loop .)
    FLOAT           reduce using rule 148 (declaracao_loop -> loop .)
    STRING          reduce using rule 148 (declaracao_loop -> loop .)
    BOOLEAN         reduce using rule 148 (declaracao_loop -> loop .)
    $end            reduce using rule 148 (declaracao_loop -> loop .)
    FECHA_CHAVE     reduce using rule 148 (declaracao_loop -> loop .)


state 30

    (149) declaracao_loop -> loop_for .

    SAY             reduce using rule 149 (declaracao_loop -> loop_for .)
    MY              reduce using rule 149 (declaracao_loop -> loop_for .)
    OUR             reduce using rule 149 (declaracao_loop -> loop_for .)
    LIST            reduce using rule 149 (declaracao_loop -> loop_for .)
    FUNCTION        reduce using rule 149 (declaracao_loop -> loop_for .)
    ESCALAR         reduce using rule 149 (declaracao_loop -> loop_for .)
    ID              reduce using rule 149 (declaracao_loop -> loop_for .)
    IF              reduce using rule 149 (declaracao_loop -> loop_for .)
    LOOP            reduce using rule 149 (declaracao_loop -> loop_for .)
    FOR             reduce using rule 149 (declaracao_loop -> loop_for .)
    INTEGER         reduce using rule 149 (declaracao_loop -> loop_for .)
    WHILE           reduce using rule 149 (declaracao_loop -> loop_for .)
    ABRE_CHAVE      reduce using rule 149 (declaracao_loop -> loop_for .)
    BREAK           reduce using rule 149 (declaracao_loop -> loop_for .)
    EXIT            reduce using rule 149 (declaracao_loop -> loop_for .)
    LAST            reduce using rule 149 (declaracao_loop -> loop_for .)
    NEXT            reduce using rule 149 (declaracao_loop -> loop_for .)
    REDO            reduce using rule 149 (declaracao_loop -> loop_for .)
    RETURN          reduce using rule 149 (declaracao_loop -> loop_for .)
    CONSTANT        reduce using rule 149 (declaracao_loop -> loop_for .)
    STATE           reduce using rule 149 (declaracao_loop -> loop_for .)
    LET             reduce using rule 149 (declaracao_loop -> loop_for .)
    MULTI           reduce using rule 149 (declaracao_loop -> loop_for .)
    ONLY            reduce using rule 149 (declaracao_loop -> loop_for .)
    IMPORT          reduce using rule 149 (declaracao_loop -> loop_for .)
    NEED            reduce using rule 149 (declaracao_loop -> loop_for .)
    REQUIRE         reduce using rule 149 (declaracao_loop -> loop_for .)
    USE             reduce using rule 149 (declaracao_loop -> loop_for .)
    PUSH            reduce using rule 149 (declaracao_loop -> loop_for .)
    UNSHIFT         reduce using rule 149 (declaracao_loop -> loop_for .)
    SPLICE          reduce using rule 149 (declaracao_loop -> loop_for .)
    NOT             reduce using rule 149 (declaracao_loop -> loop_for .)
    NEGAC           reduce using rule 149 (declaracao_loop -> loop_for .)
    ADC_DP          reduce using rule 149 (declaracao_loop -> loop_for .)
    DECREMENTO      reduce using rule 149 (declaracao_loop -> loop_for .)
    LPAREN          reduce using rule 149 (declaracao_loop -> loop_for .)
    FLOAT           reduce using rule 149 (declaracao_loop -> loop_for .)
    STRING          reduce using rule 149 (declaracao_loop -> loop_for .)
    BOOLEAN         reduce using rule 149 (declaracao_loop -> loop_for .)
    $end            reduce using rule 149 (declaracao_loop -> loop_for .)
    FECHA_CHAVE     reduce using rule 149 (declaracao_loop -> loop_for .)


state 31

    (150) declaracao_loop -> loop_for_com_lista .

    SAY             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    MY              reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    OUR             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    LIST            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    FUNCTION        reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    ESCALAR         reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    ID              reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    IF              reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    LOOP            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    FOR             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    INTEGER         reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    WHILE           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    ABRE_CHAVE      reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    BREAK           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    EXIT            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    LAST            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    NEXT            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    REDO            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    RETURN          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    CONSTANT        reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    STATE           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    LET             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    MULTI           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    ONLY            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    IMPORT          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    NEED            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    REQUIRE         reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    USE             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    PUSH            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    UNSHIFT         reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    SPLICE          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    NOT             reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    NEGAC           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    ADC_DP          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    DECREMENTO      reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    LPAREN          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    FLOAT           reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    STRING          reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    BOOLEAN         reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    $end            reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)
    FECHA_CHAVE     reduce using rule 150 (declaracao_loop -> loop_for_com_lista .)


state 32

    (151) declaracao_loop -> loop_times .

    SAY             reduce using rule 151 (declaracao_loop -> loop_times .)
    MY              reduce using rule 151 (declaracao_loop -> loop_times .)
    OUR             reduce using rule 151 (declaracao_loop -> loop_times .)
    LIST            reduce using rule 151 (declaracao_loop -> loop_times .)
    FUNCTION        reduce using rule 151 (declaracao_loop -> loop_times .)
    ESCALAR         reduce using rule 151 (declaracao_loop -> loop_times .)
    ID              reduce using rule 151 (declaracao_loop -> loop_times .)
    IF              reduce using rule 151 (declaracao_loop -> loop_times .)
    LOOP            reduce using rule 151 (declaracao_loop -> loop_times .)
    FOR             reduce using rule 151 (declaracao_loop -> loop_times .)
    INTEGER         reduce using rule 151 (declaracao_loop -> loop_times .)
    WHILE           reduce using rule 151 (declaracao_loop -> loop_times .)
    ABRE_CHAVE      reduce using rule 151 (declaracao_loop -> loop_times .)
    BREAK           reduce using rule 151 (declaracao_loop -> loop_times .)
    EXIT            reduce using rule 151 (declaracao_loop -> loop_times .)
    LAST            reduce using rule 151 (declaracao_loop -> loop_times .)
    NEXT            reduce using rule 151 (declaracao_loop -> loop_times .)
    REDO            reduce using rule 151 (declaracao_loop -> loop_times .)
    RETURN          reduce using rule 151 (declaracao_loop -> loop_times .)
    CONSTANT        reduce using rule 151 (declaracao_loop -> loop_times .)
    STATE           reduce using rule 151 (declaracao_loop -> loop_times .)
    LET             reduce using rule 151 (declaracao_loop -> loop_times .)
    MULTI           reduce using rule 151 (declaracao_loop -> loop_times .)
    ONLY            reduce using rule 151 (declaracao_loop -> loop_times .)
    IMPORT          reduce using rule 151 (declaracao_loop -> loop_times .)
    NEED            reduce using rule 151 (declaracao_loop -> loop_times .)
    REQUIRE         reduce using rule 151 (declaracao_loop -> loop_times .)
    USE             reduce using rule 151 (declaracao_loop -> loop_times .)
    PUSH            reduce using rule 151 (declaracao_loop -> loop_times .)
    UNSHIFT         reduce using rule 151 (declaracao_loop -> loop_times .)
    SPLICE          reduce using rule 151 (declaracao_loop -> loop_times .)
    NOT             reduce using rule 151 (declaracao_loop -> loop_times .)
    NEGAC           reduce using rule 151 (declaracao_loop -> loop_times .)
    ADC_DP          reduce using rule 151 (declaracao_loop -> loop_times .)
    DECREMENTO      reduce using rule 151 (declaracao_loop -> loop_times .)
    LPAREN          reduce using rule 151 (declaracao_loop -> loop_times .)
    FLOAT           reduce using rule 151 (declaracao_loop -> loop_times .)
    STRING          reduce using rule 151 (declaracao_loop -> loop_times .)
    BOOLEAN         reduce using rule 151 (declaracao_loop -> loop_times .)
    $end            reduce using rule 151 (declaracao_loop -> loop_times .)
    FECHA_CHAVE     reduce using rule 151 (declaracao_loop -> loop_times .)


state 33

    (152) declaracao_loop -> loop_while .

    SAY             reduce using rule 152 (declaracao_loop -> loop_while .)
    MY              reduce using rule 152 (declaracao_loop -> loop_while .)
    OUR             reduce using rule 152 (declaracao_loop -> loop_while .)
    LIST            reduce using rule 152 (declaracao_loop -> loop_while .)
    FUNCTION        reduce using rule 152 (declaracao_loop -> loop_while .)
    ESCALAR         reduce using rule 152 (declaracao_loop -> loop_while .)
    ID              reduce using rule 152 (declaracao_loop -> loop_while .)
    IF              reduce using rule 152 (declaracao_loop -> loop_while .)
    LOOP            reduce using rule 152 (declaracao_loop -> loop_while .)
    FOR             reduce using rule 152 (declaracao_loop -> loop_while .)
    INTEGER         reduce using rule 152 (declaracao_loop -> loop_while .)
    WHILE           reduce using rule 152 (declaracao_loop -> loop_while .)
    ABRE_CHAVE      reduce using rule 152 (declaracao_loop -> loop_while .)
    BREAK           reduce using rule 152 (declaracao_loop -> loop_while .)
    EXIT            reduce using rule 152 (declaracao_loop -> loop_while .)
    LAST            reduce using rule 152 (declaracao_loop -> loop_while .)
    NEXT            reduce using rule 152 (declaracao_loop -> loop_while .)
    REDO            reduce using rule 152 (declaracao_loop -> loop_while .)
    RETURN          reduce using rule 152 (declaracao_loop -> loop_while .)
    CONSTANT        reduce using rule 152 (declaracao_loop -> loop_while .)
    STATE           reduce using rule 152 (declaracao_loop -> loop_while .)
    LET             reduce using rule 152 (declaracao_loop -> loop_while .)
    MULTI           reduce using rule 152 (declaracao_loop -> loop_while .)
    ONLY            reduce using rule 152 (declaracao_loop -> loop_while .)
    IMPORT          reduce using rule 152 (declaracao_loop -> loop_while .)
    NEED            reduce using rule 152 (declaracao_loop -> loop_while .)
    REQUIRE         reduce using rule 152 (declaracao_loop -> loop_while .)
    USE             reduce using rule 152 (declaracao_loop -> loop_while .)
    PUSH            reduce using rule 152 (declaracao_loop -> loop_while .)
    UNSHIFT         reduce using rule 152 (declaracao_loop -> loop_while .)
    SPLICE          reduce using rule 152 (declaracao_loop -> loop_while .)
    NOT             reduce using rule 152 (declaracao_loop -> loop_while .)
    NEGAC           reduce using rule 152 (declaracao_loop -> loop_while .)
    ADC_DP          reduce using rule 152 (declaracao_loop -> loop_while .)
    DECREMENTO      reduce using rule 152 (declaracao_loop -> loop_while .)
    LPAREN          reduce using rule 152 (declaracao_loop -> loop_while .)
    FLOAT           reduce using rule 152 (declaracao_loop -> loop_while .)
    STRING          reduce using rule 152 (declaracao_loop -> loop_while .)
    BOOLEAN         reduce using rule 152 (declaracao_loop -> loop_while .)
    $end            reduce using rule 152 (declaracao_loop -> loop_while .)
    FECHA_CHAVE     reduce using rule 152 (declaracao_loop -> loop_while .)


state 34

    (153) declaracao_loop -> loop_sem_condicao .

    SAY             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    MY              reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    OUR             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    LIST            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    FUNCTION        reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    ESCALAR         reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    ID              reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    IF              reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    LOOP            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    FOR             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    INTEGER         reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    WHILE           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    ABRE_CHAVE      reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    BREAK           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    EXIT            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    LAST            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    NEXT            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    REDO            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    RETURN          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    CONSTANT        reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    STATE           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    LET             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    MULTI           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    ONLY            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    IMPORT          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    NEED            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    REQUIRE         reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    USE             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    PUSH            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    UNSHIFT         reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    SPLICE          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    NOT             reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    NEGAC           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    ADC_DP          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    DECREMENTO      reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    LPAREN          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    FLOAT           reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    STRING          reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    BOOLEAN         reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    $end            reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)
    FECHA_CHAVE     reduce using rule 153 (declaracao_loop -> loop_sem_condicao .)


state 35

    (154) declaracao_de_expressao -> exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    SAY             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    MY              reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    OUR             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    LIST            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    FUNCTION        reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    ESCALAR         reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    ID              reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    IF              reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    LOOP            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    FOR             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    INTEGER         reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    WHILE           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    ABRE_CHAVE      reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    BREAK           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    EXIT            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    LAST            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    NEXT            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    REDO            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    RETURN          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    CONSTANT        reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    STATE           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    LET             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    MULTI           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    ONLY            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    IMPORT          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    NEED            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    REQUIRE         reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    USE             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    PUSH            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    UNSHIFT         reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    SPLICE          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    NOT             reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    NEGAC           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    ADC_DP          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    DECREMENTO      reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    LPAREN          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    FLOAT           reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    STRING          reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    BOOLEAN         reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    $end            reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    FECHA_CHAVE     reduce using rule 154 (declaracao_de_expressao -> exp_2 .)
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 36

    (155) declaracao_bloco -> bloco .

    SAY             reduce using rule 155 (declaracao_bloco -> bloco .)
    MY              reduce using rule 155 (declaracao_bloco -> bloco .)
    OUR             reduce using rule 155 (declaracao_bloco -> bloco .)
    LIST            reduce using rule 155 (declaracao_bloco -> bloco .)
    FUNCTION        reduce using rule 155 (declaracao_bloco -> bloco .)
    ESCALAR         reduce using rule 155 (declaracao_bloco -> bloco .)
    ID              reduce using rule 155 (declaracao_bloco -> bloco .)
    IF              reduce using rule 155 (declaracao_bloco -> bloco .)
    LOOP            reduce using rule 155 (declaracao_bloco -> bloco .)
    FOR             reduce using rule 155 (declaracao_bloco -> bloco .)
    INTEGER         reduce using rule 155 (declaracao_bloco -> bloco .)
    WHILE           reduce using rule 155 (declaracao_bloco -> bloco .)
    ABRE_CHAVE      reduce using rule 155 (declaracao_bloco -> bloco .)
    BREAK           reduce using rule 155 (declaracao_bloco -> bloco .)
    EXIT            reduce using rule 155 (declaracao_bloco -> bloco .)
    LAST            reduce using rule 155 (declaracao_bloco -> bloco .)
    NEXT            reduce using rule 155 (declaracao_bloco -> bloco .)
    REDO            reduce using rule 155 (declaracao_bloco -> bloco .)
    RETURN          reduce using rule 155 (declaracao_bloco -> bloco .)
    CONSTANT        reduce using rule 155 (declaracao_bloco -> bloco .)
    STATE           reduce using rule 155 (declaracao_bloco -> bloco .)
    LET             reduce using rule 155 (declaracao_bloco -> bloco .)
    MULTI           reduce using rule 155 (declaracao_bloco -> bloco .)
    ONLY            reduce using rule 155 (declaracao_bloco -> bloco .)
    IMPORT          reduce using rule 155 (declaracao_bloco -> bloco .)
    NEED            reduce using rule 155 (declaracao_bloco -> bloco .)
    REQUIRE         reduce using rule 155 (declaracao_bloco -> bloco .)
    USE             reduce using rule 155 (declaracao_bloco -> bloco .)
    PUSH            reduce using rule 155 (declaracao_bloco -> bloco .)
    UNSHIFT         reduce using rule 155 (declaracao_bloco -> bloco .)
    SPLICE          reduce using rule 155 (declaracao_bloco -> bloco .)
    NOT             reduce using rule 155 (declaracao_bloco -> bloco .)
    NEGAC           reduce using rule 155 (declaracao_bloco -> bloco .)
    ADC_DP          reduce using rule 155 (declaracao_bloco -> bloco .)
    DECREMENTO      reduce using rule 155 (declaracao_bloco -> bloco .)
    LPAREN          reduce using rule 155 (declaracao_bloco -> bloco .)
    FLOAT           reduce using rule 155 (declaracao_bloco -> bloco .)
    STRING          reduce using rule 155 (declaracao_bloco -> bloco .)
    BOOLEAN         reduce using rule 155 (declaracao_bloco -> bloco .)
    $end            reduce using rule 155 (declaracao_bloco -> bloco .)
    FECHA_CHAVE     reduce using rule 155 (declaracao_bloco -> bloco .)


state 37

    (91) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (94) declaracao_lista_MY -> MY . LIST IGUAL lista_valores PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    LIST            shift and go to state 151
    INT             shift and go to state 155
    STR             shift and go to state 156
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 150
    tipo_opicional_int             shift and go to state 152
    tipo_opicional_str             shift and go to state 153
    empty                          shift and go to state 154

state 38

    (112) atribuicao -> ESCALAR . IGUAL exp_2
    (90) escalar -> ESCALAR .

    IGUAL           shift and go to state 157
    ADC_DP          reduce using rule 90 (escalar -> ESCALAR .)
    DECREMENTO      reduce using rule 90 (escalar -> ESCALAR .)
    POW             reduce using rule 90 (escalar -> ESCALAR .)
    MULT            reduce using rule 90 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 90 (escalar -> ESCALAR .)
    DIV             reduce using rule 90 (escalar -> ESCALAR .)
    DIVI            reduce using rule 90 (escalar -> ESCALAR .)
    MOD             reduce using rule 90 (escalar -> ESCALAR .)
    LCM             reduce using rule 90 (escalar -> ESCALAR .)
    GCD             reduce using rule 90 (escalar -> ESCALAR .)
    ADC             reduce using rule 90 (escalar -> ESCALAR .)
    SUB             reduce using rule 90 (escalar -> ESCALAR .)
    CONC            reduce using rule 90 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 90 (escalar -> ESCALAR .)
    DIF             reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 90 (escalar -> ESCALAR .)
    MENOR           reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 90 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 90 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 90 (escalar -> ESCALAR .)
    AND_S           reduce using rule 90 (escalar -> ESCALAR .)
    OR_S            reduce using rule 90 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 90 (escalar -> ESCALAR .)
    SAY             reduce using rule 90 (escalar -> ESCALAR .)
    MY              reduce using rule 90 (escalar -> ESCALAR .)
    OUR             reduce using rule 90 (escalar -> ESCALAR .)
    LIST            reduce using rule 90 (escalar -> ESCALAR .)
    FUNCTION        reduce using rule 90 (escalar -> ESCALAR .)
    ESCALAR         reduce using rule 90 (escalar -> ESCALAR .)
    ID              reduce using rule 90 (escalar -> ESCALAR .)
    IF              reduce using rule 90 (escalar -> ESCALAR .)
    LOOP            reduce using rule 90 (escalar -> ESCALAR .)
    FOR             reduce using rule 90 (escalar -> ESCALAR .)
    INTEGER         reduce using rule 90 (escalar -> ESCALAR .)
    WHILE           reduce using rule 90 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 90 (escalar -> ESCALAR .)
    BREAK           reduce using rule 90 (escalar -> ESCALAR .)
    EXIT            reduce using rule 90 (escalar -> ESCALAR .)
    LAST            reduce using rule 90 (escalar -> ESCALAR .)
    NEXT            reduce using rule 90 (escalar -> ESCALAR .)
    REDO            reduce using rule 90 (escalar -> ESCALAR .)
    RETURN          reduce using rule 90 (escalar -> ESCALAR .)
    CONSTANT        reduce using rule 90 (escalar -> ESCALAR .)
    STATE           reduce using rule 90 (escalar -> ESCALAR .)
    LET             reduce using rule 90 (escalar -> ESCALAR .)
    MULTI           reduce using rule 90 (escalar -> ESCALAR .)
    ONLY            reduce using rule 90 (escalar -> ESCALAR .)
    IMPORT          reduce using rule 90 (escalar -> ESCALAR .)
    NEED            reduce using rule 90 (escalar -> ESCALAR .)
    REQUIRE         reduce using rule 90 (escalar -> ESCALAR .)
    USE             reduce using rule 90 (escalar -> ESCALAR .)
    PUSH            reduce using rule 90 (escalar -> ESCALAR .)
    UNSHIFT         reduce using rule 90 (escalar -> ESCALAR .)
    SPLICE          reduce using rule 90 (escalar -> ESCALAR .)
    NOT             reduce using rule 90 (escalar -> ESCALAR .)
    NEGAC           reduce using rule 90 (escalar -> ESCALAR .)
    LPAREN          reduce using rule 90 (escalar -> ESCALAR .)
    FLOAT           reduce using rule 90 (escalar -> ESCALAR .)
    STRING          reduce using rule 90 (escalar -> ESCALAR .)
    BOOLEAN         reduce using rule 90 (escalar -> ESCALAR .)
    $end            reduce using rule 90 (escalar -> ESCALAR .)
    FECHA_CHAVE     reduce using rule 90 (escalar -> ESCALAR .)


state 39

    (92) declaracao_escalar_OUR -> OUR . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (95) declaracao_lista_OUR -> OUR . LIST IGUAL lista_valores PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    LIST            shift and go to state 159
    INT             shift and go to state 155
    STR             shift and go to state 156
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 158
    tipo_opicional_int             shift and go to state 152
    tipo_opicional_str             shift and go to state 153
    empty                          shift and go to state 154

state 40

    (93) declaracao_lista -> LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 160


state 41

    (156) declaracao_de_controle_de_fluxo -> declaracao_break .

    SAY             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    MY              reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    OUR             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LIST            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FUNCTION        reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ESCALAR         reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ID              reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    IF              reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LOOP            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FOR             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    INTEGER         reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    WHILE           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ABRE_CHAVE      reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    BREAK           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    EXIT            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LAST            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEXT            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    REDO            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    RETURN          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    CONSTANT        reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    STATE           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LET             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    MULTI           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ONLY            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    IMPORT          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEED            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    REQUIRE         reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    USE             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    PUSH            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    UNSHIFT         reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    SPLICE          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NOT             reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    NEGAC           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    ADC_DP          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    DECREMENTO      reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    LPAREN          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FLOAT           reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    STRING          reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    BOOLEAN         reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    $end            reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)
    FECHA_CHAVE     reduce using rule 156 (declaracao_de_controle_de_fluxo -> declaracao_break .)


state 42

    (157) declaracao_de_controle_de_fluxo -> declaracao_exit .

    SAY             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    MY              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    OUR             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LIST            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FUNCTION        reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ESCALAR         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ID              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    IF              reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LOOP            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FOR             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    INTEGER         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    WHILE           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ABRE_CHAVE      reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    BREAK           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    EXIT            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LAST            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEXT            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    REDO            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    RETURN          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    CONSTANT        reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    STATE           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LET             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    MULTI           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ONLY            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    IMPORT          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEED            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    REQUIRE         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    USE             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    PUSH            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    UNSHIFT         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    SPLICE          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NOT             reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    NEGAC           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    ADC_DP          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    DECREMENTO      reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    LPAREN          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FLOAT           reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    STRING          reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    BOOLEAN         reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    $end            reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)
    FECHA_CHAVE     reduce using rule 157 (declaracao_de_controle_de_fluxo -> declaracao_exit .)


state 43

    (158) declaracao_de_controle_de_fluxo -> declaracao_last .

    SAY             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    MY              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    OUR             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LIST            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FUNCTION        reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ESCALAR         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ID              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    IF              reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LOOP            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FOR             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    INTEGER         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    WHILE           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ABRE_CHAVE      reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    BREAK           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    EXIT            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LAST            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEXT            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    REDO            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    RETURN          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    CONSTANT        reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    STATE           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LET             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    MULTI           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ONLY            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    IMPORT          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEED            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    REQUIRE         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    USE             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    PUSH            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    UNSHIFT         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    SPLICE          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NOT             reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    NEGAC           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    ADC_DP          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    DECREMENTO      reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    LPAREN          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FLOAT           reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    STRING          reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    BOOLEAN         reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    $end            reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)
    FECHA_CHAVE     reduce using rule 158 (declaracao_de_controle_de_fluxo -> declaracao_last .)


state 44

    (159) declaracao_de_controle_de_fluxo -> declaracao_next .

    SAY             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    MY              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    OUR             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LIST            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FUNCTION        reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ESCALAR         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ID              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    IF              reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LOOP            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FOR             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    INTEGER         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    WHILE           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ABRE_CHAVE      reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    BREAK           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    EXIT            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LAST            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEXT            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    REDO            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    RETURN          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    CONSTANT        reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    STATE           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LET             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    MULTI           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ONLY            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    IMPORT          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEED            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    REQUIRE         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    USE             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    PUSH            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    UNSHIFT         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    SPLICE          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NOT             reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    NEGAC           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    ADC_DP          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    DECREMENTO      reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    LPAREN          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FLOAT           reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    STRING          reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    BOOLEAN         reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    $end            reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)
    FECHA_CHAVE     reduce using rule 159 (declaracao_de_controle_de_fluxo -> declaracao_next .)


state 45

    (160) declaracao_de_controle_de_fluxo -> declaracao_redo .

    SAY             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    MY              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    OUR             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LIST            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FUNCTION        reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ESCALAR         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ID              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    IF              reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LOOP            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FOR             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    INTEGER         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    WHILE           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ABRE_CHAVE      reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    BREAK           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    EXIT            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LAST            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEXT            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    REDO            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    RETURN          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    CONSTANT        reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    STATE           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LET             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    MULTI           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ONLY            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    IMPORT          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEED            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    REQUIRE         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    USE             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    PUSH            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    UNSHIFT         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    SPLICE          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NOT             reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    NEGAC           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    ADC_DP          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    DECREMENTO      reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    LPAREN          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FLOAT           reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    STRING          reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    BOOLEAN         reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    $end            reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)
    FECHA_CHAVE     reduce using rule 160 (declaracao_de_controle_de_fluxo -> declaracao_redo .)


state 46

    (161) declaracao_de_controle_de_fluxo -> declaracao_return .

    SAY             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    MY              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    OUR             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LIST            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FUNCTION        reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ESCALAR         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ID              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    IF              reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LOOP            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FOR             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    INTEGER         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    WHILE           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ABRE_CHAVE      reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    BREAK           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    EXIT            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LAST            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEXT            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    REDO            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    RETURN          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    CONSTANT        reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    STATE           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LET             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    MULTI           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ONLY            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    IMPORT          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEED            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    REQUIRE         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    USE             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    PUSH            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    UNSHIFT         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    SPLICE          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NOT             reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    NEGAC           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    ADC_DP          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    DECREMENTO      reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    LPAREN          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FLOAT           reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    STRING          reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    BOOLEAN         reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    $end            reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)
    FECHA_CHAVE     reduce using rule 161 (declaracao_de_controle_de_fluxo -> declaracao_return .)


state 47

    (162) declaracao_de_controle_de_escopo -> declaracao_constant .

    SAY             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    MY              reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    OUR             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LIST            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FUNCTION        reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ESCALAR         reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ID              reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    IF              reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LOOP            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FOR             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    INTEGER         reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    WHILE           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ABRE_CHAVE      reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    BREAK           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    EXIT            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LAST            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEXT            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    REDO            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    RETURN          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    CONSTANT        reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    STATE           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LET             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    MULTI           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ONLY            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    IMPORT          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEED            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    REQUIRE         reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    USE             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    PUSH            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    UNSHIFT         reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    SPLICE          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NOT             reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    NEGAC           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    ADC_DP          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    DECREMENTO      reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    LPAREN          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FLOAT           reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    STRING          reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    BOOLEAN         reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    $end            reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)
    FECHA_CHAVE     reduce using rule 162 (declaracao_de_controle_de_escopo -> declaracao_constant .)


state 48

    (163) declaracao_de_controle_de_escopo -> declaracao_state .

    SAY             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    MY              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    OUR             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LIST            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FUNCTION        reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ESCALAR         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ID              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    IF              reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LOOP            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FOR             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    INTEGER         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    WHILE           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ABRE_CHAVE      reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    BREAK           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    EXIT            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LAST            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEXT            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    REDO            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    RETURN          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    CONSTANT        reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    STATE           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LET             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    MULTI           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ONLY            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    IMPORT          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEED            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    REQUIRE         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    USE             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    PUSH            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    UNSHIFT         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    SPLICE          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NOT             reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    NEGAC           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    ADC_DP          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    DECREMENTO      reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    LPAREN          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FLOAT           reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    STRING          reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    BOOLEAN         reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    $end            reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)
    FECHA_CHAVE     reduce using rule 163 (declaracao_de_controle_de_escopo -> declaracao_state .)


state 49

    (164) declaracao_de_controle_de_escopo -> declaracao_let .

    SAY             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    MY              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    OUR             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    LIST            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    FUNCTION        reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    ESCALAR         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    ID              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    IF              reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    LOOP            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    FOR             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    INTEGER         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    WHILE           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    ABRE_CHAVE      reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    BREAK           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    EXIT            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    LAST            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    NEXT            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    REDO            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    RETURN          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    CONSTANT        reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    STATE           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    LET             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    MULTI           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    ONLY            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    IMPORT          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    NEED            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    REQUIRE         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    USE             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    PUSH            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    UNSHIFT         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    SPLICE          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    NOT             reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    NEGAC           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    ADC_DP          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    DECREMENTO      reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    LPAREN          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    FLOAT           reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    STRING          reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    BOOLEAN         reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    $end            reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)
    FECHA_CHAVE     reduce using rule 164 (declaracao_de_controle_de_escopo -> declaracao_let .)


state 50

    (165) declaracao_de_controle_de_escopo -> declaracao_multi .

    SAY             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    MY              reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    OUR             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    LIST            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    FUNCTION        reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    ESCALAR         reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    ID              reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    IF              reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    LOOP            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    FOR             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    INTEGER         reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    WHILE           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    ABRE_CHAVE      reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    BREAK           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    EXIT            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    LAST            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    NEXT            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    REDO            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    RETURN          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    CONSTANT        reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    STATE           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    LET             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    MULTI           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    ONLY            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    IMPORT          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    NEED            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    REQUIRE         reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    USE             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    PUSH            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    UNSHIFT         reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    SPLICE          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    NOT             reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    NEGAC           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    ADC_DP          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    DECREMENTO      reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    LPAREN          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    FLOAT           reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    STRING          reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    BOOLEAN         reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    $end            reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)
    FECHA_CHAVE     reduce using rule 165 (declaracao_de_controle_de_escopo -> declaracao_multi .)


state 51

    (166) declaracao_de_controle_de_escopo -> declaracao_only .

    SAY             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    MY              reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    OUR             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    LIST            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    FUNCTION        reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    ESCALAR         reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    ID              reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    IF              reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    LOOP            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    FOR             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    INTEGER         reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    WHILE           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    ABRE_CHAVE      reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    BREAK           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    EXIT            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    LAST            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    NEXT            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    REDO            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    RETURN          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    CONSTANT        reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    STATE           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    LET             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    MULTI           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    ONLY            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    IMPORT          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    NEED            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    REQUIRE         reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    USE             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    PUSH            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    UNSHIFT         reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    SPLICE          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    NOT             reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    NEGAC           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    ADC_DP          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    DECREMENTO      reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    LPAREN          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    FLOAT           reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    STRING          reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    BOOLEAN         reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    $end            reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)
    FECHA_CHAVE     reduce using rule 166 (declaracao_de_controle_de_escopo -> declaracao_only .)


state 52

    (167) declaracao_de_controle_de_modularizacao -> import .

    SAY             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    MY              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    OUR             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    LIST            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    FUNCTION        reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    ESCALAR         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    ID              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    IF              reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    LOOP            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    FOR             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    INTEGER         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    WHILE           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    ABRE_CHAVE      reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    BREAK           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    EXIT            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    LAST            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    NEXT            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    REDO            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    RETURN          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    CONSTANT        reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    STATE           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    LET             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    MULTI           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    ONLY            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    IMPORT          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    NEED            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    REQUIRE         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    USE             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    PUSH            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    UNSHIFT         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    SPLICE          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    NOT             reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    NEGAC           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    ADC_DP          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    DECREMENTO      reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    LPAREN          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    FLOAT           reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    STRING          reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    BOOLEAN         reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    $end            reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)
    FECHA_CHAVE     reduce using rule 167 (declaracao_de_controle_de_modularizacao -> import .)


state 53

    (168) declaracao_de_controle_de_modularizacao -> need .

    SAY             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    MY              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    OUR             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    LIST            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    FUNCTION        reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    ESCALAR         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    ID              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    IF              reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    LOOP            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    FOR             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    INTEGER         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    WHILE           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    ABRE_CHAVE      reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    BREAK           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    EXIT            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    LAST            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    NEXT            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    REDO            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    RETURN          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    CONSTANT        reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    STATE           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    LET             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    MULTI           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    ONLY            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    IMPORT          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    NEED            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    REQUIRE         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    USE             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    PUSH            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    UNSHIFT         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    SPLICE          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    NOT             reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    NEGAC           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    ADC_DP          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    DECREMENTO      reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    LPAREN          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    FLOAT           reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    STRING          reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    BOOLEAN         reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    $end            reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)
    FECHA_CHAVE     reduce using rule 168 (declaracao_de_controle_de_modularizacao -> need .)


state 54

    (169) declaracao_de_controle_de_modularizacao -> require .

    SAY             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    MY              reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    OUR             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    LIST            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    FUNCTION        reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    ESCALAR         reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    ID              reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    IF              reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    LOOP            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    FOR             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    INTEGER         reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    WHILE           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    ABRE_CHAVE      reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    BREAK           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    EXIT            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    LAST            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    NEXT            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    REDO            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    RETURN          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    CONSTANT        reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    STATE           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    LET             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    MULTI           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    ONLY            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    IMPORT          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    NEED            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    REQUIRE         reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    USE             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    PUSH            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    UNSHIFT         reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    SPLICE          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    NOT             reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    NEGAC           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    ADC_DP          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    DECREMENTO      reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    LPAREN          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    FLOAT           reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    STRING          reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    BOOLEAN         reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    $end            reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)
    FECHA_CHAVE     reduce using rule 169 (declaracao_de_controle_de_modularizacao -> require .)


state 55

    (170) declaracao_de_controle_de_modularizacao -> use .

    SAY             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    MY              reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    OUR             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    LIST            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    FUNCTION        reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    ESCALAR         reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    ID              reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    IF              reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    LOOP            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    FOR             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    INTEGER         reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    WHILE           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    ABRE_CHAVE      reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    BREAK           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    EXIT            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    LAST            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    NEXT            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    REDO            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    RETURN          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    CONSTANT        reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    STATE           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    LET             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    MULTI           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    ONLY            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    IMPORT          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    NEED            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    REQUIRE         reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    USE             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    PUSH            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    UNSHIFT         reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    SPLICE          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    NOT             reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    NEGAC           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    ADC_DP          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    DECREMENTO      reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    LPAREN          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    FLOAT           reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    STRING          reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    BOOLEAN         reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    $end            reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)
    FECHA_CHAVE     reduce using rule 170 (declaracao_de_controle_de_modularizacao -> use .)


state 56

    (171) declaracao_de_controle_de_lista -> push .

    SAY             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    MY              reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    OUR             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    LIST            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    FUNCTION        reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    ESCALAR         reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    ID              reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    IF              reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    LOOP            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    FOR             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    INTEGER         reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    WHILE           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    ABRE_CHAVE      reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    BREAK           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    EXIT            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    LAST            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    NEXT            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    REDO            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    RETURN          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    CONSTANT        reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    STATE           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    LET             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    MULTI           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    ONLY            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    IMPORT          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    NEED            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    REQUIRE         reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    USE             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    PUSH            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    UNSHIFT         reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    SPLICE          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    NOT             reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    NEGAC           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    ADC_DP          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    DECREMENTO      reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    LPAREN          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    FLOAT           reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    STRING          reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    BOOLEAN         reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    $end            reduce using rule 171 (declaracao_de_controle_de_lista -> push .)
    FECHA_CHAVE     reduce using rule 171 (declaracao_de_controle_de_lista -> push .)


state 57

    (172) declaracao_de_controle_de_lista -> unshift .

    SAY             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    MY              reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    OUR             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    LIST            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    FUNCTION        reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    ESCALAR         reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    ID              reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    IF              reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    LOOP            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    FOR             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    INTEGER         reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    WHILE           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    ABRE_CHAVE      reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    BREAK           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    EXIT            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    LAST            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    NEXT            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    REDO            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    RETURN          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    CONSTANT        reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    STATE           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    LET             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    MULTI           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    ONLY            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    IMPORT          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    NEED            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    REQUIRE         reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    USE             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    PUSH            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    UNSHIFT         reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    SPLICE          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    NOT             reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    NEGAC           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    ADC_DP          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    DECREMENTO      reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    LPAREN          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    FLOAT           reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    STRING          reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    BOOLEAN         reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    $end            reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)
    FECHA_CHAVE     reduce using rule 172 (declaracao_de_controle_de_lista -> unshift .)


state 58

    (173) declaracao_de_controle_de_lista -> splice .

    SAY             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    MY              reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    OUR             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    LIST            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    FUNCTION        reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    ESCALAR         reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    ID              reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    IF              reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    LOOP            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    FOR             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    INTEGER         reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    WHILE           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    ABRE_CHAVE      reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    BREAK           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    EXIT            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    LAST            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    NEXT            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    REDO            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    RETURN          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    CONSTANT        reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    STATE           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    LET             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    MULTI           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    ONLY            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    IMPORT          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    NEED            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    REQUIRE         reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    USE             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    PUSH            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    UNSHIFT         reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    SPLICE          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    NOT             reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    NEGAC           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    ADC_DP          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    DECREMENTO      reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    LPAREN          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    FLOAT           reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    STRING          reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    BOOLEAN         reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    $end            reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)
    FECHA_CHAVE     reduce using rule 173 (declaracao_de_controle_de_lista -> splice .)


state 59

    (108) funcao_com_params -> FUNCTION . ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> FUNCTION . ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ID              shift and go to state 161


state 60

    (113) chamada_funcao -> ID . LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 162


state 61

    (71) parenteses -> LPAREN . exp_2 RPAREN
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 163
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 62

    (123) bloco -> ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes              shift and go to state 164
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 63

    (117) condicional -> IF . exp_2 bloco
    (118) condicional -> IF . exp_2 bloco ELSE bloco
    (119) condicional -> IF . exp_2 bloco lista_elsif
    (120) condicional -> IF . exp_2 bloco lista_elsif ELSE bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 165
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 64

    (103) loop -> LOOP . LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> LOOP . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    LPAREN          shift and go to state 166
    ABRE_CHAVE      shift and go to state 167


state 65

    (99) loop_for -> FOR . inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> FOR . LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (86) inteiro -> . INTEGER

    LIST            shift and go to state 169
    INTEGER         shift and go to state 145

    inteiro                        shift and go to state 168

state 66

    (76) tipo -> inteiro .

    POW             reduce using rule 76 (tipo -> inteiro .)
    MULT            reduce using rule 76 (tipo -> inteiro .)
    DIVIDE          reduce using rule 76 (tipo -> inteiro .)
    DIV             reduce using rule 76 (tipo -> inteiro .)
    DIVI            reduce using rule 76 (tipo -> inteiro .)
    MOD             reduce using rule 76 (tipo -> inteiro .)
    LCM             reduce using rule 76 (tipo -> inteiro .)
    GCD             reduce using rule 76 (tipo -> inteiro .)
    ADC             reduce using rule 76 (tipo -> inteiro .)
    SUB             reduce using rule 76 (tipo -> inteiro .)
    CONC            reduce using rule 76 (tipo -> inteiro .)
    IGUAL_DP        reduce using rule 76 (tipo -> inteiro .)
    DIF             reduce using rule 76 (tipo -> inteiro .)
    MAIOR           reduce using rule 76 (tipo -> inteiro .)
    MENOR           reduce using rule 76 (tipo -> inteiro .)
    MAIOR_IGL       reduce using rule 76 (tipo -> inteiro .)
    LESSEQUAL       reduce using rule 76 (tipo -> inteiro .)
    SMARTMATCH      reduce using rule 76 (tipo -> inteiro .)
    AND_S           reduce using rule 76 (tipo -> inteiro .)
    OR_S            reduce using rule 76 (tipo -> inteiro .)
    XOR_S           reduce using rule 76 (tipo -> inteiro .)
    SAY             reduce using rule 76 (tipo -> inteiro .)
    MY              reduce using rule 76 (tipo -> inteiro .)
    OUR             reduce using rule 76 (tipo -> inteiro .)
    LIST            reduce using rule 76 (tipo -> inteiro .)
    FUNCTION        reduce using rule 76 (tipo -> inteiro .)
    ESCALAR         reduce using rule 76 (tipo -> inteiro .)
    ID              reduce using rule 76 (tipo -> inteiro .)
    IF              reduce using rule 76 (tipo -> inteiro .)
    LOOP            reduce using rule 76 (tipo -> inteiro .)
    FOR             reduce using rule 76 (tipo -> inteiro .)
    INTEGER         reduce using rule 76 (tipo -> inteiro .)
    WHILE           reduce using rule 76 (tipo -> inteiro .)
    ABRE_CHAVE      reduce using rule 76 (tipo -> inteiro .)
    BREAK           reduce using rule 76 (tipo -> inteiro .)
    EXIT            reduce using rule 76 (tipo -> inteiro .)
    LAST            reduce using rule 76 (tipo -> inteiro .)
    NEXT            reduce using rule 76 (tipo -> inteiro .)
    REDO            reduce using rule 76 (tipo -> inteiro .)
    RETURN          reduce using rule 76 (tipo -> inteiro .)
    CONSTANT        reduce using rule 76 (tipo -> inteiro .)
    STATE           reduce using rule 76 (tipo -> inteiro .)
    LET             reduce using rule 76 (tipo -> inteiro .)
    MULTI           reduce using rule 76 (tipo -> inteiro .)
    ONLY            reduce using rule 76 (tipo -> inteiro .)
    IMPORT          reduce using rule 76 (tipo -> inteiro .)
    NEED            reduce using rule 76 (tipo -> inteiro .)
    REQUIRE         reduce using rule 76 (tipo -> inteiro .)
    USE             reduce using rule 76 (tipo -> inteiro .)
    PUSH            reduce using rule 76 (tipo -> inteiro .)
    UNSHIFT         reduce using rule 76 (tipo -> inteiro .)
    SPLICE          reduce using rule 76 (tipo -> inteiro .)
    NOT             reduce using rule 76 (tipo -> inteiro .)
    NEGAC           reduce using rule 76 (tipo -> inteiro .)
    ADC_DP          reduce using rule 76 (tipo -> inteiro .)
    DECREMENTO      reduce using rule 76 (tipo -> inteiro .)
    LPAREN          reduce using rule 76 (tipo -> inteiro .)
    FLOAT           reduce using rule 76 (tipo -> inteiro .)
    STRING          reduce using rule 76 (tipo -> inteiro .)
    BOOLEAN         reduce using rule 76 (tipo -> inteiro .)
    $end            reduce using rule 76 (tipo -> inteiro .)
    PONTO_VIRGULA   reduce using rule 76 (tipo -> inteiro .)
    RPAREN          reduce using rule 76 (tipo -> inteiro .)
    FECHA_CHAVE     reduce using rule 76 (tipo -> inteiro .)
    COMMA           reduce using rule 76 (tipo -> inteiro .)


state 67

    (101) loop_times -> INTEGER . TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (86) inteiro -> INTEGER .

    TIMES           shift and go to state 170
    POW             reduce using rule 86 (inteiro -> INTEGER .)
    MULT            reduce using rule 86 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 86 (inteiro -> INTEGER .)
    DIV             reduce using rule 86 (inteiro -> INTEGER .)
    DIVI            reduce using rule 86 (inteiro -> INTEGER .)
    MOD             reduce using rule 86 (inteiro -> INTEGER .)
    LCM             reduce using rule 86 (inteiro -> INTEGER .)
    GCD             reduce using rule 86 (inteiro -> INTEGER .)
    ADC             reduce using rule 86 (inteiro -> INTEGER .)
    SUB             reduce using rule 86 (inteiro -> INTEGER .)
    CONC            reduce using rule 86 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 86 (inteiro -> INTEGER .)
    DIF             reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 86 (inteiro -> INTEGER .)
    MENOR           reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 86 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 86 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 86 (inteiro -> INTEGER .)
    AND_S           reduce using rule 86 (inteiro -> INTEGER .)
    OR_S            reduce using rule 86 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 86 (inteiro -> INTEGER .)
    SAY             reduce using rule 86 (inteiro -> INTEGER .)
    MY              reduce using rule 86 (inteiro -> INTEGER .)
    OUR             reduce using rule 86 (inteiro -> INTEGER .)
    LIST            reduce using rule 86 (inteiro -> INTEGER .)
    FUNCTION        reduce using rule 86 (inteiro -> INTEGER .)
    ESCALAR         reduce using rule 86 (inteiro -> INTEGER .)
    ID              reduce using rule 86 (inteiro -> INTEGER .)
    IF              reduce using rule 86 (inteiro -> INTEGER .)
    LOOP            reduce using rule 86 (inteiro -> INTEGER .)
    FOR             reduce using rule 86 (inteiro -> INTEGER .)
    INTEGER         reduce using rule 86 (inteiro -> INTEGER .)
    WHILE           reduce using rule 86 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 86 (inteiro -> INTEGER .)
    BREAK           reduce using rule 86 (inteiro -> INTEGER .)
    EXIT            reduce using rule 86 (inteiro -> INTEGER .)
    LAST            reduce using rule 86 (inteiro -> INTEGER .)
    NEXT            reduce using rule 86 (inteiro -> INTEGER .)
    REDO            reduce using rule 86 (inteiro -> INTEGER .)
    RETURN          reduce using rule 86 (inteiro -> INTEGER .)
    CONSTANT        reduce using rule 86 (inteiro -> INTEGER .)
    STATE           reduce using rule 86 (inteiro -> INTEGER .)
    LET             reduce using rule 86 (inteiro -> INTEGER .)
    MULTI           reduce using rule 86 (inteiro -> INTEGER .)
    ONLY            reduce using rule 86 (inteiro -> INTEGER .)
    IMPORT          reduce using rule 86 (inteiro -> INTEGER .)
    NEED            reduce using rule 86 (inteiro -> INTEGER .)
    REQUIRE         reduce using rule 86 (inteiro -> INTEGER .)
    USE             reduce using rule 86 (inteiro -> INTEGER .)
    PUSH            reduce using rule 86 (inteiro -> INTEGER .)
    UNSHIFT         reduce using rule 86 (inteiro -> INTEGER .)
    SPLICE          reduce using rule 86 (inteiro -> INTEGER .)
    NOT             reduce using rule 86 (inteiro -> INTEGER .)
    NEGAC           reduce using rule 86 (inteiro -> INTEGER .)
    ADC_DP          reduce using rule 86 (inteiro -> INTEGER .)
    DECREMENTO      reduce using rule 86 (inteiro -> INTEGER .)
    LPAREN          reduce using rule 86 (inteiro -> INTEGER .)
    FLOAT           reduce using rule 86 (inteiro -> INTEGER .)
    STRING          reduce using rule 86 (inteiro -> INTEGER .)
    BOOLEAN         reduce using rule 86 (inteiro -> INTEGER .)
    $end            reduce using rule 86 (inteiro -> INTEGER .)
    FECHA_CHAVE     reduce using rule 86 (inteiro -> INTEGER .)


state 68

    (102) loop_while -> WHILE . exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 171
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 69

    (6) exp_2 -> or .

    OR_S            reduce using rule 6 (exp_2 -> or .)
    XOR_S           reduce using rule 6 (exp_2 -> or .)
    SAY             reduce using rule 6 (exp_2 -> or .)
    MY              reduce using rule 6 (exp_2 -> or .)
    OUR             reduce using rule 6 (exp_2 -> or .)
    LIST            reduce using rule 6 (exp_2 -> or .)
    FUNCTION        reduce using rule 6 (exp_2 -> or .)
    ESCALAR         reduce using rule 6 (exp_2 -> or .)
    ID              reduce using rule 6 (exp_2 -> or .)
    IF              reduce using rule 6 (exp_2 -> or .)
    LOOP            reduce using rule 6 (exp_2 -> or .)
    FOR             reduce using rule 6 (exp_2 -> or .)
    INTEGER         reduce using rule 6 (exp_2 -> or .)
    WHILE           reduce using rule 6 (exp_2 -> or .)
    ABRE_CHAVE      reduce using rule 6 (exp_2 -> or .)
    BREAK           reduce using rule 6 (exp_2 -> or .)
    EXIT            reduce using rule 6 (exp_2 -> or .)
    LAST            reduce using rule 6 (exp_2 -> or .)
    NEXT            reduce using rule 6 (exp_2 -> or .)
    REDO            reduce using rule 6 (exp_2 -> or .)
    RETURN          reduce using rule 6 (exp_2 -> or .)
    CONSTANT        reduce using rule 6 (exp_2 -> or .)
    STATE           reduce using rule 6 (exp_2 -> or .)
    LET             reduce using rule 6 (exp_2 -> or .)
    MULTI           reduce using rule 6 (exp_2 -> or .)
    ONLY            reduce using rule 6 (exp_2 -> or .)
    IMPORT          reduce using rule 6 (exp_2 -> or .)
    NEED            reduce using rule 6 (exp_2 -> or .)
    REQUIRE         reduce using rule 6 (exp_2 -> or .)
    USE             reduce using rule 6 (exp_2 -> or .)
    PUSH            reduce using rule 6 (exp_2 -> or .)
    UNSHIFT         reduce using rule 6 (exp_2 -> or .)
    SPLICE          reduce using rule 6 (exp_2 -> or .)
    NOT             reduce using rule 6 (exp_2 -> or .)
    NEGAC           reduce using rule 6 (exp_2 -> or .)
    ADC_DP          reduce using rule 6 (exp_2 -> or .)
    DECREMENTO      reduce using rule 6 (exp_2 -> or .)
    LPAREN          reduce using rule 6 (exp_2 -> or .)
    FLOAT           reduce using rule 6 (exp_2 -> or .)
    STRING          reduce using rule 6 (exp_2 -> or .)
    BOOLEAN         reduce using rule 6 (exp_2 -> or .)
    $end            reduce using rule 6 (exp_2 -> or .)
    PONTO_VIRGULA   reduce using rule 6 (exp_2 -> or .)
    RPAREN          reduce using rule 6 (exp_2 -> or .)
    FECHA_CHAVE     reduce using rule 6 (exp_2 -> or .)
    COMMA           reduce using rule 6 (exp_2 -> or .)


state 70

    (7) exp_2 -> xor .

    OR_S            reduce using rule 7 (exp_2 -> xor .)
    XOR_S           reduce using rule 7 (exp_2 -> xor .)
    SAY             reduce using rule 7 (exp_2 -> xor .)
    MY              reduce using rule 7 (exp_2 -> xor .)
    OUR             reduce using rule 7 (exp_2 -> xor .)
    LIST            reduce using rule 7 (exp_2 -> xor .)
    FUNCTION        reduce using rule 7 (exp_2 -> xor .)
    ESCALAR         reduce using rule 7 (exp_2 -> xor .)
    ID              reduce using rule 7 (exp_2 -> xor .)
    IF              reduce using rule 7 (exp_2 -> xor .)
    LOOP            reduce using rule 7 (exp_2 -> xor .)
    FOR             reduce using rule 7 (exp_2 -> xor .)
    INTEGER         reduce using rule 7 (exp_2 -> xor .)
    WHILE           reduce using rule 7 (exp_2 -> xor .)
    ABRE_CHAVE      reduce using rule 7 (exp_2 -> xor .)
    BREAK           reduce using rule 7 (exp_2 -> xor .)
    EXIT            reduce using rule 7 (exp_2 -> xor .)
    LAST            reduce using rule 7 (exp_2 -> xor .)
    NEXT            reduce using rule 7 (exp_2 -> xor .)
    REDO            reduce using rule 7 (exp_2 -> xor .)
    RETURN          reduce using rule 7 (exp_2 -> xor .)
    CONSTANT        reduce using rule 7 (exp_2 -> xor .)
    STATE           reduce using rule 7 (exp_2 -> xor .)
    LET             reduce using rule 7 (exp_2 -> xor .)
    MULTI           reduce using rule 7 (exp_2 -> xor .)
    ONLY            reduce using rule 7 (exp_2 -> xor .)
    IMPORT          reduce using rule 7 (exp_2 -> xor .)
    NEED            reduce using rule 7 (exp_2 -> xor .)
    REQUIRE         reduce using rule 7 (exp_2 -> xor .)
    USE             reduce using rule 7 (exp_2 -> xor .)
    PUSH            reduce using rule 7 (exp_2 -> xor .)
    UNSHIFT         reduce using rule 7 (exp_2 -> xor .)
    SPLICE          reduce using rule 7 (exp_2 -> xor .)
    NOT             reduce using rule 7 (exp_2 -> xor .)
    NEGAC           reduce using rule 7 (exp_2 -> xor .)
    ADC_DP          reduce using rule 7 (exp_2 -> xor .)
    DECREMENTO      reduce using rule 7 (exp_2 -> xor .)
    LPAREN          reduce using rule 7 (exp_2 -> xor .)
    FLOAT           reduce using rule 7 (exp_2 -> xor .)
    STRING          reduce using rule 7 (exp_2 -> xor .)
    BOOLEAN         reduce using rule 7 (exp_2 -> xor .)
    $end            reduce using rule 7 (exp_2 -> xor .)
    PONTO_VIRGULA   reduce using rule 7 (exp_2 -> xor .)
    RPAREN          reduce using rule 7 (exp_2 -> xor .)
    FECHA_CHAVE     reduce using rule 7 (exp_2 -> xor .)
    COMMA           reduce using rule 7 (exp_2 -> xor .)


state 71

    (8) exp_2 -> exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    OR_S            reduce using rule 8 (exp_2 -> exp_3 .)
    XOR_S           reduce using rule 8 (exp_2 -> exp_3 .)
    SAY             reduce using rule 8 (exp_2 -> exp_3 .)
    MY              reduce using rule 8 (exp_2 -> exp_3 .)
    OUR             reduce using rule 8 (exp_2 -> exp_3 .)
    LIST            reduce using rule 8 (exp_2 -> exp_3 .)
    FUNCTION        reduce using rule 8 (exp_2 -> exp_3 .)
    ESCALAR         reduce using rule 8 (exp_2 -> exp_3 .)
    ID              reduce using rule 8 (exp_2 -> exp_3 .)
    IF              reduce using rule 8 (exp_2 -> exp_3 .)
    LOOP            reduce using rule 8 (exp_2 -> exp_3 .)
    FOR             reduce using rule 8 (exp_2 -> exp_3 .)
    INTEGER         reduce using rule 8 (exp_2 -> exp_3 .)
    WHILE           reduce using rule 8 (exp_2 -> exp_3 .)
    ABRE_CHAVE      reduce using rule 8 (exp_2 -> exp_3 .)
    BREAK           reduce using rule 8 (exp_2 -> exp_3 .)
    EXIT            reduce using rule 8 (exp_2 -> exp_3 .)
    LAST            reduce using rule 8 (exp_2 -> exp_3 .)
    NEXT            reduce using rule 8 (exp_2 -> exp_3 .)
    REDO            reduce using rule 8 (exp_2 -> exp_3 .)
    RETURN          reduce using rule 8 (exp_2 -> exp_3 .)
    CONSTANT        reduce using rule 8 (exp_2 -> exp_3 .)
    STATE           reduce using rule 8 (exp_2 -> exp_3 .)
    LET             reduce using rule 8 (exp_2 -> exp_3 .)
    MULTI           reduce using rule 8 (exp_2 -> exp_3 .)
    ONLY            reduce using rule 8 (exp_2 -> exp_3 .)
    IMPORT          reduce using rule 8 (exp_2 -> exp_3 .)
    NEED            reduce using rule 8 (exp_2 -> exp_3 .)
    REQUIRE         reduce using rule 8 (exp_2 -> exp_3 .)
    USE             reduce using rule 8 (exp_2 -> exp_3 .)
    PUSH            reduce using rule 8 (exp_2 -> exp_3 .)
    UNSHIFT         reduce using rule 8 (exp_2 -> exp_3 .)
    SPLICE          reduce using rule 8 (exp_2 -> exp_3 .)
    NOT             reduce using rule 8 (exp_2 -> exp_3 .)
    NEGAC           reduce using rule 8 (exp_2 -> exp_3 .)
    ADC_DP          reduce using rule 8 (exp_2 -> exp_3 .)
    DECREMENTO      reduce using rule 8 (exp_2 -> exp_3 .)
    LPAREN          reduce using rule 8 (exp_2 -> exp_3 .)
    FLOAT           reduce using rule 8 (exp_2 -> exp_3 .)
    STRING          reduce using rule 8 (exp_2 -> exp_3 .)
    BOOLEAN         reduce using rule 8 (exp_2 -> exp_3 .)
    $end            reduce using rule 8 (exp_2 -> exp_3 .)
    PONTO_VIRGULA   reduce using rule 8 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 8 (exp_2 -> exp_3 .)
    FECHA_CHAVE     reduce using rule 8 (exp_2 -> exp_3 .)
    COMMA           reduce using rule 8 (exp_2 -> exp_3 .)
    AND_S           shift and go to state 172


state 72

    (174) declaracao_break -> BREAK . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 173


state 73

    (175) declaracao_exit -> EXIT . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 174
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 74

    (176) declaracao_last -> LAST . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 175


state 75

    (177) declaracao_next -> NEXT . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 176


state 76

    (178) declaracao_redo -> REDO . IF BOOLEAN PONTO_VIRGULA

    IF              shift and go to state 177


state 77

    (89) boolean -> BOOLEAN .

    POW             reduce using rule 89 (boolean -> BOOLEAN .)
    MULT            reduce using rule 89 (boolean -> BOOLEAN .)
    DIVIDE          reduce using rule 89 (boolean -> BOOLEAN .)
    DIV             reduce using rule 89 (boolean -> BOOLEAN .)
    DIVI            reduce using rule 89 (boolean -> BOOLEAN .)
    MOD             reduce using rule 89 (boolean -> BOOLEAN .)
    LCM             reduce using rule 89 (boolean -> BOOLEAN .)
    GCD             reduce using rule 89 (boolean -> BOOLEAN .)
    ADC             reduce using rule 89 (boolean -> BOOLEAN .)
    SUB             reduce using rule 89 (boolean -> BOOLEAN .)
    CONC            reduce using rule 89 (boolean -> BOOLEAN .)
    IGUAL_DP        reduce using rule 89 (boolean -> BOOLEAN .)
    DIF             reduce using rule 89 (boolean -> BOOLEAN .)
    MAIOR           reduce using rule 89 (boolean -> BOOLEAN .)
    MENOR           reduce using rule 89 (boolean -> BOOLEAN .)
    MAIOR_IGL       reduce using rule 89 (boolean -> BOOLEAN .)
    LESSEQUAL       reduce using rule 89 (boolean -> BOOLEAN .)
    SMARTMATCH      reduce using rule 89 (boolean -> BOOLEAN .)
    AND_S           reduce using rule 89 (boolean -> BOOLEAN .)
    OR_S            reduce using rule 89 (boolean -> BOOLEAN .)
    XOR_S           reduce using rule 89 (boolean -> BOOLEAN .)
    SAY             reduce using rule 89 (boolean -> BOOLEAN .)
    MY              reduce using rule 89 (boolean -> BOOLEAN .)
    OUR             reduce using rule 89 (boolean -> BOOLEAN .)
    LIST            reduce using rule 89 (boolean -> BOOLEAN .)
    FUNCTION        reduce using rule 89 (boolean -> BOOLEAN .)
    ESCALAR         reduce using rule 89 (boolean -> BOOLEAN .)
    ID              reduce using rule 89 (boolean -> BOOLEAN .)
    IF              reduce using rule 89 (boolean -> BOOLEAN .)
    LOOP            reduce using rule 89 (boolean -> BOOLEAN .)
    FOR             reduce using rule 89 (boolean -> BOOLEAN .)
    INTEGER         reduce using rule 89 (boolean -> BOOLEAN .)
    WHILE           reduce using rule 89 (boolean -> BOOLEAN .)
    ABRE_CHAVE      reduce using rule 89 (boolean -> BOOLEAN .)
    BREAK           reduce using rule 89 (boolean -> BOOLEAN .)
    EXIT            reduce using rule 89 (boolean -> BOOLEAN .)
    LAST            reduce using rule 89 (boolean -> BOOLEAN .)
    NEXT            reduce using rule 89 (boolean -> BOOLEAN .)
    REDO            reduce using rule 89 (boolean -> BOOLEAN .)
    RETURN          reduce using rule 89 (boolean -> BOOLEAN .)
    CONSTANT        reduce using rule 89 (boolean -> BOOLEAN .)
    STATE           reduce using rule 89 (boolean -> BOOLEAN .)
    LET             reduce using rule 89 (boolean -> BOOLEAN .)
    MULTI           reduce using rule 89 (boolean -> BOOLEAN .)
    ONLY            reduce using rule 89 (boolean -> BOOLEAN .)
    IMPORT          reduce using rule 89 (boolean -> BOOLEAN .)
    NEED            reduce using rule 89 (boolean -> BOOLEAN .)
    REQUIRE         reduce using rule 89 (boolean -> BOOLEAN .)
    USE             reduce using rule 89 (boolean -> BOOLEAN .)
    PUSH            reduce using rule 89 (boolean -> BOOLEAN .)
    UNSHIFT         reduce using rule 89 (boolean -> BOOLEAN .)
    SPLICE          reduce using rule 89 (boolean -> BOOLEAN .)
    NOT             reduce using rule 89 (boolean -> BOOLEAN .)
    NEGAC           reduce using rule 89 (boolean -> BOOLEAN .)
    ADC_DP          reduce using rule 89 (boolean -> BOOLEAN .)
    DECREMENTO      reduce using rule 89 (boolean -> BOOLEAN .)
    LPAREN          reduce using rule 89 (boolean -> BOOLEAN .)
    FLOAT           reduce using rule 89 (boolean -> BOOLEAN .)
    STRING          reduce using rule 89 (boolean -> BOOLEAN .)
    BOOLEAN         reduce using rule 89 (boolean -> BOOLEAN .)
    $end            reduce using rule 89 (boolean -> BOOLEAN .)
    PONTO_VIRGULA   reduce using rule 89 (boolean -> BOOLEAN .)
    RPAREN          reduce using rule 89 (boolean -> BOOLEAN .)
    FECHA_CHAVE     reduce using rule 89 (boolean -> BOOLEAN .)
    COMMA           reduce using rule 89 (boolean -> BOOLEAN .)


state 78

    (179) declaracao_return -> RETURN . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 178
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 79

    (180) declaracao_constant -> CONSTANT . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 179


state 80

    (181) declaracao_state -> STATE . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 180


state 81

    (182) declaracao_let -> LET . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 181


state 82

    (183) declaracao_multi -> MULTI . declaracao_de_funcao
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    FUNCTION        shift and go to state 59

    declaracao_de_funcao           shift and go to state 182
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23

state 83

    (184) declaracao_only -> ONLY . declaracao_de_funcao
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    FUNCTION        shift and go to state 59

    declaracao_de_funcao           shift and go to state 183
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23

state 84

    (185) import -> IMPORT . ID MENOR ID MAIOR PONTO_VIRGULA

    ID              shift and go to state 184


state 85

    (186) need -> NEED . ID PONTO_VIRGULA

    ID              shift and go to state 185


state 86

    (187) require -> REQUIRE . ID PONTO_VIRGULA

    ID              shift and go to state 186


state 87

    (188) use -> USE . ID PONTO_VIRGULA

    ID              shift and go to state 187


state 88

    (189) push -> PUSH . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 188


state 89

    (190) unshift -> UNSHIFT . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 189


state 90

    (191) splice -> SPLICE . LIST COMMA lista_valores PONTO_VIRGULA

    LIST            shift and go to state 190


state 91

    (11) exp_3 -> and .

    AND_S           reduce using rule 11 (exp_3 -> and .)
    OR_S            reduce using rule 11 (exp_3 -> and .)
    XOR_S           reduce using rule 11 (exp_3 -> and .)
    SAY             reduce using rule 11 (exp_3 -> and .)
    MY              reduce using rule 11 (exp_3 -> and .)
    OUR             reduce using rule 11 (exp_3 -> and .)
    LIST            reduce using rule 11 (exp_3 -> and .)
    FUNCTION        reduce using rule 11 (exp_3 -> and .)
    ESCALAR         reduce using rule 11 (exp_3 -> and .)
    ID              reduce using rule 11 (exp_3 -> and .)
    IF              reduce using rule 11 (exp_3 -> and .)
    LOOP            reduce using rule 11 (exp_3 -> and .)
    FOR             reduce using rule 11 (exp_3 -> and .)
    INTEGER         reduce using rule 11 (exp_3 -> and .)
    WHILE           reduce using rule 11 (exp_3 -> and .)
    ABRE_CHAVE      reduce using rule 11 (exp_3 -> and .)
    BREAK           reduce using rule 11 (exp_3 -> and .)
    EXIT            reduce using rule 11 (exp_3 -> and .)
    LAST            reduce using rule 11 (exp_3 -> and .)
    NEXT            reduce using rule 11 (exp_3 -> and .)
    REDO            reduce using rule 11 (exp_3 -> and .)
    RETURN          reduce using rule 11 (exp_3 -> and .)
    CONSTANT        reduce using rule 11 (exp_3 -> and .)
    STATE           reduce using rule 11 (exp_3 -> and .)
    LET             reduce using rule 11 (exp_3 -> and .)
    MULTI           reduce using rule 11 (exp_3 -> and .)
    ONLY            reduce using rule 11 (exp_3 -> and .)
    IMPORT          reduce using rule 11 (exp_3 -> and .)
    NEED            reduce using rule 11 (exp_3 -> and .)
    REQUIRE         reduce using rule 11 (exp_3 -> and .)
    USE             reduce using rule 11 (exp_3 -> and .)
    PUSH            reduce using rule 11 (exp_3 -> and .)
    UNSHIFT         reduce using rule 11 (exp_3 -> and .)
    SPLICE          reduce using rule 11 (exp_3 -> and .)
    NOT             reduce using rule 11 (exp_3 -> and .)
    NEGAC           reduce using rule 11 (exp_3 -> and .)
    ADC_DP          reduce using rule 11 (exp_3 -> and .)
    DECREMENTO      reduce using rule 11 (exp_3 -> and .)
    LPAREN          reduce using rule 11 (exp_3 -> and .)
    FLOAT           reduce using rule 11 (exp_3 -> and .)
    STRING          reduce using rule 11 (exp_3 -> and .)
    BOOLEAN         reduce using rule 11 (exp_3 -> and .)
    $end            reduce using rule 11 (exp_3 -> and .)
    PONTO_VIRGULA   reduce using rule 11 (exp_3 -> and .)
    RPAREN          reduce using rule 11 (exp_3 -> and .)
    FECHA_CHAVE     reduce using rule 11 (exp_3 -> and .)
    COMMA           reduce using rule 11 (exp_3 -> and .)


state 92

    (12) exp_3 -> exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 12 (exp_3 -> exp_4 .)
    OR_S            reduce using rule 12 (exp_3 -> exp_4 .)
    XOR_S           reduce using rule 12 (exp_3 -> exp_4 .)
    SAY             reduce using rule 12 (exp_3 -> exp_4 .)
    MY              reduce using rule 12 (exp_3 -> exp_4 .)
    OUR             reduce using rule 12 (exp_3 -> exp_4 .)
    LIST            reduce using rule 12 (exp_3 -> exp_4 .)
    FUNCTION        reduce using rule 12 (exp_3 -> exp_4 .)
    ESCALAR         reduce using rule 12 (exp_3 -> exp_4 .)
    ID              reduce using rule 12 (exp_3 -> exp_4 .)
    IF              reduce using rule 12 (exp_3 -> exp_4 .)
    LOOP            reduce using rule 12 (exp_3 -> exp_4 .)
    FOR             reduce using rule 12 (exp_3 -> exp_4 .)
    INTEGER         reduce using rule 12 (exp_3 -> exp_4 .)
    WHILE           reduce using rule 12 (exp_3 -> exp_4 .)
    ABRE_CHAVE      reduce using rule 12 (exp_3 -> exp_4 .)
    BREAK           reduce using rule 12 (exp_3 -> exp_4 .)
    EXIT            reduce using rule 12 (exp_3 -> exp_4 .)
    LAST            reduce using rule 12 (exp_3 -> exp_4 .)
    NEXT            reduce using rule 12 (exp_3 -> exp_4 .)
    REDO            reduce using rule 12 (exp_3 -> exp_4 .)
    RETURN          reduce using rule 12 (exp_3 -> exp_4 .)
    CONSTANT        reduce using rule 12 (exp_3 -> exp_4 .)
    STATE           reduce using rule 12 (exp_3 -> exp_4 .)
    LET             reduce using rule 12 (exp_3 -> exp_4 .)
    MULTI           reduce using rule 12 (exp_3 -> exp_4 .)
    ONLY            reduce using rule 12 (exp_3 -> exp_4 .)
    IMPORT          reduce using rule 12 (exp_3 -> exp_4 .)
    NEED            reduce using rule 12 (exp_3 -> exp_4 .)
    REQUIRE         reduce using rule 12 (exp_3 -> exp_4 .)
    USE             reduce using rule 12 (exp_3 -> exp_4 .)
    PUSH            reduce using rule 12 (exp_3 -> exp_4 .)
    UNSHIFT         reduce using rule 12 (exp_3 -> exp_4 .)
    SPLICE          reduce using rule 12 (exp_3 -> exp_4 .)
    NOT             reduce using rule 12 (exp_3 -> exp_4 .)
    NEGAC           reduce using rule 12 (exp_3 -> exp_4 .)
    ADC_DP          reduce using rule 12 (exp_3 -> exp_4 .)
    DECREMENTO      reduce using rule 12 (exp_3 -> exp_4 .)
    LPAREN          reduce using rule 12 (exp_3 -> exp_4 .)
    FLOAT           reduce using rule 12 (exp_3 -> exp_4 .)
    STRING          reduce using rule 12 (exp_3 -> exp_4 .)
    BOOLEAN         reduce using rule 12 (exp_3 -> exp_4 .)
    $end            reduce using rule 12 (exp_3 -> exp_4 .)
    PONTO_VIRGULA   reduce using rule 12 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 12 (exp_3 -> exp_4 .)
    FECHA_CHAVE     reduce using rule 12 (exp_3 -> exp_4 .)
    COMMA           reduce using rule 12 (exp_3 -> exp_4 .)
    IGUAL_DP        shift and go to state 191
    DIF             shift and go to state 192
    MAIOR           shift and go to state 193
    MENOR           shift and go to state 194
    MAIOR_IGL       shift and go to state 195
    LESSEQUAL       shift and go to state 196
    SMARTMATCH      shift and go to state 197


state 93

    (14) exp_4 -> igual_dp .

    IGUAL_DP        reduce using rule 14 (exp_4 -> igual_dp .)
    DIF             reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MENOR           reduce using rule 14 (exp_4 -> igual_dp .)
    MAIOR_IGL       reduce using rule 14 (exp_4 -> igual_dp .)
    LESSEQUAL       reduce using rule 14 (exp_4 -> igual_dp .)
    SMARTMATCH      reduce using rule 14 (exp_4 -> igual_dp .)
    AND_S           reduce using rule 14 (exp_4 -> igual_dp .)
    OR_S            reduce using rule 14 (exp_4 -> igual_dp .)
    XOR_S           reduce using rule 14 (exp_4 -> igual_dp .)
    SAY             reduce using rule 14 (exp_4 -> igual_dp .)
    MY              reduce using rule 14 (exp_4 -> igual_dp .)
    OUR             reduce using rule 14 (exp_4 -> igual_dp .)
    LIST            reduce using rule 14 (exp_4 -> igual_dp .)
    FUNCTION        reduce using rule 14 (exp_4 -> igual_dp .)
    ESCALAR         reduce using rule 14 (exp_4 -> igual_dp .)
    ID              reduce using rule 14 (exp_4 -> igual_dp .)
    IF              reduce using rule 14 (exp_4 -> igual_dp .)
    LOOP            reduce using rule 14 (exp_4 -> igual_dp .)
    FOR             reduce using rule 14 (exp_4 -> igual_dp .)
    INTEGER         reduce using rule 14 (exp_4 -> igual_dp .)
    WHILE           reduce using rule 14 (exp_4 -> igual_dp .)
    ABRE_CHAVE      reduce using rule 14 (exp_4 -> igual_dp .)
    BREAK           reduce using rule 14 (exp_4 -> igual_dp .)
    EXIT            reduce using rule 14 (exp_4 -> igual_dp .)
    LAST            reduce using rule 14 (exp_4 -> igual_dp .)
    NEXT            reduce using rule 14 (exp_4 -> igual_dp .)
    REDO            reduce using rule 14 (exp_4 -> igual_dp .)
    RETURN          reduce using rule 14 (exp_4 -> igual_dp .)
    CONSTANT        reduce using rule 14 (exp_4 -> igual_dp .)
    STATE           reduce using rule 14 (exp_4 -> igual_dp .)
    LET             reduce using rule 14 (exp_4 -> igual_dp .)
    MULTI           reduce using rule 14 (exp_4 -> igual_dp .)
    ONLY            reduce using rule 14 (exp_4 -> igual_dp .)
    IMPORT          reduce using rule 14 (exp_4 -> igual_dp .)
    NEED            reduce using rule 14 (exp_4 -> igual_dp .)
    REQUIRE         reduce using rule 14 (exp_4 -> igual_dp .)
    USE             reduce using rule 14 (exp_4 -> igual_dp .)
    PUSH            reduce using rule 14 (exp_4 -> igual_dp .)
    UNSHIFT         reduce using rule 14 (exp_4 -> igual_dp .)
    SPLICE          reduce using rule 14 (exp_4 -> igual_dp .)
    NOT             reduce using rule 14 (exp_4 -> igual_dp .)
    NEGAC           reduce using rule 14 (exp_4 -> igual_dp .)
    ADC_DP          reduce using rule 14 (exp_4 -> igual_dp .)
    DECREMENTO      reduce using rule 14 (exp_4 -> igual_dp .)
    LPAREN          reduce using rule 14 (exp_4 -> igual_dp .)
    FLOAT           reduce using rule 14 (exp_4 -> igual_dp .)
    STRING          reduce using rule 14 (exp_4 -> igual_dp .)
    BOOLEAN         reduce using rule 14 (exp_4 -> igual_dp .)
    $end            reduce using rule 14 (exp_4 -> igual_dp .)
    PONTO_VIRGULA   reduce using rule 14 (exp_4 -> igual_dp .)
    RPAREN          reduce using rule 14 (exp_4 -> igual_dp .)
    FECHA_CHAVE     reduce using rule 14 (exp_4 -> igual_dp .)
    COMMA           reduce using rule 14 (exp_4 -> igual_dp .)


state 94

    (15) exp_4 -> dif .

    IGUAL_DP        reduce using rule 15 (exp_4 -> dif .)
    DIF             reduce using rule 15 (exp_4 -> dif .)
    MAIOR           reduce using rule 15 (exp_4 -> dif .)
    MENOR           reduce using rule 15 (exp_4 -> dif .)
    MAIOR_IGL       reduce using rule 15 (exp_4 -> dif .)
    LESSEQUAL       reduce using rule 15 (exp_4 -> dif .)
    SMARTMATCH      reduce using rule 15 (exp_4 -> dif .)
    AND_S           reduce using rule 15 (exp_4 -> dif .)
    OR_S            reduce using rule 15 (exp_4 -> dif .)
    XOR_S           reduce using rule 15 (exp_4 -> dif .)
    SAY             reduce using rule 15 (exp_4 -> dif .)
    MY              reduce using rule 15 (exp_4 -> dif .)
    OUR             reduce using rule 15 (exp_4 -> dif .)
    LIST            reduce using rule 15 (exp_4 -> dif .)
    FUNCTION        reduce using rule 15 (exp_4 -> dif .)
    ESCALAR         reduce using rule 15 (exp_4 -> dif .)
    ID              reduce using rule 15 (exp_4 -> dif .)
    IF              reduce using rule 15 (exp_4 -> dif .)
    LOOP            reduce using rule 15 (exp_4 -> dif .)
    FOR             reduce using rule 15 (exp_4 -> dif .)
    INTEGER         reduce using rule 15 (exp_4 -> dif .)
    WHILE           reduce using rule 15 (exp_4 -> dif .)
    ABRE_CHAVE      reduce using rule 15 (exp_4 -> dif .)
    BREAK           reduce using rule 15 (exp_4 -> dif .)
    EXIT            reduce using rule 15 (exp_4 -> dif .)
    LAST            reduce using rule 15 (exp_4 -> dif .)
    NEXT            reduce using rule 15 (exp_4 -> dif .)
    REDO            reduce using rule 15 (exp_4 -> dif .)
    RETURN          reduce using rule 15 (exp_4 -> dif .)
    CONSTANT        reduce using rule 15 (exp_4 -> dif .)
    STATE           reduce using rule 15 (exp_4 -> dif .)
    LET             reduce using rule 15 (exp_4 -> dif .)
    MULTI           reduce using rule 15 (exp_4 -> dif .)
    ONLY            reduce using rule 15 (exp_4 -> dif .)
    IMPORT          reduce using rule 15 (exp_4 -> dif .)
    NEED            reduce using rule 15 (exp_4 -> dif .)
    REQUIRE         reduce using rule 15 (exp_4 -> dif .)
    USE             reduce using rule 15 (exp_4 -> dif .)
    PUSH            reduce using rule 15 (exp_4 -> dif .)
    UNSHIFT         reduce using rule 15 (exp_4 -> dif .)
    SPLICE          reduce using rule 15 (exp_4 -> dif .)
    NOT             reduce using rule 15 (exp_4 -> dif .)
    NEGAC           reduce using rule 15 (exp_4 -> dif .)
    ADC_DP          reduce using rule 15 (exp_4 -> dif .)
    DECREMENTO      reduce using rule 15 (exp_4 -> dif .)
    LPAREN          reduce using rule 15 (exp_4 -> dif .)
    FLOAT           reduce using rule 15 (exp_4 -> dif .)
    STRING          reduce using rule 15 (exp_4 -> dif .)
    BOOLEAN         reduce using rule 15 (exp_4 -> dif .)
    $end            reduce using rule 15 (exp_4 -> dif .)
    PONTO_VIRGULA   reduce using rule 15 (exp_4 -> dif .)
    RPAREN          reduce using rule 15 (exp_4 -> dif .)
    FECHA_CHAVE     reduce using rule 15 (exp_4 -> dif .)
    COMMA           reduce using rule 15 (exp_4 -> dif .)


state 95

    (16) exp_4 -> maior .

    IGUAL_DP        reduce using rule 16 (exp_4 -> maior .)
    DIF             reduce using rule 16 (exp_4 -> maior .)
    MAIOR           reduce using rule 16 (exp_4 -> maior .)
    MENOR           reduce using rule 16 (exp_4 -> maior .)
    MAIOR_IGL       reduce using rule 16 (exp_4 -> maior .)
    LESSEQUAL       reduce using rule 16 (exp_4 -> maior .)
    SMARTMATCH      reduce using rule 16 (exp_4 -> maior .)
    AND_S           reduce using rule 16 (exp_4 -> maior .)
    OR_S            reduce using rule 16 (exp_4 -> maior .)
    XOR_S           reduce using rule 16 (exp_4 -> maior .)
    SAY             reduce using rule 16 (exp_4 -> maior .)
    MY              reduce using rule 16 (exp_4 -> maior .)
    OUR             reduce using rule 16 (exp_4 -> maior .)
    LIST            reduce using rule 16 (exp_4 -> maior .)
    FUNCTION        reduce using rule 16 (exp_4 -> maior .)
    ESCALAR         reduce using rule 16 (exp_4 -> maior .)
    ID              reduce using rule 16 (exp_4 -> maior .)
    IF              reduce using rule 16 (exp_4 -> maior .)
    LOOP            reduce using rule 16 (exp_4 -> maior .)
    FOR             reduce using rule 16 (exp_4 -> maior .)
    INTEGER         reduce using rule 16 (exp_4 -> maior .)
    WHILE           reduce using rule 16 (exp_4 -> maior .)
    ABRE_CHAVE      reduce using rule 16 (exp_4 -> maior .)
    BREAK           reduce using rule 16 (exp_4 -> maior .)
    EXIT            reduce using rule 16 (exp_4 -> maior .)
    LAST            reduce using rule 16 (exp_4 -> maior .)
    NEXT            reduce using rule 16 (exp_4 -> maior .)
    REDO            reduce using rule 16 (exp_4 -> maior .)
    RETURN          reduce using rule 16 (exp_4 -> maior .)
    CONSTANT        reduce using rule 16 (exp_4 -> maior .)
    STATE           reduce using rule 16 (exp_4 -> maior .)
    LET             reduce using rule 16 (exp_4 -> maior .)
    MULTI           reduce using rule 16 (exp_4 -> maior .)
    ONLY            reduce using rule 16 (exp_4 -> maior .)
    IMPORT          reduce using rule 16 (exp_4 -> maior .)
    NEED            reduce using rule 16 (exp_4 -> maior .)
    REQUIRE         reduce using rule 16 (exp_4 -> maior .)
    USE             reduce using rule 16 (exp_4 -> maior .)
    PUSH            reduce using rule 16 (exp_4 -> maior .)
    UNSHIFT         reduce using rule 16 (exp_4 -> maior .)
    SPLICE          reduce using rule 16 (exp_4 -> maior .)
    NOT             reduce using rule 16 (exp_4 -> maior .)
    NEGAC           reduce using rule 16 (exp_4 -> maior .)
    ADC_DP          reduce using rule 16 (exp_4 -> maior .)
    DECREMENTO      reduce using rule 16 (exp_4 -> maior .)
    LPAREN          reduce using rule 16 (exp_4 -> maior .)
    FLOAT           reduce using rule 16 (exp_4 -> maior .)
    STRING          reduce using rule 16 (exp_4 -> maior .)
    BOOLEAN         reduce using rule 16 (exp_4 -> maior .)
    $end            reduce using rule 16 (exp_4 -> maior .)
    PONTO_VIRGULA   reduce using rule 16 (exp_4 -> maior .)
    RPAREN          reduce using rule 16 (exp_4 -> maior .)
    FECHA_CHAVE     reduce using rule 16 (exp_4 -> maior .)
    COMMA           reduce using rule 16 (exp_4 -> maior .)


state 96

    (17) exp_4 -> menor .

    IGUAL_DP        reduce using rule 17 (exp_4 -> menor .)
    DIF             reduce using rule 17 (exp_4 -> menor .)
    MAIOR           reduce using rule 17 (exp_4 -> menor .)
    MENOR           reduce using rule 17 (exp_4 -> menor .)
    MAIOR_IGL       reduce using rule 17 (exp_4 -> menor .)
    LESSEQUAL       reduce using rule 17 (exp_4 -> menor .)
    SMARTMATCH      reduce using rule 17 (exp_4 -> menor .)
    AND_S           reduce using rule 17 (exp_4 -> menor .)
    OR_S            reduce using rule 17 (exp_4 -> menor .)
    XOR_S           reduce using rule 17 (exp_4 -> menor .)
    SAY             reduce using rule 17 (exp_4 -> menor .)
    MY              reduce using rule 17 (exp_4 -> menor .)
    OUR             reduce using rule 17 (exp_4 -> menor .)
    LIST            reduce using rule 17 (exp_4 -> menor .)
    FUNCTION        reduce using rule 17 (exp_4 -> menor .)
    ESCALAR         reduce using rule 17 (exp_4 -> menor .)
    ID              reduce using rule 17 (exp_4 -> menor .)
    IF              reduce using rule 17 (exp_4 -> menor .)
    LOOP            reduce using rule 17 (exp_4 -> menor .)
    FOR             reduce using rule 17 (exp_4 -> menor .)
    INTEGER         reduce using rule 17 (exp_4 -> menor .)
    WHILE           reduce using rule 17 (exp_4 -> menor .)
    ABRE_CHAVE      reduce using rule 17 (exp_4 -> menor .)
    BREAK           reduce using rule 17 (exp_4 -> menor .)
    EXIT            reduce using rule 17 (exp_4 -> menor .)
    LAST            reduce using rule 17 (exp_4 -> menor .)
    NEXT            reduce using rule 17 (exp_4 -> menor .)
    REDO            reduce using rule 17 (exp_4 -> menor .)
    RETURN          reduce using rule 17 (exp_4 -> menor .)
    CONSTANT        reduce using rule 17 (exp_4 -> menor .)
    STATE           reduce using rule 17 (exp_4 -> menor .)
    LET             reduce using rule 17 (exp_4 -> menor .)
    MULTI           reduce using rule 17 (exp_4 -> menor .)
    ONLY            reduce using rule 17 (exp_4 -> menor .)
    IMPORT          reduce using rule 17 (exp_4 -> menor .)
    NEED            reduce using rule 17 (exp_4 -> menor .)
    REQUIRE         reduce using rule 17 (exp_4 -> menor .)
    USE             reduce using rule 17 (exp_4 -> menor .)
    PUSH            reduce using rule 17 (exp_4 -> menor .)
    UNSHIFT         reduce using rule 17 (exp_4 -> menor .)
    SPLICE          reduce using rule 17 (exp_4 -> menor .)
    NOT             reduce using rule 17 (exp_4 -> menor .)
    NEGAC           reduce using rule 17 (exp_4 -> menor .)
    ADC_DP          reduce using rule 17 (exp_4 -> menor .)
    DECREMENTO      reduce using rule 17 (exp_4 -> menor .)
    LPAREN          reduce using rule 17 (exp_4 -> menor .)
    FLOAT           reduce using rule 17 (exp_4 -> menor .)
    STRING          reduce using rule 17 (exp_4 -> menor .)
    BOOLEAN         reduce using rule 17 (exp_4 -> menor .)
    $end            reduce using rule 17 (exp_4 -> menor .)
    PONTO_VIRGULA   reduce using rule 17 (exp_4 -> menor .)
    RPAREN          reduce using rule 17 (exp_4 -> menor .)
    FECHA_CHAVE     reduce using rule 17 (exp_4 -> menor .)
    COMMA           reduce using rule 17 (exp_4 -> menor .)


state 97

    (18) exp_4 -> maior_igual .

    IGUAL_DP        reduce using rule 18 (exp_4 -> maior_igual .)
    DIF             reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MENOR           reduce using rule 18 (exp_4 -> maior_igual .)
    MAIOR_IGL       reduce using rule 18 (exp_4 -> maior_igual .)
    LESSEQUAL       reduce using rule 18 (exp_4 -> maior_igual .)
    SMARTMATCH      reduce using rule 18 (exp_4 -> maior_igual .)
    AND_S           reduce using rule 18 (exp_4 -> maior_igual .)
    OR_S            reduce using rule 18 (exp_4 -> maior_igual .)
    XOR_S           reduce using rule 18 (exp_4 -> maior_igual .)
    SAY             reduce using rule 18 (exp_4 -> maior_igual .)
    MY              reduce using rule 18 (exp_4 -> maior_igual .)
    OUR             reduce using rule 18 (exp_4 -> maior_igual .)
    LIST            reduce using rule 18 (exp_4 -> maior_igual .)
    FUNCTION        reduce using rule 18 (exp_4 -> maior_igual .)
    ESCALAR         reduce using rule 18 (exp_4 -> maior_igual .)
    ID              reduce using rule 18 (exp_4 -> maior_igual .)
    IF              reduce using rule 18 (exp_4 -> maior_igual .)
    LOOP            reduce using rule 18 (exp_4 -> maior_igual .)
    FOR             reduce using rule 18 (exp_4 -> maior_igual .)
    INTEGER         reduce using rule 18 (exp_4 -> maior_igual .)
    WHILE           reduce using rule 18 (exp_4 -> maior_igual .)
    ABRE_CHAVE      reduce using rule 18 (exp_4 -> maior_igual .)
    BREAK           reduce using rule 18 (exp_4 -> maior_igual .)
    EXIT            reduce using rule 18 (exp_4 -> maior_igual .)
    LAST            reduce using rule 18 (exp_4 -> maior_igual .)
    NEXT            reduce using rule 18 (exp_4 -> maior_igual .)
    REDO            reduce using rule 18 (exp_4 -> maior_igual .)
    RETURN          reduce using rule 18 (exp_4 -> maior_igual .)
    CONSTANT        reduce using rule 18 (exp_4 -> maior_igual .)
    STATE           reduce using rule 18 (exp_4 -> maior_igual .)
    LET             reduce using rule 18 (exp_4 -> maior_igual .)
    MULTI           reduce using rule 18 (exp_4 -> maior_igual .)
    ONLY            reduce using rule 18 (exp_4 -> maior_igual .)
    IMPORT          reduce using rule 18 (exp_4 -> maior_igual .)
    NEED            reduce using rule 18 (exp_4 -> maior_igual .)
    REQUIRE         reduce using rule 18 (exp_4 -> maior_igual .)
    USE             reduce using rule 18 (exp_4 -> maior_igual .)
    PUSH            reduce using rule 18 (exp_4 -> maior_igual .)
    UNSHIFT         reduce using rule 18 (exp_4 -> maior_igual .)
    SPLICE          reduce using rule 18 (exp_4 -> maior_igual .)
    NOT             reduce using rule 18 (exp_4 -> maior_igual .)
    NEGAC           reduce using rule 18 (exp_4 -> maior_igual .)
    ADC_DP          reduce using rule 18 (exp_4 -> maior_igual .)
    DECREMENTO      reduce using rule 18 (exp_4 -> maior_igual .)
    LPAREN          reduce using rule 18 (exp_4 -> maior_igual .)
    FLOAT           reduce using rule 18 (exp_4 -> maior_igual .)
    STRING          reduce using rule 18 (exp_4 -> maior_igual .)
    BOOLEAN         reduce using rule 18 (exp_4 -> maior_igual .)
    $end            reduce using rule 18 (exp_4 -> maior_igual .)
    PONTO_VIRGULA   reduce using rule 18 (exp_4 -> maior_igual .)
    RPAREN          reduce using rule 18 (exp_4 -> maior_igual .)
    FECHA_CHAVE     reduce using rule 18 (exp_4 -> maior_igual .)
    COMMA           reduce using rule 18 (exp_4 -> maior_igual .)


state 98

    (19) exp_4 -> menor_igual .

    IGUAL_DP        reduce using rule 19 (exp_4 -> menor_igual .)
    DIF             reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MENOR           reduce using rule 19 (exp_4 -> menor_igual .)
    MAIOR_IGL       reduce using rule 19 (exp_4 -> menor_igual .)
    LESSEQUAL       reduce using rule 19 (exp_4 -> menor_igual .)
    SMARTMATCH      reduce using rule 19 (exp_4 -> menor_igual .)
    AND_S           reduce using rule 19 (exp_4 -> menor_igual .)
    OR_S            reduce using rule 19 (exp_4 -> menor_igual .)
    XOR_S           reduce using rule 19 (exp_4 -> menor_igual .)
    SAY             reduce using rule 19 (exp_4 -> menor_igual .)
    MY              reduce using rule 19 (exp_4 -> menor_igual .)
    OUR             reduce using rule 19 (exp_4 -> menor_igual .)
    LIST            reduce using rule 19 (exp_4 -> menor_igual .)
    FUNCTION        reduce using rule 19 (exp_4 -> menor_igual .)
    ESCALAR         reduce using rule 19 (exp_4 -> menor_igual .)
    ID              reduce using rule 19 (exp_4 -> menor_igual .)
    IF              reduce using rule 19 (exp_4 -> menor_igual .)
    LOOP            reduce using rule 19 (exp_4 -> menor_igual .)
    FOR             reduce using rule 19 (exp_4 -> menor_igual .)
    INTEGER         reduce using rule 19 (exp_4 -> menor_igual .)
    WHILE           reduce using rule 19 (exp_4 -> menor_igual .)
    ABRE_CHAVE      reduce using rule 19 (exp_4 -> menor_igual .)
    BREAK           reduce using rule 19 (exp_4 -> menor_igual .)
    EXIT            reduce using rule 19 (exp_4 -> menor_igual .)
    LAST            reduce using rule 19 (exp_4 -> menor_igual .)
    NEXT            reduce using rule 19 (exp_4 -> menor_igual .)
    REDO            reduce using rule 19 (exp_4 -> menor_igual .)
    RETURN          reduce using rule 19 (exp_4 -> menor_igual .)
    CONSTANT        reduce using rule 19 (exp_4 -> menor_igual .)
    STATE           reduce using rule 19 (exp_4 -> menor_igual .)
    LET             reduce using rule 19 (exp_4 -> menor_igual .)
    MULTI           reduce using rule 19 (exp_4 -> menor_igual .)
    ONLY            reduce using rule 19 (exp_4 -> menor_igual .)
    IMPORT          reduce using rule 19 (exp_4 -> menor_igual .)
    NEED            reduce using rule 19 (exp_4 -> menor_igual .)
    REQUIRE         reduce using rule 19 (exp_4 -> menor_igual .)
    USE             reduce using rule 19 (exp_4 -> menor_igual .)
    PUSH            reduce using rule 19 (exp_4 -> menor_igual .)
    UNSHIFT         reduce using rule 19 (exp_4 -> menor_igual .)
    SPLICE          reduce using rule 19 (exp_4 -> menor_igual .)
    NOT             reduce using rule 19 (exp_4 -> menor_igual .)
    NEGAC           reduce using rule 19 (exp_4 -> menor_igual .)
    ADC_DP          reduce using rule 19 (exp_4 -> menor_igual .)
    DECREMENTO      reduce using rule 19 (exp_4 -> menor_igual .)
    LPAREN          reduce using rule 19 (exp_4 -> menor_igual .)
    FLOAT           reduce using rule 19 (exp_4 -> menor_igual .)
    STRING          reduce using rule 19 (exp_4 -> menor_igual .)
    BOOLEAN         reduce using rule 19 (exp_4 -> menor_igual .)
    $end            reduce using rule 19 (exp_4 -> menor_igual .)
    PONTO_VIRGULA   reduce using rule 19 (exp_4 -> menor_igual .)
    RPAREN          reduce using rule 19 (exp_4 -> menor_igual .)
    FECHA_CHAVE     reduce using rule 19 (exp_4 -> menor_igual .)
    COMMA           reduce using rule 19 (exp_4 -> menor_igual .)


state 99

    (20) exp_4 -> smartmatch .

    IGUAL_DP        reduce using rule 20 (exp_4 -> smartmatch .)
    DIF             reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MENOR           reduce using rule 20 (exp_4 -> smartmatch .)
    MAIOR_IGL       reduce using rule 20 (exp_4 -> smartmatch .)
    LESSEQUAL       reduce using rule 20 (exp_4 -> smartmatch .)
    SMARTMATCH      reduce using rule 20 (exp_4 -> smartmatch .)
    AND_S           reduce using rule 20 (exp_4 -> smartmatch .)
    OR_S            reduce using rule 20 (exp_4 -> smartmatch .)
    XOR_S           reduce using rule 20 (exp_4 -> smartmatch .)
    SAY             reduce using rule 20 (exp_4 -> smartmatch .)
    MY              reduce using rule 20 (exp_4 -> smartmatch .)
    OUR             reduce using rule 20 (exp_4 -> smartmatch .)
    LIST            reduce using rule 20 (exp_4 -> smartmatch .)
    FUNCTION        reduce using rule 20 (exp_4 -> smartmatch .)
    ESCALAR         reduce using rule 20 (exp_4 -> smartmatch .)
    ID              reduce using rule 20 (exp_4 -> smartmatch .)
    IF              reduce using rule 20 (exp_4 -> smartmatch .)
    LOOP            reduce using rule 20 (exp_4 -> smartmatch .)
    FOR             reduce using rule 20 (exp_4 -> smartmatch .)
    INTEGER         reduce using rule 20 (exp_4 -> smartmatch .)
    WHILE           reduce using rule 20 (exp_4 -> smartmatch .)
    ABRE_CHAVE      reduce using rule 20 (exp_4 -> smartmatch .)
    BREAK           reduce using rule 20 (exp_4 -> smartmatch .)
    EXIT            reduce using rule 20 (exp_4 -> smartmatch .)
    LAST            reduce using rule 20 (exp_4 -> smartmatch .)
    NEXT            reduce using rule 20 (exp_4 -> smartmatch .)
    REDO            reduce using rule 20 (exp_4 -> smartmatch .)
    RETURN          reduce using rule 20 (exp_4 -> smartmatch .)
    CONSTANT        reduce using rule 20 (exp_4 -> smartmatch .)
    STATE           reduce using rule 20 (exp_4 -> smartmatch .)
    LET             reduce using rule 20 (exp_4 -> smartmatch .)
    MULTI           reduce using rule 20 (exp_4 -> smartmatch .)
    ONLY            reduce using rule 20 (exp_4 -> smartmatch .)
    IMPORT          reduce using rule 20 (exp_4 -> smartmatch .)
    NEED            reduce using rule 20 (exp_4 -> smartmatch .)
    REQUIRE         reduce using rule 20 (exp_4 -> smartmatch .)
    USE             reduce using rule 20 (exp_4 -> smartmatch .)
    PUSH            reduce using rule 20 (exp_4 -> smartmatch .)
    UNSHIFT         reduce using rule 20 (exp_4 -> smartmatch .)
    SPLICE          reduce using rule 20 (exp_4 -> smartmatch .)
    NOT             reduce using rule 20 (exp_4 -> smartmatch .)
    NEGAC           reduce using rule 20 (exp_4 -> smartmatch .)
    ADC_DP          reduce using rule 20 (exp_4 -> smartmatch .)
    DECREMENTO      reduce using rule 20 (exp_4 -> smartmatch .)
    LPAREN          reduce using rule 20 (exp_4 -> smartmatch .)
    FLOAT           reduce using rule 20 (exp_4 -> smartmatch .)
    STRING          reduce using rule 20 (exp_4 -> smartmatch .)
    BOOLEAN         reduce using rule 20 (exp_4 -> smartmatch .)
    $end            reduce using rule 20 (exp_4 -> smartmatch .)
    PONTO_VIRGULA   reduce using rule 20 (exp_4 -> smartmatch .)
    RPAREN          reduce using rule 20 (exp_4 -> smartmatch .)
    FECHA_CHAVE     reduce using rule 20 (exp_4 -> smartmatch .)
    COMMA           reduce using rule 20 (exp_4 -> smartmatch .)


state 100

    (21) exp_4 -> exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 21 (exp_4 -> exp_5 .)
    DIF             reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MENOR           reduce using rule 21 (exp_4 -> exp_5 .)
    MAIOR_IGL       reduce using rule 21 (exp_4 -> exp_5 .)
    LESSEQUAL       reduce using rule 21 (exp_4 -> exp_5 .)
    SMARTMATCH      reduce using rule 21 (exp_4 -> exp_5 .)
    AND_S           reduce using rule 21 (exp_4 -> exp_5 .)
    OR_S            reduce using rule 21 (exp_4 -> exp_5 .)
    XOR_S           reduce using rule 21 (exp_4 -> exp_5 .)
    SAY             reduce using rule 21 (exp_4 -> exp_5 .)
    MY              reduce using rule 21 (exp_4 -> exp_5 .)
    OUR             reduce using rule 21 (exp_4 -> exp_5 .)
    LIST            reduce using rule 21 (exp_4 -> exp_5 .)
    FUNCTION        reduce using rule 21 (exp_4 -> exp_5 .)
    ESCALAR         reduce using rule 21 (exp_4 -> exp_5 .)
    ID              reduce using rule 21 (exp_4 -> exp_5 .)
    IF              reduce using rule 21 (exp_4 -> exp_5 .)
    LOOP            reduce using rule 21 (exp_4 -> exp_5 .)
    FOR             reduce using rule 21 (exp_4 -> exp_5 .)
    INTEGER         reduce using rule 21 (exp_4 -> exp_5 .)
    WHILE           reduce using rule 21 (exp_4 -> exp_5 .)
    ABRE_CHAVE      reduce using rule 21 (exp_4 -> exp_5 .)
    BREAK           reduce using rule 21 (exp_4 -> exp_5 .)
    EXIT            reduce using rule 21 (exp_4 -> exp_5 .)
    LAST            reduce using rule 21 (exp_4 -> exp_5 .)
    NEXT            reduce using rule 21 (exp_4 -> exp_5 .)
    REDO            reduce using rule 21 (exp_4 -> exp_5 .)
    RETURN          reduce using rule 21 (exp_4 -> exp_5 .)
    CONSTANT        reduce using rule 21 (exp_4 -> exp_5 .)
    STATE           reduce using rule 21 (exp_4 -> exp_5 .)
    LET             reduce using rule 21 (exp_4 -> exp_5 .)
    MULTI           reduce using rule 21 (exp_4 -> exp_5 .)
    ONLY            reduce using rule 21 (exp_4 -> exp_5 .)
    IMPORT          reduce using rule 21 (exp_4 -> exp_5 .)
    NEED            reduce using rule 21 (exp_4 -> exp_5 .)
    REQUIRE         reduce using rule 21 (exp_4 -> exp_5 .)
    USE             reduce using rule 21 (exp_4 -> exp_5 .)
    PUSH            reduce using rule 21 (exp_4 -> exp_5 .)
    UNSHIFT         reduce using rule 21 (exp_4 -> exp_5 .)
    SPLICE          reduce using rule 21 (exp_4 -> exp_5 .)
    NOT             reduce using rule 21 (exp_4 -> exp_5 .)
    NEGAC           reduce using rule 21 (exp_4 -> exp_5 .)
    ADC_DP          reduce using rule 21 (exp_4 -> exp_5 .)
    DECREMENTO      reduce using rule 21 (exp_4 -> exp_5 .)
    LPAREN          reduce using rule 21 (exp_4 -> exp_5 .)
    FLOAT           reduce using rule 21 (exp_4 -> exp_5 .)
    STRING          reduce using rule 21 (exp_4 -> exp_5 .)
    BOOLEAN         reduce using rule 21 (exp_4 -> exp_5 .)
    $end            reduce using rule 21 (exp_4 -> exp_5 .)
    PONTO_VIRGULA   reduce using rule 21 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 21 (exp_4 -> exp_5 .)
    FECHA_CHAVE     reduce using rule 21 (exp_4 -> exp_5 .)
    COMMA           reduce using rule 21 (exp_4 -> exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 101

    (29) exp_5 -> adicao .

    ADC             reduce using rule 29 (exp_5 -> adicao .)
    SUB             reduce using rule 29 (exp_5 -> adicao .)
    CONC            reduce using rule 29 (exp_5 -> adicao .)
    IGUAL_DP        reduce using rule 29 (exp_5 -> adicao .)
    DIF             reduce using rule 29 (exp_5 -> adicao .)
    MAIOR           reduce using rule 29 (exp_5 -> adicao .)
    MENOR           reduce using rule 29 (exp_5 -> adicao .)
    MAIOR_IGL       reduce using rule 29 (exp_5 -> adicao .)
    LESSEQUAL       reduce using rule 29 (exp_5 -> adicao .)
    SMARTMATCH      reduce using rule 29 (exp_5 -> adicao .)
    AND_S           reduce using rule 29 (exp_5 -> adicao .)
    OR_S            reduce using rule 29 (exp_5 -> adicao .)
    XOR_S           reduce using rule 29 (exp_5 -> adicao .)
    SAY             reduce using rule 29 (exp_5 -> adicao .)
    MY              reduce using rule 29 (exp_5 -> adicao .)
    OUR             reduce using rule 29 (exp_5 -> adicao .)
    LIST            reduce using rule 29 (exp_5 -> adicao .)
    FUNCTION        reduce using rule 29 (exp_5 -> adicao .)
    ESCALAR         reduce using rule 29 (exp_5 -> adicao .)
    ID              reduce using rule 29 (exp_5 -> adicao .)
    IF              reduce using rule 29 (exp_5 -> adicao .)
    LOOP            reduce using rule 29 (exp_5 -> adicao .)
    FOR             reduce using rule 29 (exp_5 -> adicao .)
    INTEGER         reduce using rule 29 (exp_5 -> adicao .)
    WHILE           reduce using rule 29 (exp_5 -> adicao .)
    ABRE_CHAVE      reduce using rule 29 (exp_5 -> adicao .)
    BREAK           reduce using rule 29 (exp_5 -> adicao .)
    EXIT            reduce using rule 29 (exp_5 -> adicao .)
    LAST            reduce using rule 29 (exp_5 -> adicao .)
    NEXT            reduce using rule 29 (exp_5 -> adicao .)
    REDO            reduce using rule 29 (exp_5 -> adicao .)
    RETURN          reduce using rule 29 (exp_5 -> adicao .)
    CONSTANT        reduce using rule 29 (exp_5 -> adicao .)
    STATE           reduce using rule 29 (exp_5 -> adicao .)
    LET             reduce using rule 29 (exp_5 -> adicao .)
    MULTI           reduce using rule 29 (exp_5 -> adicao .)
    ONLY            reduce using rule 29 (exp_5 -> adicao .)
    IMPORT          reduce using rule 29 (exp_5 -> adicao .)
    NEED            reduce using rule 29 (exp_5 -> adicao .)
    REQUIRE         reduce using rule 29 (exp_5 -> adicao .)
    USE             reduce using rule 29 (exp_5 -> adicao .)
    PUSH            reduce using rule 29 (exp_5 -> adicao .)
    UNSHIFT         reduce using rule 29 (exp_5 -> adicao .)
    SPLICE          reduce using rule 29 (exp_5 -> adicao .)
    NOT             reduce using rule 29 (exp_5 -> adicao .)
    NEGAC           reduce using rule 29 (exp_5 -> adicao .)
    ADC_DP          reduce using rule 29 (exp_5 -> adicao .)
    DECREMENTO      reduce using rule 29 (exp_5 -> adicao .)
    LPAREN          reduce using rule 29 (exp_5 -> adicao .)
    FLOAT           reduce using rule 29 (exp_5 -> adicao .)
    STRING          reduce using rule 29 (exp_5 -> adicao .)
    BOOLEAN         reduce using rule 29 (exp_5 -> adicao .)
    $end            reduce using rule 29 (exp_5 -> adicao .)
    PONTO_VIRGULA   reduce using rule 29 (exp_5 -> adicao .)
    RPAREN          reduce using rule 29 (exp_5 -> adicao .)
    FECHA_CHAVE     reduce using rule 29 (exp_5 -> adicao .)
    COMMA           reduce using rule 29 (exp_5 -> adicao .)


state 102

    (30) exp_5 -> subtracao .

    ADC             reduce using rule 30 (exp_5 -> subtracao .)
    SUB             reduce using rule 30 (exp_5 -> subtracao .)
    CONC            reduce using rule 30 (exp_5 -> subtracao .)
    IGUAL_DP        reduce using rule 30 (exp_5 -> subtracao .)
    DIF             reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR           reduce using rule 30 (exp_5 -> subtracao .)
    MENOR           reduce using rule 30 (exp_5 -> subtracao .)
    MAIOR_IGL       reduce using rule 30 (exp_5 -> subtracao .)
    LESSEQUAL       reduce using rule 30 (exp_5 -> subtracao .)
    SMARTMATCH      reduce using rule 30 (exp_5 -> subtracao .)
    AND_S           reduce using rule 30 (exp_5 -> subtracao .)
    OR_S            reduce using rule 30 (exp_5 -> subtracao .)
    XOR_S           reduce using rule 30 (exp_5 -> subtracao .)
    SAY             reduce using rule 30 (exp_5 -> subtracao .)
    MY              reduce using rule 30 (exp_5 -> subtracao .)
    OUR             reduce using rule 30 (exp_5 -> subtracao .)
    LIST            reduce using rule 30 (exp_5 -> subtracao .)
    FUNCTION        reduce using rule 30 (exp_5 -> subtracao .)
    ESCALAR         reduce using rule 30 (exp_5 -> subtracao .)
    ID              reduce using rule 30 (exp_5 -> subtracao .)
    IF              reduce using rule 30 (exp_5 -> subtracao .)
    LOOP            reduce using rule 30 (exp_5 -> subtracao .)
    FOR             reduce using rule 30 (exp_5 -> subtracao .)
    INTEGER         reduce using rule 30 (exp_5 -> subtracao .)
    WHILE           reduce using rule 30 (exp_5 -> subtracao .)
    ABRE_CHAVE      reduce using rule 30 (exp_5 -> subtracao .)
    BREAK           reduce using rule 30 (exp_5 -> subtracao .)
    EXIT            reduce using rule 30 (exp_5 -> subtracao .)
    LAST            reduce using rule 30 (exp_5 -> subtracao .)
    NEXT            reduce using rule 30 (exp_5 -> subtracao .)
    REDO            reduce using rule 30 (exp_5 -> subtracao .)
    RETURN          reduce using rule 30 (exp_5 -> subtracao .)
    CONSTANT        reduce using rule 30 (exp_5 -> subtracao .)
    STATE           reduce using rule 30 (exp_5 -> subtracao .)
    LET             reduce using rule 30 (exp_5 -> subtracao .)
    MULTI           reduce using rule 30 (exp_5 -> subtracao .)
    ONLY            reduce using rule 30 (exp_5 -> subtracao .)
    IMPORT          reduce using rule 30 (exp_5 -> subtracao .)
    NEED            reduce using rule 30 (exp_5 -> subtracao .)
    REQUIRE         reduce using rule 30 (exp_5 -> subtracao .)
    USE             reduce using rule 30 (exp_5 -> subtracao .)
    PUSH            reduce using rule 30 (exp_5 -> subtracao .)
    UNSHIFT         reduce using rule 30 (exp_5 -> subtracao .)
    SPLICE          reduce using rule 30 (exp_5 -> subtracao .)
    NOT             reduce using rule 30 (exp_5 -> subtracao .)
    NEGAC           reduce using rule 30 (exp_5 -> subtracao .)
    ADC_DP          reduce using rule 30 (exp_5 -> subtracao .)
    DECREMENTO      reduce using rule 30 (exp_5 -> subtracao .)
    LPAREN          reduce using rule 30 (exp_5 -> subtracao .)
    FLOAT           reduce using rule 30 (exp_5 -> subtracao .)
    STRING          reduce using rule 30 (exp_5 -> subtracao .)
    BOOLEAN         reduce using rule 30 (exp_5 -> subtracao .)
    $end            reduce using rule 30 (exp_5 -> subtracao .)
    PONTO_VIRGULA   reduce using rule 30 (exp_5 -> subtracao .)
    RPAREN          reduce using rule 30 (exp_5 -> subtracao .)
    FECHA_CHAVE     reduce using rule 30 (exp_5 -> subtracao .)
    COMMA           reduce using rule 30 (exp_5 -> subtracao .)


state 103

    (31) exp_5 -> conc .

    ADC             reduce using rule 31 (exp_5 -> conc .)
    SUB             reduce using rule 31 (exp_5 -> conc .)
    CONC            reduce using rule 31 (exp_5 -> conc .)
    IGUAL_DP        reduce using rule 31 (exp_5 -> conc .)
    DIF             reduce using rule 31 (exp_5 -> conc .)
    MAIOR           reduce using rule 31 (exp_5 -> conc .)
    MENOR           reduce using rule 31 (exp_5 -> conc .)
    MAIOR_IGL       reduce using rule 31 (exp_5 -> conc .)
    LESSEQUAL       reduce using rule 31 (exp_5 -> conc .)
    SMARTMATCH      reduce using rule 31 (exp_5 -> conc .)
    AND_S           reduce using rule 31 (exp_5 -> conc .)
    OR_S            reduce using rule 31 (exp_5 -> conc .)
    XOR_S           reduce using rule 31 (exp_5 -> conc .)
    SAY             reduce using rule 31 (exp_5 -> conc .)
    MY              reduce using rule 31 (exp_5 -> conc .)
    OUR             reduce using rule 31 (exp_5 -> conc .)
    LIST            reduce using rule 31 (exp_5 -> conc .)
    FUNCTION        reduce using rule 31 (exp_5 -> conc .)
    ESCALAR         reduce using rule 31 (exp_5 -> conc .)
    ID              reduce using rule 31 (exp_5 -> conc .)
    IF              reduce using rule 31 (exp_5 -> conc .)
    LOOP            reduce using rule 31 (exp_5 -> conc .)
    FOR             reduce using rule 31 (exp_5 -> conc .)
    INTEGER         reduce using rule 31 (exp_5 -> conc .)
    WHILE           reduce using rule 31 (exp_5 -> conc .)
    ABRE_CHAVE      reduce using rule 31 (exp_5 -> conc .)
    BREAK           reduce using rule 31 (exp_5 -> conc .)
    EXIT            reduce using rule 31 (exp_5 -> conc .)
    LAST            reduce using rule 31 (exp_5 -> conc .)
    NEXT            reduce using rule 31 (exp_5 -> conc .)
    REDO            reduce using rule 31 (exp_5 -> conc .)
    RETURN          reduce using rule 31 (exp_5 -> conc .)
    CONSTANT        reduce using rule 31 (exp_5 -> conc .)
    STATE           reduce using rule 31 (exp_5 -> conc .)
    LET             reduce using rule 31 (exp_5 -> conc .)
    MULTI           reduce using rule 31 (exp_5 -> conc .)
    ONLY            reduce using rule 31 (exp_5 -> conc .)
    IMPORT          reduce using rule 31 (exp_5 -> conc .)
    NEED            reduce using rule 31 (exp_5 -> conc .)
    REQUIRE         reduce using rule 31 (exp_5 -> conc .)
    USE             reduce using rule 31 (exp_5 -> conc .)
    PUSH            reduce using rule 31 (exp_5 -> conc .)
    UNSHIFT         reduce using rule 31 (exp_5 -> conc .)
    SPLICE          reduce using rule 31 (exp_5 -> conc .)
    NOT             reduce using rule 31 (exp_5 -> conc .)
    NEGAC           reduce using rule 31 (exp_5 -> conc .)
    ADC_DP          reduce using rule 31 (exp_5 -> conc .)
    DECREMENTO      reduce using rule 31 (exp_5 -> conc .)
    LPAREN          reduce using rule 31 (exp_5 -> conc .)
    FLOAT           reduce using rule 31 (exp_5 -> conc .)
    STRING          reduce using rule 31 (exp_5 -> conc .)
    BOOLEAN         reduce using rule 31 (exp_5 -> conc .)
    $end            reduce using rule 31 (exp_5 -> conc .)
    PONTO_VIRGULA   reduce using rule 31 (exp_5 -> conc .)
    RPAREN          reduce using rule 31 (exp_5 -> conc .)
    FECHA_CHAVE     reduce using rule 31 (exp_5 -> conc .)
    COMMA           reduce using rule 31 (exp_5 -> conc .)


state 104

    (32) exp_5 -> exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 32 (exp_5 -> exp_6 .)
    SUB             reduce using rule 32 (exp_5 -> exp_6 .)
    CONC            reduce using rule 32 (exp_5 -> exp_6 .)
    IGUAL_DP        reduce using rule 32 (exp_5 -> exp_6 .)
    DIF             reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MENOR           reduce using rule 32 (exp_5 -> exp_6 .)
    MAIOR_IGL       reduce using rule 32 (exp_5 -> exp_6 .)
    LESSEQUAL       reduce using rule 32 (exp_5 -> exp_6 .)
    SMARTMATCH      reduce using rule 32 (exp_5 -> exp_6 .)
    AND_S           reduce using rule 32 (exp_5 -> exp_6 .)
    OR_S            reduce using rule 32 (exp_5 -> exp_6 .)
    XOR_S           reduce using rule 32 (exp_5 -> exp_6 .)
    SAY             reduce using rule 32 (exp_5 -> exp_6 .)
    MY              reduce using rule 32 (exp_5 -> exp_6 .)
    OUR             reduce using rule 32 (exp_5 -> exp_6 .)
    LIST            reduce using rule 32 (exp_5 -> exp_6 .)
    FUNCTION        reduce using rule 32 (exp_5 -> exp_6 .)
    ESCALAR         reduce using rule 32 (exp_5 -> exp_6 .)
    ID              reduce using rule 32 (exp_5 -> exp_6 .)
    IF              reduce using rule 32 (exp_5 -> exp_6 .)
    LOOP            reduce using rule 32 (exp_5 -> exp_6 .)
    FOR             reduce using rule 32 (exp_5 -> exp_6 .)
    INTEGER         reduce using rule 32 (exp_5 -> exp_6 .)
    WHILE           reduce using rule 32 (exp_5 -> exp_6 .)
    ABRE_CHAVE      reduce using rule 32 (exp_5 -> exp_6 .)
    BREAK           reduce using rule 32 (exp_5 -> exp_6 .)
    EXIT            reduce using rule 32 (exp_5 -> exp_6 .)
    LAST            reduce using rule 32 (exp_5 -> exp_6 .)
    NEXT            reduce using rule 32 (exp_5 -> exp_6 .)
    REDO            reduce using rule 32 (exp_5 -> exp_6 .)
    RETURN          reduce using rule 32 (exp_5 -> exp_6 .)
    CONSTANT        reduce using rule 32 (exp_5 -> exp_6 .)
    STATE           reduce using rule 32 (exp_5 -> exp_6 .)
    LET             reduce using rule 32 (exp_5 -> exp_6 .)
    MULTI           reduce using rule 32 (exp_5 -> exp_6 .)
    ONLY            reduce using rule 32 (exp_5 -> exp_6 .)
    IMPORT          reduce using rule 32 (exp_5 -> exp_6 .)
    NEED            reduce using rule 32 (exp_5 -> exp_6 .)
    REQUIRE         reduce using rule 32 (exp_5 -> exp_6 .)
    USE             reduce using rule 32 (exp_5 -> exp_6 .)
    PUSH            reduce using rule 32 (exp_5 -> exp_6 .)
    UNSHIFT         reduce using rule 32 (exp_5 -> exp_6 .)
    SPLICE          reduce using rule 32 (exp_5 -> exp_6 .)
    NOT             reduce using rule 32 (exp_5 -> exp_6 .)
    NEGAC           reduce using rule 32 (exp_5 -> exp_6 .)
    ADC_DP          reduce using rule 32 (exp_5 -> exp_6 .)
    DECREMENTO      reduce using rule 32 (exp_5 -> exp_6 .)
    LPAREN          reduce using rule 32 (exp_5 -> exp_6 .)
    FLOAT           reduce using rule 32 (exp_5 -> exp_6 .)
    STRING          reduce using rule 32 (exp_5 -> exp_6 .)
    BOOLEAN         reduce using rule 32 (exp_5 -> exp_6 .)
    $end            reduce using rule 32 (exp_5 -> exp_6 .)
    PONTO_VIRGULA   reduce using rule 32 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 32 (exp_5 -> exp_6 .)
    FECHA_CHAVE     reduce using rule 32 (exp_5 -> exp_6 .)
    COMMA           reduce using rule 32 (exp_5 -> exp_6 .)
    MULT            shift and go to state 201
    DIVIDE          shift and go to state 202
    DIV             shift and go to state 203
    DIVI            shift and go to state 204
    MOD             shift and go to state 205
    LCM             shift and go to state 206
    GCD             shift and go to state 207


state 105

    (36) exp_6 -> mult .

    MULT            reduce using rule 36 (exp_6 -> mult .)
    DIVIDE          reduce using rule 36 (exp_6 -> mult .)
    DIV             reduce using rule 36 (exp_6 -> mult .)
    DIVI            reduce using rule 36 (exp_6 -> mult .)
    MOD             reduce using rule 36 (exp_6 -> mult .)
    LCM             reduce using rule 36 (exp_6 -> mult .)
    GCD             reduce using rule 36 (exp_6 -> mult .)
    ADC             reduce using rule 36 (exp_6 -> mult .)
    SUB             reduce using rule 36 (exp_6 -> mult .)
    CONC            reduce using rule 36 (exp_6 -> mult .)
    IGUAL_DP        reduce using rule 36 (exp_6 -> mult .)
    DIF             reduce using rule 36 (exp_6 -> mult .)
    MAIOR           reduce using rule 36 (exp_6 -> mult .)
    MENOR           reduce using rule 36 (exp_6 -> mult .)
    MAIOR_IGL       reduce using rule 36 (exp_6 -> mult .)
    LESSEQUAL       reduce using rule 36 (exp_6 -> mult .)
    SMARTMATCH      reduce using rule 36 (exp_6 -> mult .)
    AND_S           reduce using rule 36 (exp_6 -> mult .)
    OR_S            reduce using rule 36 (exp_6 -> mult .)
    XOR_S           reduce using rule 36 (exp_6 -> mult .)
    SAY             reduce using rule 36 (exp_6 -> mult .)
    MY              reduce using rule 36 (exp_6 -> mult .)
    OUR             reduce using rule 36 (exp_6 -> mult .)
    LIST            reduce using rule 36 (exp_6 -> mult .)
    FUNCTION        reduce using rule 36 (exp_6 -> mult .)
    ESCALAR         reduce using rule 36 (exp_6 -> mult .)
    ID              reduce using rule 36 (exp_6 -> mult .)
    IF              reduce using rule 36 (exp_6 -> mult .)
    LOOP            reduce using rule 36 (exp_6 -> mult .)
    FOR             reduce using rule 36 (exp_6 -> mult .)
    INTEGER         reduce using rule 36 (exp_6 -> mult .)
    WHILE           reduce using rule 36 (exp_6 -> mult .)
    ABRE_CHAVE      reduce using rule 36 (exp_6 -> mult .)
    BREAK           reduce using rule 36 (exp_6 -> mult .)
    EXIT            reduce using rule 36 (exp_6 -> mult .)
    LAST            reduce using rule 36 (exp_6 -> mult .)
    NEXT            reduce using rule 36 (exp_6 -> mult .)
    REDO            reduce using rule 36 (exp_6 -> mult .)
    RETURN          reduce using rule 36 (exp_6 -> mult .)
    CONSTANT        reduce using rule 36 (exp_6 -> mult .)
    STATE           reduce using rule 36 (exp_6 -> mult .)
    LET             reduce using rule 36 (exp_6 -> mult .)
    MULTI           reduce using rule 36 (exp_6 -> mult .)
    ONLY            reduce using rule 36 (exp_6 -> mult .)
    IMPORT          reduce using rule 36 (exp_6 -> mult .)
    NEED            reduce using rule 36 (exp_6 -> mult .)
    REQUIRE         reduce using rule 36 (exp_6 -> mult .)
    USE             reduce using rule 36 (exp_6 -> mult .)
    PUSH            reduce using rule 36 (exp_6 -> mult .)
    UNSHIFT         reduce using rule 36 (exp_6 -> mult .)
    SPLICE          reduce using rule 36 (exp_6 -> mult .)
    NOT             reduce using rule 36 (exp_6 -> mult .)
    NEGAC           reduce using rule 36 (exp_6 -> mult .)
    ADC_DP          reduce using rule 36 (exp_6 -> mult .)
    DECREMENTO      reduce using rule 36 (exp_6 -> mult .)
    LPAREN          reduce using rule 36 (exp_6 -> mult .)
    FLOAT           reduce using rule 36 (exp_6 -> mult .)
    STRING          reduce using rule 36 (exp_6 -> mult .)
    BOOLEAN         reduce using rule 36 (exp_6 -> mult .)
    $end            reduce using rule 36 (exp_6 -> mult .)
    PONTO_VIRGULA   reduce using rule 36 (exp_6 -> mult .)
    RPAREN          reduce using rule 36 (exp_6 -> mult .)
    FECHA_CHAVE     reduce using rule 36 (exp_6 -> mult .)
    COMMA           reduce using rule 36 (exp_6 -> mult .)


state 106

    (37) exp_6 -> divide .

    MULT            reduce using rule 37 (exp_6 -> divide .)
    DIVIDE          reduce using rule 37 (exp_6 -> divide .)
    DIV             reduce using rule 37 (exp_6 -> divide .)
    DIVI            reduce using rule 37 (exp_6 -> divide .)
    MOD             reduce using rule 37 (exp_6 -> divide .)
    LCM             reduce using rule 37 (exp_6 -> divide .)
    GCD             reduce using rule 37 (exp_6 -> divide .)
    ADC             reduce using rule 37 (exp_6 -> divide .)
    SUB             reduce using rule 37 (exp_6 -> divide .)
    CONC            reduce using rule 37 (exp_6 -> divide .)
    IGUAL_DP        reduce using rule 37 (exp_6 -> divide .)
    DIF             reduce using rule 37 (exp_6 -> divide .)
    MAIOR           reduce using rule 37 (exp_6 -> divide .)
    MENOR           reduce using rule 37 (exp_6 -> divide .)
    MAIOR_IGL       reduce using rule 37 (exp_6 -> divide .)
    LESSEQUAL       reduce using rule 37 (exp_6 -> divide .)
    SMARTMATCH      reduce using rule 37 (exp_6 -> divide .)
    AND_S           reduce using rule 37 (exp_6 -> divide .)
    OR_S            reduce using rule 37 (exp_6 -> divide .)
    XOR_S           reduce using rule 37 (exp_6 -> divide .)
    SAY             reduce using rule 37 (exp_6 -> divide .)
    MY              reduce using rule 37 (exp_6 -> divide .)
    OUR             reduce using rule 37 (exp_6 -> divide .)
    LIST            reduce using rule 37 (exp_6 -> divide .)
    FUNCTION        reduce using rule 37 (exp_6 -> divide .)
    ESCALAR         reduce using rule 37 (exp_6 -> divide .)
    ID              reduce using rule 37 (exp_6 -> divide .)
    IF              reduce using rule 37 (exp_6 -> divide .)
    LOOP            reduce using rule 37 (exp_6 -> divide .)
    FOR             reduce using rule 37 (exp_6 -> divide .)
    INTEGER         reduce using rule 37 (exp_6 -> divide .)
    WHILE           reduce using rule 37 (exp_6 -> divide .)
    ABRE_CHAVE      reduce using rule 37 (exp_6 -> divide .)
    BREAK           reduce using rule 37 (exp_6 -> divide .)
    EXIT            reduce using rule 37 (exp_6 -> divide .)
    LAST            reduce using rule 37 (exp_6 -> divide .)
    NEXT            reduce using rule 37 (exp_6 -> divide .)
    REDO            reduce using rule 37 (exp_6 -> divide .)
    RETURN          reduce using rule 37 (exp_6 -> divide .)
    CONSTANT        reduce using rule 37 (exp_6 -> divide .)
    STATE           reduce using rule 37 (exp_6 -> divide .)
    LET             reduce using rule 37 (exp_6 -> divide .)
    MULTI           reduce using rule 37 (exp_6 -> divide .)
    ONLY            reduce using rule 37 (exp_6 -> divide .)
    IMPORT          reduce using rule 37 (exp_6 -> divide .)
    NEED            reduce using rule 37 (exp_6 -> divide .)
    REQUIRE         reduce using rule 37 (exp_6 -> divide .)
    USE             reduce using rule 37 (exp_6 -> divide .)
    PUSH            reduce using rule 37 (exp_6 -> divide .)
    UNSHIFT         reduce using rule 37 (exp_6 -> divide .)
    SPLICE          reduce using rule 37 (exp_6 -> divide .)
    NOT             reduce using rule 37 (exp_6 -> divide .)
    NEGAC           reduce using rule 37 (exp_6 -> divide .)
    ADC_DP          reduce using rule 37 (exp_6 -> divide .)
    DECREMENTO      reduce using rule 37 (exp_6 -> divide .)
    LPAREN          reduce using rule 37 (exp_6 -> divide .)
    FLOAT           reduce using rule 37 (exp_6 -> divide .)
    STRING          reduce using rule 37 (exp_6 -> divide .)
    BOOLEAN         reduce using rule 37 (exp_6 -> divide .)
    $end            reduce using rule 37 (exp_6 -> divide .)
    PONTO_VIRGULA   reduce using rule 37 (exp_6 -> divide .)
    RPAREN          reduce using rule 37 (exp_6 -> divide .)
    FECHA_CHAVE     reduce using rule 37 (exp_6 -> divide .)
    COMMA           reduce using rule 37 (exp_6 -> divide .)


state 107

    (38) exp_6 -> div .

    MULT            reduce using rule 38 (exp_6 -> div .)
    DIVIDE          reduce using rule 38 (exp_6 -> div .)
    DIV             reduce using rule 38 (exp_6 -> div .)
    DIVI            reduce using rule 38 (exp_6 -> div .)
    MOD             reduce using rule 38 (exp_6 -> div .)
    LCM             reduce using rule 38 (exp_6 -> div .)
    GCD             reduce using rule 38 (exp_6 -> div .)
    ADC             reduce using rule 38 (exp_6 -> div .)
    SUB             reduce using rule 38 (exp_6 -> div .)
    CONC            reduce using rule 38 (exp_6 -> div .)
    IGUAL_DP        reduce using rule 38 (exp_6 -> div .)
    DIF             reduce using rule 38 (exp_6 -> div .)
    MAIOR           reduce using rule 38 (exp_6 -> div .)
    MENOR           reduce using rule 38 (exp_6 -> div .)
    MAIOR_IGL       reduce using rule 38 (exp_6 -> div .)
    LESSEQUAL       reduce using rule 38 (exp_6 -> div .)
    SMARTMATCH      reduce using rule 38 (exp_6 -> div .)
    AND_S           reduce using rule 38 (exp_6 -> div .)
    OR_S            reduce using rule 38 (exp_6 -> div .)
    XOR_S           reduce using rule 38 (exp_6 -> div .)
    SAY             reduce using rule 38 (exp_6 -> div .)
    MY              reduce using rule 38 (exp_6 -> div .)
    OUR             reduce using rule 38 (exp_6 -> div .)
    LIST            reduce using rule 38 (exp_6 -> div .)
    FUNCTION        reduce using rule 38 (exp_6 -> div .)
    ESCALAR         reduce using rule 38 (exp_6 -> div .)
    ID              reduce using rule 38 (exp_6 -> div .)
    IF              reduce using rule 38 (exp_6 -> div .)
    LOOP            reduce using rule 38 (exp_6 -> div .)
    FOR             reduce using rule 38 (exp_6 -> div .)
    INTEGER         reduce using rule 38 (exp_6 -> div .)
    WHILE           reduce using rule 38 (exp_6 -> div .)
    ABRE_CHAVE      reduce using rule 38 (exp_6 -> div .)
    BREAK           reduce using rule 38 (exp_6 -> div .)
    EXIT            reduce using rule 38 (exp_6 -> div .)
    LAST            reduce using rule 38 (exp_6 -> div .)
    NEXT            reduce using rule 38 (exp_6 -> div .)
    REDO            reduce using rule 38 (exp_6 -> div .)
    RETURN          reduce using rule 38 (exp_6 -> div .)
    CONSTANT        reduce using rule 38 (exp_6 -> div .)
    STATE           reduce using rule 38 (exp_6 -> div .)
    LET             reduce using rule 38 (exp_6 -> div .)
    MULTI           reduce using rule 38 (exp_6 -> div .)
    ONLY            reduce using rule 38 (exp_6 -> div .)
    IMPORT          reduce using rule 38 (exp_6 -> div .)
    NEED            reduce using rule 38 (exp_6 -> div .)
    REQUIRE         reduce using rule 38 (exp_6 -> div .)
    USE             reduce using rule 38 (exp_6 -> div .)
    PUSH            reduce using rule 38 (exp_6 -> div .)
    UNSHIFT         reduce using rule 38 (exp_6 -> div .)
    SPLICE          reduce using rule 38 (exp_6 -> div .)
    NOT             reduce using rule 38 (exp_6 -> div .)
    NEGAC           reduce using rule 38 (exp_6 -> div .)
    ADC_DP          reduce using rule 38 (exp_6 -> div .)
    DECREMENTO      reduce using rule 38 (exp_6 -> div .)
    LPAREN          reduce using rule 38 (exp_6 -> div .)
    FLOAT           reduce using rule 38 (exp_6 -> div .)
    STRING          reduce using rule 38 (exp_6 -> div .)
    BOOLEAN         reduce using rule 38 (exp_6 -> div .)
    $end            reduce using rule 38 (exp_6 -> div .)
    PONTO_VIRGULA   reduce using rule 38 (exp_6 -> div .)
    RPAREN          reduce using rule 38 (exp_6 -> div .)
    FECHA_CHAVE     reduce using rule 38 (exp_6 -> div .)
    COMMA           reduce using rule 38 (exp_6 -> div .)


state 108

    (39) exp_6 -> divi .

    MULT            reduce using rule 39 (exp_6 -> divi .)
    DIVIDE          reduce using rule 39 (exp_6 -> divi .)
    DIV             reduce using rule 39 (exp_6 -> divi .)
    DIVI            reduce using rule 39 (exp_6 -> divi .)
    MOD             reduce using rule 39 (exp_6 -> divi .)
    LCM             reduce using rule 39 (exp_6 -> divi .)
    GCD             reduce using rule 39 (exp_6 -> divi .)
    ADC             reduce using rule 39 (exp_6 -> divi .)
    SUB             reduce using rule 39 (exp_6 -> divi .)
    CONC            reduce using rule 39 (exp_6 -> divi .)
    IGUAL_DP        reduce using rule 39 (exp_6 -> divi .)
    DIF             reduce using rule 39 (exp_6 -> divi .)
    MAIOR           reduce using rule 39 (exp_6 -> divi .)
    MENOR           reduce using rule 39 (exp_6 -> divi .)
    MAIOR_IGL       reduce using rule 39 (exp_6 -> divi .)
    LESSEQUAL       reduce using rule 39 (exp_6 -> divi .)
    SMARTMATCH      reduce using rule 39 (exp_6 -> divi .)
    AND_S           reduce using rule 39 (exp_6 -> divi .)
    OR_S            reduce using rule 39 (exp_6 -> divi .)
    XOR_S           reduce using rule 39 (exp_6 -> divi .)
    SAY             reduce using rule 39 (exp_6 -> divi .)
    MY              reduce using rule 39 (exp_6 -> divi .)
    OUR             reduce using rule 39 (exp_6 -> divi .)
    LIST            reduce using rule 39 (exp_6 -> divi .)
    FUNCTION        reduce using rule 39 (exp_6 -> divi .)
    ESCALAR         reduce using rule 39 (exp_6 -> divi .)
    ID              reduce using rule 39 (exp_6 -> divi .)
    IF              reduce using rule 39 (exp_6 -> divi .)
    LOOP            reduce using rule 39 (exp_6 -> divi .)
    FOR             reduce using rule 39 (exp_6 -> divi .)
    INTEGER         reduce using rule 39 (exp_6 -> divi .)
    WHILE           reduce using rule 39 (exp_6 -> divi .)
    ABRE_CHAVE      reduce using rule 39 (exp_6 -> divi .)
    BREAK           reduce using rule 39 (exp_6 -> divi .)
    EXIT            reduce using rule 39 (exp_6 -> divi .)
    LAST            reduce using rule 39 (exp_6 -> divi .)
    NEXT            reduce using rule 39 (exp_6 -> divi .)
    REDO            reduce using rule 39 (exp_6 -> divi .)
    RETURN          reduce using rule 39 (exp_6 -> divi .)
    CONSTANT        reduce using rule 39 (exp_6 -> divi .)
    STATE           reduce using rule 39 (exp_6 -> divi .)
    LET             reduce using rule 39 (exp_6 -> divi .)
    MULTI           reduce using rule 39 (exp_6 -> divi .)
    ONLY            reduce using rule 39 (exp_6 -> divi .)
    IMPORT          reduce using rule 39 (exp_6 -> divi .)
    NEED            reduce using rule 39 (exp_6 -> divi .)
    REQUIRE         reduce using rule 39 (exp_6 -> divi .)
    USE             reduce using rule 39 (exp_6 -> divi .)
    PUSH            reduce using rule 39 (exp_6 -> divi .)
    UNSHIFT         reduce using rule 39 (exp_6 -> divi .)
    SPLICE          reduce using rule 39 (exp_6 -> divi .)
    NOT             reduce using rule 39 (exp_6 -> divi .)
    NEGAC           reduce using rule 39 (exp_6 -> divi .)
    ADC_DP          reduce using rule 39 (exp_6 -> divi .)
    DECREMENTO      reduce using rule 39 (exp_6 -> divi .)
    LPAREN          reduce using rule 39 (exp_6 -> divi .)
    FLOAT           reduce using rule 39 (exp_6 -> divi .)
    STRING          reduce using rule 39 (exp_6 -> divi .)
    BOOLEAN         reduce using rule 39 (exp_6 -> divi .)
    $end            reduce using rule 39 (exp_6 -> divi .)
    PONTO_VIRGULA   reduce using rule 39 (exp_6 -> divi .)
    RPAREN          reduce using rule 39 (exp_6 -> divi .)
    FECHA_CHAVE     reduce using rule 39 (exp_6 -> divi .)
    COMMA           reduce using rule 39 (exp_6 -> divi .)


state 109

    (40) exp_6 -> mod .

    MULT            reduce using rule 40 (exp_6 -> mod .)
    DIVIDE          reduce using rule 40 (exp_6 -> mod .)
    DIV             reduce using rule 40 (exp_6 -> mod .)
    DIVI            reduce using rule 40 (exp_6 -> mod .)
    MOD             reduce using rule 40 (exp_6 -> mod .)
    LCM             reduce using rule 40 (exp_6 -> mod .)
    GCD             reduce using rule 40 (exp_6 -> mod .)
    ADC             reduce using rule 40 (exp_6 -> mod .)
    SUB             reduce using rule 40 (exp_6 -> mod .)
    CONC            reduce using rule 40 (exp_6 -> mod .)
    IGUAL_DP        reduce using rule 40 (exp_6 -> mod .)
    DIF             reduce using rule 40 (exp_6 -> mod .)
    MAIOR           reduce using rule 40 (exp_6 -> mod .)
    MENOR           reduce using rule 40 (exp_6 -> mod .)
    MAIOR_IGL       reduce using rule 40 (exp_6 -> mod .)
    LESSEQUAL       reduce using rule 40 (exp_6 -> mod .)
    SMARTMATCH      reduce using rule 40 (exp_6 -> mod .)
    AND_S           reduce using rule 40 (exp_6 -> mod .)
    OR_S            reduce using rule 40 (exp_6 -> mod .)
    XOR_S           reduce using rule 40 (exp_6 -> mod .)
    SAY             reduce using rule 40 (exp_6 -> mod .)
    MY              reduce using rule 40 (exp_6 -> mod .)
    OUR             reduce using rule 40 (exp_6 -> mod .)
    LIST            reduce using rule 40 (exp_6 -> mod .)
    FUNCTION        reduce using rule 40 (exp_6 -> mod .)
    ESCALAR         reduce using rule 40 (exp_6 -> mod .)
    ID              reduce using rule 40 (exp_6 -> mod .)
    IF              reduce using rule 40 (exp_6 -> mod .)
    LOOP            reduce using rule 40 (exp_6 -> mod .)
    FOR             reduce using rule 40 (exp_6 -> mod .)
    INTEGER         reduce using rule 40 (exp_6 -> mod .)
    WHILE           reduce using rule 40 (exp_6 -> mod .)
    ABRE_CHAVE      reduce using rule 40 (exp_6 -> mod .)
    BREAK           reduce using rule 40 (exp_6 -> mod .)
    EXIT            reduce using rule 40 (exp_6 -> mod .)
    LAST            reduce using rule 40 (exp_6 -> mod .)
    NEXT            reduce using rule 40 (exp_6 -> mod .)
    REDO            reduce using rule 40 (exp_6 -> mod .)
    RETURN          reduce using rule 40 (exp_6 -> mod .)
    CONSTANT        reduce using rule 40 (exp_6 -> mod .)
    STATE           reduce using rule 40 (exp_6 -> mod .)
    LET             reduce using rule 40 (exp_6 -> mod .)
    MULTI           reduce using rule 40 (exp_6 -> mod .)
    ONLY            reduce using rule 40 (exp_6 -> mod .)
    IMPORT          reduce using rule 40 (exp_6 -> mod .)
    NEED            reduce using rule 40 (exp_6 -> mod .)
    REQUIRE         reduce using rule 40 (exp_6 -> mod .)
    USE             reduce using rule 40 (exp_6 -> mod .)
    PUSH            reduce using rule 40 (exp_6 -> mod .)
    UNSHIFT         reduce using rule 40 (exp_6 -> mod .)
    SPLICE          reduce using rule 40 (exp_6 -> mod .)
    NOT             reduce using rule 40 (exp_6 -> mod .)
    NEGAC           reduce using rule 40 (exp_6 -> mod .)
    ADC_DP          reduce using rule 40 (exp_6 -> mod .)
    DECREMENTO      reduce using rule 40 (exp_6 -> mod .)
    LPAREN          reduce using rule 40 (exp_6 -> mod .)
    FLOAT           reduce using rule 40 (exp_6 -> mod .)
    STRING          reduce using rule 40 (exp_6 -> mod .)
    BOOLEAN         reduce using rule 40 (exp_6 -> mod .)
    $end            reduce using rule 40 (exp_6 -> mod .)
    PONTO_VIRGULA   reduce using rule 40 (exp_6 -> mod .)
    RPAREN          reduce using rule 40 (exp_6 -> mod .)
    FECHA_CHAVE     reduce using rule 40 (exp_6 -> mod .)
    COMMA           reduce using rule 40 (exp_6 -> mod .)


state 110

    (41) exp_6 -> lcm .

    MULT            reduce using rule 41 (exp_6 -> lcm .)
    DIVIDE          reduce using rule 41 (exp_6 -> lcm .)
    DIV             reduce using rule 41 (exp_6 -> lcm .)
    DIVI            reduce using rule 41 (exp_6 -> lcm .)
    MOD             reduce using rule 41 (exp_6 -> lcm .)
    LCM             reduce using rule 41 (exp_6 -> lcm .)
    GCD             reduce using rule 41 (exp_6 -> lcm .)
    ADC             reduce using rule 41 (exp_6 -> lcm .)
    SUB             reduce using rule 41 (exp_6 -> lcm .)
    CONC            reduce using rule 41 (exp_6 -> lcm .)
    IGUAL_DP        reduce using rule 41 (exp_6 -> lcm .)
    DIF             reduce using rule 41 (exp_6 -> lcm .)
    MAIOR           reduce using rule 41 (exp_6 -> lcm .)
    MENOR           reduce using rule 41 (exp_6 -> lcm .)
    MAIOR_IGL       reduce using rule 41 (exp_6 -> lcm .)
    LESSEQUAL       reduce using rule 41 (exp_6 -> lcm .)
    SMARTMATCH      reduce using rule 41 (exp_6 -> lcm .)
    AND_S           reduce using rule 41 (exp_6 -> lcm .)
    OR_S            reduce using rule 41 (exp_6 -> lcm .)
    XOR_S           reduce using rule 41 (exp_6 -> lcm .)
    SAY             reduce using rule 41 (exp_6 -> lcm .)
    MY              reduce using rule 41 (exp_6 -> lcm .)
    OUR             reduce using rule 41 (exp_6 -> lcm .)
    LIST            reduce using rule 41 (exp_6 -> lcm .)
    FUNCTION        reduce using rule 41 (exp_6 -> lcm .)
    ESCALAR         reduce using rule 41 (exp_6 -> lcm .)
    ID              reduce using rule 41 (exp_6 -> lcm .)
    IF              reduce using rule 41 (exp_6 -> lcm .)
    LOOP            reduce using rule 41 (exp_6 -> lcm .)
    FOR             reduce using rule 41 (exp_6 -> lcm .)
    INTEGER         reduce using rule 41 (exp_6 -> lcm .)
    WHILE           reduce using rule 41 (exp_6 -> lcm .)
    ABRE_CHAVE      reduce using rule 41 (exp_6 -> lcm .)
    BREAK           reduce using rule 41 (exp_6 -> lcm .)
    EXIT            reduce using rule 41 (exp_6 -> lcm .)
    LAST            reduce using rule 41 (exp_6 -> lcm .)
    NEXT            reduce using rule 41 (exp_6 -> lcm .)
    REDO            reduce using rule 41 (exp_6 -> lcm .)
    RETURN          reduce using rule 41 (exp_6 -> lcm .)
    CONSTANT        reduce using rule 41 (exp_6 -> lcm .)
    STATE           reduce using rule 41 (exp_6 -> lcm .)
    LET             reduce using rule 41 (exp_6 -> lcm .)
    MULTI           reduce using rule 41 (exp_6 -> lcm .)
    ONLY            reduce using rule 41 (exp_6 -> lcm .)
    IMPORT          reduce using rule 41 (exp_6 -> lcm .)
    NEED            reduce using rule 41 (exp_6 -> lcm .)
    REQUIRE         reduce using rule 41 (exp_6 -> lcm .)
    USE             reduce using rule 41 (exp_6 -> lcm .)
    PUSH            reduce using rule 41 (exp_6 -> lcm .)
    UNSHIFT         reduce using rule 41 (exp_6 -> lcm .)
    SPLICE          reduce using rule 41 (exp_6 -> lcm .)
    NOT             reduce using rule 41 (exp_6 -> lcm .)
    NEGAC           reduce using rule 41 (exp_6 -> lcm .)
    ADC_DP          reduce using rule 41 (exp_6 -> lcm .)
    DECREMENTO      reduce using rule 41 (exp_6 -> lcm .)
    LPAREN          reduce using rule 41 (exp_6 -> lcm .)
    FLOAT           reduce using rule 41 (exp_6 -> lcm .)
    STRING          reduce using rule 41 (exp_6 -> lcm .)
    BOOLEAN         reduce using rule 41 (exp_6 -> lcm .)
    $end            reduce using rule 41 (exp_6 -> lcm .)
    PONTO_VIRGULA   reduce using rule 41 (exp_6 -> lcm .)
    RPAREN          reduce using rule 41 (exp_6 -> lcm .)
    FECHA_CHAVE     reduce using rule 41 (exp_6 -> lcm .)
    COMMA           reduce using rule 41 (exp_6 -> lcm .)


state 111

    (42) exp_6 -> gcd .

    MULT            reduce using rule 42 (exp_6 -> gcd .)
    DIVIDE          reduce using rule 42 (exp_6 -> gcd .)
    DIV             reduce using rule 42 (exp_6 -> gcd .)
    DIVI            reduce using rule 42 (exp_6 -> gcd .)
    MOD             reduce using rule 42 (exp_6 -> gcd .)
    LCM             reduce using rule 42 (exp_6 -> gcd .)
    GCD             reduce using rule 42 (exp_6 -> gcd .)
    ADC             reduce using rule 42 (exp_6 -> gcd .)
    SUB             reduce using rule 42 (exp_6 -> gcd .)
    CONC            reduce using rule 42 (exp_6 -> gcd .)
    IGUAL_DP        reduce using rule 42 (exp_6 -> gcd .)
    DIF             reduce using rule 42 (exp_6 -> gcd .)
    MAIOR           reduce using rule 42 (exp_6 -> gcd .)
    MENOR           reduce using rule 42 (exp_6 -> gcd .)
    MAIOR_IGL       reduce using rule 42 (exp_6 -> gcd .)
    LESSEQUAL       reduce using rule 42 (exp_6 -> gcd .)
    SMARTMATCH      reduce using rule 42 (exp_6 -> gcd .)
    AND_S           reduce using rule 42 (exp_6 -> gcd .)
    OR_S            reduce using rule 42 (exp_6 -> gcd .)
    XOR_S           reduce using rule 42 (exp_6 -> gcd .)
    SAY             reduce using rule 42 (exp_6 -> gcd .)
    MY              reduce using rule 42 (exp_6 -> gcd .)
    OUR             reduce using rule 42 (exp_6 -> gcd .)
    LIST            reduce using rule 42 (exp_6 -> gcd .)
    FUNCTION        reduce using rule 42 (exp_6 -> gcd .)
    ESCALAR         reduce using rule 42 (exp_6 -> gcd .)
    ID              reduce using rule 42 (exp_6 -> gcd .)
    IF              reduce using rule 42 (exp_6 -> gcd .)
    LOOP            reduce using rule 42 (exp_6 -> gcd .)
    FOR             reduce using rule 42 (exp_6 -> gcd .)
    INTEGER         reduce using rule 42 (exp_6 -> gcd .)
    WHILE           reduce using rule 42 (exp_6 -> gcd .)
    ABRE_CHAVE      reduce using rule 42 (exp_6 -> gcd .)
    BREAK           reduce using rule 42 (exp_6 -> gcd .)
    EXIT            reduce using rule 42 (exp_6 -> gcd .)
    LAST            reduce using rule 42 (exp_6 -> gcd .)
    NEXT            reduce using rule 42 (exp_6 -> gcd .)
    REDO            reduce using rule 42 (exp_6 -> gcd .)
    RETURN          reduce using rule 42 (exp_6 -> gcd .)
    CONSTANT        reduce using rule 42 (exp_6 -> gcd .)
    STATE           reduce using rule 42 (exp_6 -> gcd .)
    LET             reduce using rule 42 (exp_6 -> gcd .)
    MULTI           reduce using rule 42 (exp_6 -> gcd .)
    ONLY            reduce using rule 42 (exp_6 -> gcd .)
    IMPORT          reduce using rule 42 (exp_6 -> gcd .)
    NEED            reduce using rule 42 (exp_6 -> gcd .)
    REQUIRE         reduce using rule 42 (exp_6 -> gcd .)
    USE             reduce using rule 42 (exp_6 -> gcd .)
    PUSH            reduce using rule 42 (exp_6 -> gcd .)
    UNSHIFT         reduce using rule 42 (exp_6 -> gcd .)
    SPLICE          reduce using rule 42 (exp_6 -> gcd .)
    NOT             reduce using rule 42 (exp_6 -> gcd .)
    NEGAC           reduce using rule 42 (exp_6 -> gcd .)
    ADC_DP          reduce using rule 42 (exp_6 -> gcd .)
    DECREMENTO      reduce using rule 42 (exp_6 -> gcd .)
    LPAREN          reduce using rule 42 (exp_6 -> gcd .)
    FLOAT           reduce using rule 42 (exp_6 -> gcd .)
    STRING          reduce using rule 42 (exp_6 -> gcd .)
    BOOLEAN         reduce using rule 42 (exp_6 -> gcd .)
    $end            reduce using rule 42 (exp_6 -> gcd .)
    PONTO_VIRGULA   reduce using rule 42 (exp_6 -> gcd .)
    RPAREN          reduce using rule 42 (exp_6 -> gcd .)
    FECHA_CHAVE     reduce using rule 42 (exp_6 -> gcd .)
    COMMA           reduce using rule 42 (exp_6 -> gcd .)


state 112

    (43) exp_6 -> exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 43 (exp_6 -> exp_7 .)
    DIVIDE          reduce using rule 43 (exp_6 -> exp_7 .)
    DIV             reduce using rule 43 (exp_6 -> exp_7 .)
    DIVI            reduce using rule 43 (exp_6 -> exp_7 .)
    MOD             reduce using rule 43 (exp_6 -> exp_7 .)
    LCM             reduce using rule 43 (exp_6 -> exp_7 .)
    GCD             reduce using rule 43 (exp_6 -> exp_7 .)
    ADC             reduce using rule 43 (exp_6 -> exp_7 .)
    SUB             reduce using rule 43 (exp_6 -> exp_7 .)
    CONC            reduce using rule 43 (exp_6 -> exp_7 .)
    IGUAL_DP        reduce using rule 43 (exp_6 -> exp_7 .)
    DIF             reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MENOR           reduce using rule 43 (exp_6 -> exp_7 .)
    MAIOR_IGL       reduce using rule 43 (exp_6 -> exp_7 .)
    LESSEQUAL       reduce using rule 43 (exp_6 -> exp_7 .)
    SMARTMATCH      reduce using rule 43 (exp_6 -> exp_7 .)
    AND_S           reduce using rule 43 (exp_6 -> exp_7 .)
    OR_S            reduce using rule 43 (exp_6 -> exp_7 .)
    XOR_S           reduce using rule 43 (exp_6 -> exp_7 .)
    SAY             reduce using rule 43 (exp_6 -> exp_7 .)
    MY              reduce using rule 43 (exp_6 -> exp_7 .)
    OUR             reduce using rule 43 (exp_6 -> exp_7 .)
    LIST            reduce using rule 43 (exp_6 -> exp_7 .)
    FUNCTION        reduce using rule 43 (exp_6 -> exp_7 .)
    ESCALAR         reduce using rule 43 (exp_6 -> exp_7 .)
    ID              reduce using rule 43 (exp_6 -> exp_7 .)
    IF              reduce using rule 43 (exp_6 -> exp_7 .)
    LOOP            reduce using rule 43 (exp_6 -> exp_7 .)
    FOR             reduce using rule 43 (exp_6 -> exp_7 .)
    INTEGER         reduce using rule 43 (exp_6 -> exp_7 .)
    WHILE           reduce using rule 43 (exp_6 -> exp_7 .)
    ABRE_CHAVE      reduce using rule 43 (exp_6 -> exp_7 .)
    BREAK           reduce using rule 43 (exp_6 -> exp_7 .)
    EXIT            reduce using rule 43 (exp_6 -> exp_7 .)
    LAST            reduce using rule 43 (exp_6 -> exp_7 .)
    NEXT            reduce using rule 43 (exp_6 -> exp_7 .)
    REDO            reduce using rule 43 (exp_6 -> exp_7 .)
    RETURN          reduce using rule 43 (exp_6 -> exp_7 .)
    CONSTANT        reduce using rule 43 (exp_6 -> exp_7 .)
    STATE           reduce using rule 43 (exp_6 -> exp_7 .)
    LET             reduce using rule 43 (exp_6 -> exp_7 .)
    MULTI           reduce using rule 43 (exp_6 -> exp_7 .)
    ONLY            reduce using rule 43 (exp_6 -> exp_7 .)
    IMPORT          reduce using rule 43 (exp_6 -> exp_7 .)
    NEED            reduce using rule 43 (exp_6 -> exp_7 .)
    REQUIRE         reduce using rule 43 (exp_6 -> exp_7 .)
    USE             reduce using rule 43 (exp_6 -> exp_7 .)
    PUSH            reduce using rule 43 (exp_6 -> exp_7 .)
    UNSHIFT         reduce using rule 43 (exp_6 -> exp_7 .)
    SPLICE          reduce using rule 43 (exp_6 -> exp_7 .)
    NOT             reduce using rule 43 (exp_6 -> exp_7 .)
    NEGAC           reduce using rule 43 (exp_6 -> exp_7 .)
    ADC_DP          reduce using rule 43 (exp_6 -> exp_7 .)
    DECREMENTO      reduce using rule 43 (exp_6 -> exp_7 .)
    LPAREN          reduce using rule 43 (exp_6 -> exp_7 .)
    FLOAT           reduce using rule 43 (exp_6 -> exp_7 .)
    STRING          reduce using rule 43 (exp_6 -> exp_7 .)
    BOOLEAN         reduce using rule 43 (exp_6 -> exp_7 .)
    $end            reduce using rule 43 (exp_6 -> exp_7 .)
    PONTO_VIRGULA   reduce using rule 43 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 43 (exp_6 -> exp_7 .)
    FECHA_CHAVE     reduce using rule 43 (exp_6 -> exp_7 .)
    COMMA           reduce using rule 43 (exp_6 -> exp_7 .)
    POW             shift and go to state 208


state 113

    (51) exp_7 -> pow .

    POW             reduce using rule 51 (exp_7 -> pow .)
    MULT            reduce using rule 51 (exp_7 -> pow .)
    DIVIDE          reduce using rule 51 (exp_7 -> pow .)
    DIV             reduce using rule 51 (exp_7 -> pow .)
    DIVI            reduce using rule 51 (exp_7 -> pow .)
    MOD             reduce using rule 51 (exp_7 -> pow .)
    LCM             reduce using rule 51 (exp_7 -> pow .)
    GCD             reduce using rule 51 (exp_7 -> pow .)
    ADC             reduce using rule 51 (exp_7 -> pow .)
    SUB             reduce using rule 51 (exp_7 -> pow .)
    CONC            reduce using rule 51 (exp_7 -> pow .)
    IGUAL_DP        reduce using rule 51 (exp_7 -> pow .)
    DIF             reduce using rule 51 (exp_7 -> pow .)
    MAIOR           reduce using rule 51 (exp_7 -> pow .)
    MENOR           reduce using rule 51 (exp_7 -> pow .)
    MAIOR_IGL       reduce using rule 51 (exp_7 -> pow .)
    LESSEQUAL       reduce using rule 51 (exp_7 -> pow .)
    SMARTMATCH      reduce using rule 51 (exp_7 -> pow .)
    AND_S           reduce using rule 51 (exp_7 -> pow .)
    OR_S            reduce using rule 51 (exp_7 -> pow .)
    XOR_S           reduce using rule 51 (exp_7 -> pow .)
    SAY             reduce using rule 51 (exp_7 -> pow .)
    MY              reduce using rule 51 (exp_7 -> pow .)
    OUR             reduce using rule 51 (exp_7 -> pow .)
    LIST            reduce using rule 51 (exp_7 -> pow .)
    FUNCTION        reduce using rule 51 (exp_7 -> pow .)
    ESCALAR         reduce using rule 51 (exp_7 -> pow .)
    ID              reduce using rule 51 (exp_7 -> pow .)
    IF              reduce using rule 51 (exp_7 -> pow .)
    LOOP            reduce using rule 51 (exp_7 -> pow .)
    FOR             reduce using rule 51 (exp_7 -> pow .)
    INTEGER         reduce using rule 51 (exp_7 -> pow .)
    WHILE           reduce using rule 51 (exp_7 -> pow .)
    ABRE_CHAVE      reduce using rule 51 (exp_7 -> pow .)
    BREAK           reduce using rule 51 (exp_7 -> pow .)
    EXIT            reduce using rule 51 (exp_7 -> pow .)
    LAST            reduce using rule 51 (exp_7 -> pow .)
    NEXT            reduce using rule 51 (exp_7 -> pow .)
    REDO            reduce using rule 51 (exp_7 -> pow .)
    RETURN          reduce using rule 51 (exp_7 -> pow .)
    CONSTANT        reduce using rule 51 (exp_7 -> pow .)
    STATE           reduce using rule 51 (exp_7 -> pow .)
    LET             reduce using rule 51 (exp_7 -> pow .)
    MULTI           reduce using rule 51 (exp_7 -> pow .)
    ONLY            reduce using rule 51 (exp_7 -> pow .)
    IMPORT          reduce using rule 51 (exp_7 -> pow .)
    NEED            reduce using rule 51 (exp_7 -> pow .)
    REQUIRE         reduce using rule 51 (exp_7 -> pow .)
    USE             reduce using rule 51 (exp_7 -> pow .)
    PUSH            reduce using rule 51 (exp_7 -> pow .)
    UNSHIFT         reduce using rule 51 (exp_7 -> pow .)
    SPLICE          reduce using rule 51 (exp_7 -> pow .)
    NOT             reduce using rule 51 (exp_7 -> pow .)
    NEGAC           reduce using rule 51 (exp_7 -> pow .)
    ADC_DP          reduce using rule 51 (exp_7 -> pow .)
    DECREMENTO      reduce using rule 51 (exp_7 -> pow .)
    LPAREN          reduce using rule 51 (exp_7 -> pow .)
    FLOAT           reduce using rule 51 (exp_7 -> pow .)
    STRING          reduce using rule 51 (exp_7 -> pow .)
    BOOLEAN         reduce using rule 51 (exp_7 -> pow .)
    $end            reduce using rule 51 (exp_7 -> pow .)
    PONTO_VIRGULA   reduce using rule 51 (exp_7 -> pow .)
    RPAREN          reduce using rule 51 (exp_7 -> pow .)
    FECHA_CHAVE     reduce using rule 51 (exp_7 -> pow .)
    COMMA           reduce using rule 51 (exp_7 -> pow .)


state 114

    (52) exp_7 -> exp_8 .

    POW             reduce using rule 52 (exp_7 -> exp_8 .)
    MULT            reduce using rule 52 (exp_7 -> exp_8 .)
    DIVIDE          reduce using rule 52 (exp_7 -> exp_8 .)
    DIV             reduce using rule 52 (exp_7 -> exp_8 .)
    DIVI            reduce using rule 52 (exp_7 -> exp_8 .)
    MOD             reduce using rule 52 (exp_7 -> exp_8 .)
    LCM             reduce using rule 52 (exp_7 -> exp_8 .)
    GCD             reduce using rule 52 (exp_7 -> exp_8 .)
    ADC             reduce using rule 52 (exp_7 -> exp_8 .)
    SUB             reduce using rule 52 (exp_7 -> exp_8 .)
    CONC            reduce using rule 52 (exp_7 -> exp_8 .)
    IGUAL_DP        reduce using rule 52 (exp_7 -> exp_8 .)
    DIF             reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MENOR           reduce using rule 52 (exp_7 -> exp_8 .)
    MAIOR_IGL       reduce using rule 52 (exp_7 -> exp_8 .)
    LESSEQUAL       reduce using rule 52 (exp_7 -> exp_8 .)
    SMARTMATCH      reduce using rule 52 (exp_7 -> exp_8 .)
    AND_S           reduce using rule 52 (exp_7 -> exp_8 .)
    OR_S            reduce using rule 52 (exp_7 -> exp_8 .)
    XOR_S           reduce using rule 52 (exp_7 -> exp_8 .)
    SAY             reduce using rule 52 (exp_7 -> exp_8 .)
    MY              reduce using rule 52 (exp_7 -> exp_8 .)
    OUR             reduce using rule 52 (exp_7 -> exp_8 .)
    LIST            reduce using rule 52 (exp_7 -> exp_8 .)
    FUNCTION        reduce using rule 52 (exp_7 -> exp_8 .)
    ESCALAR         reduce using rule 52 (exp_7 -> exp_8 .)
    ID              reduce using rule 52 (exp_7 -> exp_8 .)
    IF              reduce using rule 52 (exp_7 -> exp_8 .)
    LOOP            reduce using rule 52 (exp_7 -> exp_8 .)
    FOR             reduce using rule 52 (exp_7 -> exp_8 .)
    INTEGER         reduce using rule 52 (exp_7 -> exp_8 .)
    WHILE           reduce using rule 52 (exp_7 -> exp_8 .)
    ABRE_CHAVE      reduce using rule 52 (exp_7 -> exp_8 .)
    BREAK           reduce using rule 52 (exp_7 -> exp_8 .)
    EXIT            reduce using rule 52 (exp_7 -> exp_8 .)
    LAST            reduce using rule 52 (exp_7 -> exp_8 .)
    NEXT            reduce using rule 52 (exp_7 -> exp_8 .)
    REDO            reduce using rule 52 (exp_7 -> exp_8 .)
    RETURN          reduce using rule 52 (exp_7 -> exp_8 .)
    CONSTANT        reduce using rule 52 (exp_7 -> exp_8 .)
    STATE           reduce using rule 52 (exp_7 -> exp_8 .)
    LET             reduce using rule 52 (exp_7 -> exp_8 .)
    MULTI           reduce using rule 52 (exp_7 -> exp_8 .)
    ONLY            reduce using rule 52 (exp_7 -> exp_8 .)
    IMPORT          reduce using rule 52 (exp_7 -> exp_8 .)
    NEED            reduce using rule 52 (exp_7 -> exp_8 .)
    REQUIRE         reduce using rule 52 (exp_7 -> exp_8 .)
    USE             reduce using rule 52 (exp_7 -> exp_8 .)
    PUSH            reduce using rule 52 (exp_7 -> exp_8 .)
    UNSHIFT         reduce using rule 52 (exp_7 -> exp_8 .)
    SPLICE          reduce using rule 52 (exp_7 -> exp_8 .)
    NOT             reduce using rule 52 (exp_7 -> exp_8 .)
    NEGAC           reduce using rule 52 (exp_7 -> exp_8 .)
    ADC_DP          reduce using rule 52 (exp_7 -> exp_8 .)
    DECREMENTO      reduce using rule 52 (exp_7 -> exp_8 .)
    LPAREN          reduce using rule 52 (exp_7 -> exp_8 .)
    FLOAT           reduce using rule 52 (exp_7 -> exp_8 .)
    STRING          reduce using rule 52 (exp_7 -> exp_8 .)
    BOOLEAN         reduce using rule 52 (exp_7 -> exp_8 .)
    $end            reduce using rule 52 (exp_7 -> exp_8 .)
    PONTO_VIRGULA   reduce using rule 52 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 52 (exp_7 -> exp_8 .)
    FECHA_CHAVE     reduce using rule 52 (exp_7 -> exp_8 .)
    COMMA           reduce using rule 52 (exp_7 -> exp_8 .)


state 115

    (54) exp_8 -> not_op .

    POW             reduce using rule 54 (exp_8 -> not_op .)
    MULT            reduce using rule 54 (exp_8 -> not_op .)
    DIVIDE          reduce using rule 54 (exp_8 -> not_op .)
    DIV             reduce using rule 54 (exp_8 -> not_op .)
    DIVI            reduce using rule 54 (exp_8 -> not_op .)
    MOD             reduce using rule 54 (exp_8 -> not_op .)
    LCM             reduce using rule 54 (exp_8 -> not_op .)
    GCD             reduce using rule 54 (exp_8 -> not_op .)
    ADC             reduce using rule 54 (exp_8 -> not_op .)
    SUB             reduce using rule 54 (exp_8 -> not_op .)
    CONC            reduce using rule 54 (exp_8 -> not_op .)
    IGUAL_DP        reduce using rule 54 (exp_8 -> not_op .)
    DIF             reduce using rule 54 (exp_8 -> not_op .)
    MAIOR           reduce using rule 54 (exp_8 -> not_op .)
    MENOR           reduce using rule 54 (exp_8 -> not_op .)
    MAIOR_IGL       reduce using rule 54 (exp_8 -> not_op .)
    LESSEQUAL       reduce using rule 54 (exp_8 -> not_op .)
    SMARTMATCH      reduce using rule 54 (exp_8 -> not_op .)
    AND_S           reduce using rule 54 (exp_8 -> not_op .)
    OR_S            reduce using rule 54 (exp_8 -> not_op .)
    XOR_S           reduce using rule 54 (exp_8 -> not_op .)
    SAY             reduce using rule 54 (exp_8 -> not_op .)
    MY              reduce using rule 54 (exp_8 -> not_op .)
    OUR             reduce using rule 54 (exp_8 -> not_op .)
    LIST            reduce using rule 54 (exp_8 -> not_op .)
    FUNCTION        reduce using rule 54 (exp_8 -> not_op .)
    ESCALAR         reduce using rule 54 (exp_8 -> not_op .)
    ID              reduce using rule 54 (exp_8 -> not_op .)
    IF              reduce using rule 54 (exp_8 -> not_op .)
    LOOP            reduce using rule 54 (exp_8 -> not_op .)
    FOR             reduce using rule 54 (exp_8 -> not_op .)
    INTEGER         reduce using rule 54 (exp_8 -> not_op .)
    WHILE           reduce using rule 54 (exp_8 -> not_op .)
    ABRE_CHAVE      reduce using rule 54 (exp_8 -> not_op .)
    BREAK           reduce using rule 54 (exp_8 -> not_op .)
    EXIT            reduce using rule 54 (exp_8 -> not_op .)
    LAST            reduce using rule 54 (exp_8 -> not_op .)
    NEXT            reduce using rule 54 (exp_8 -> not_op .)
    REDO            reduce using rule 54 (exp_8 -> not_op .)
    RETURN          reduce using rule 54 (exp_8 -> not_op .)
    CONSTANT        reduce using rule 54 (exp_8 -> not_op .)
    STATE           reduce using rule 54 (exp_8 -> not_op .)
    LET             reduce using rule 54 (exp_8 -> not_op .)
    MULTI           reduce using rule 54 (exp_8 -> not_op .)
    ONLY            reduce using rule 54 (exp_8 -> not_op .)
    IMPORT          reduce using rule 54 (exp_8 -> not_op .)
    NEED            reduce using rule 54 (exp_8 -> not_op .)
    REQUIRE         reduce using rule 54 (exp_8 -> not_op .)
    USE             reduce using rule 54 (exp_8 -> not_op .)
    PUSH            reduce using rule 54 (exp_8 -> not_op .)
    UNSHIFT         reduce using rule 54 (exp_8 -> not_op .)
    SPLICE          reduce using rule 54 (exp_8 -> not_op .)
    NOT             reduce using rule 54 (exp_8 -> not_op .)
    NEGAC           reduce using rule 54 (exp_8 -> not_op .)
    ADC_DP          reduce using rule 54 (exp_8 -> not_op .)
    DECREMENTO      reduce using rule 54 (exp_8 -> not_op .)
    LPAREN          reduce using rule 54 (exp_8 -> not_op .)
    FLOAT           reduce using rule 54 (exp_8 -> not_op .)
    STRING          reduce using rule 54 (exp_8 -> not_op .)
    BOOLEAN         reduce using rule 54 (exp_8 -> not_op .)
    $end            reduce using rule 54 (exp_8 -> not_op .)
    PONTO_VIRGULA   reduce using rule 54 (exp_8 -> not_op .)
    RPAREN          reduce using rule 54 (exp_8 -> not_op .)
    FECHA_CHAVE     reduce using rule 54 (exp_8 -> not_op .)
    COMMA           reduce using rule 54 (exp_8 -> not_op .)


state 116

    (55) exp_8 -> not_s .

    POW             reduce using rule 55 (exp_8 -> not_s .)
    MULT            reduce using rule 55 (exp_8 -> not_s .)
    DIVIDE          reduce using rule 55 (exp_8 -> not_s .)
    DIV             reduce using rule 55 (exp_8 -> not_s .)
    DIVI            reduce using rule 55 (exp_8 -> not_s .)
    MOD             reduce using rule 55 (exp_8 -> not_s .)
    LCM             reduce using rule 55 (exp_8 -> not_s .)
    GCD             reduce using rule 55 (exp_8 -> not_s .)
    ADC             reduce using rule 55 (exp_8 -> not_s .)
    SUB             reduce using rule 55 (exp_8 -> not_s .)
    CONC            reduce using rule 55 (exp_8 -> not_s .)
    IGUAL_DP        reduce using rule 55 (exp_8 -> not_s .)
    DIF             reduce using rule 55 (exp_8 -> not_s .)
    MAIOR           reduce using rule 55 (exp_8 -> not_s .)
    MENOR           reduce using rule 55 (exp_8 -> not_s .)
    MAIOR_IGL       reduce using rule 55 (exp_8 -> not_s .)
    LESSEQUAL       reduce using rule 55 (exp_8 -> not_s .)
    SMARTMATCH      reduce using rule 55 (exp_8 -> not_s .)
    AND_S           reduce using rule 55 (exp_8 -> not_s .)
    OR_S            reduce using rule 55 (exp_8 -> not_s .)
    XOR_S           reduce using rule 55 (exp_8 -> not_s .)
    SAY             reduce using rule 55 (exp_8 -> not_s .)
    MY              reduce using rule 55 (exp_8 -> not_s .)
    OUR             reduce using rule 55 (exp_8 -> not_s .)
    LIST            reduce using rule 55 (exp_8 -> not_s .)
    FUNCTION        reduce using rule 55 (exp_8 -> not_s .)
    ESCALAR         reduce using rule 55 (exp_8 -> not_s .)
    ID              reduce using rule 55 (exp_8 -> not_s .)
    IF              reduce using rule 55 (exp_8 -> not_s .)
    LOOP            reduce using rule 55 (exp_8 -> not_s .)
    FOR             reduce using rule 55 (exp_8 -> not_s .)
    INTEGER         reduce using rule 55 (exp_8 -> not_s .)
    WHILE           reduce using rule 55 (exp_8 -> not_s .)
    ABRE_CHAVE      reduce using rule 55 (exp_8 -> not_s .)
    BREAK           reduce using rule 55 (exp_8 -> not_s .)
    EXIT            reduce using rule 55 (exp_8 -> not_s .)
    LAST            reduce using rule 55 (exp_8 -> not_s .)
    NEXT            reduce using rule 55 (exp_8 -> not_s .)
    REDO            reduce using rule 55 (exp_8 -> not_s .)
    RETURN          reduce using rule 55 (exp_8 -> not_s .)
    CONSTANT        reduce using rule 55 (exp_8 -> not_s .)
    STATE           reduce using rule 55 (exp_8 -> not_s .)
    LET             reduce using rule 55 (exp_8 -> not_s .)
    MULTI           reduce using rule 55 (exp_8 -> not_s .)
    ONLY            reduce using rule 55 (exp_8 -> not_s .)
    IMPORT          reduce using rule 55 (exp_8 -> not_s .)
    NEED            reduce using rule 55 (exp_8 -> not_s .)
    REQUIRE         reduce using rule 55 (exp_8 -> not_s .)
    USE             reduce using rule 55 (exp_8 -> not_s .)
    PUSH            reduce using rule 55 (exp_8 -> not_s .)
    UNSHIFT         reduce using rule 55 (exp_8 -> not_s .)
    SPLICE          reduce using rule 55 (exp_8 -> not_s .)
    NOT             reduce using rule 55 (exp_8 -> not_s .)
    NEGAC           reduce using rule 55 (exp_8 -> not_s .)
    ADC_DP          reduce using rule 55 (exp_8 -> not_s .)
    DECREMENTO      reduce using rule 55 (exp_8 -> not_s .)
    LPAREN          reduce using rule 55 (exp_8 -> not_s .)
    FLOAT           reduce using rule 55 (exp_8 -> not_s .)
    STRING          reduce using rule 55 (exp_8 -> not_s .)
    BOOLEAN         reduce using rule 55 (exp_8 -> not_s .)
    $end            reduce using rule 55 (exp_8 -> not_s .)
    PONTO_VIRGULA   reduce using rule 55 (exp_8 -> not_s .)
    RPAREN          reduce using rule 55 (exp_8 -> not_s .)
    FECHA_CHAVE     reduce using rule 55 (exp_8 -> not_s .)
    COMMA           reduce using rule 55 (exp_8 -> not_s .)


state 117

    (56) exp_8 -> exp_9 .

    POW             reduce using rule 56 (exp_8 -> exp_9 .)
    MULT            reduce using rule 56 (exp_8 -> exp_9 .)
    DIVIDE          reduce using rule 56 (exp_8 -> exp_9 .)
    DIV             reduce using rule 56 (exp_8 -> exp_9 .)
    DIVI            reduce using rule 56 (exp_8 -> exp_9 .)
    MOD             reduce using rule 56 (exp_8 -> exp_9 .)
    LCM             reduce using rule 56 (exp_8 -> exp_9 .)
    GCD             reduce using rule 56 (exp_8 -> exp_9 .)
    ADC             reduce using rule 56 (exp_8 -> exp_9 .)
    SUB             reduce using rule 56 (exp_8 -> exp_9 .)
    CONC            reduce using rule 56 (exp_8 -> exp_9 .)
    IGUAL_DP        reduce using rule 56 (exp_8 -> exp_9 .)
    DIF             reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MENOR           reduce using rule 56 (exp_8 -> exp_9 .)
    MAIOR_IGL       reduce using rule 56 (exp_8 -> exp_9 .)
    LESSEQUAL       reduce using rule 56 (exp_8 -> exp_9 .)
    SMARTMATCH      reduce using rule 56 (exp_8 -> exp_9 .)
    AND_S           reduce using rule 56 (exp_8 -> exp_9 .)
    OR_S            reduce using rule 56 (exp_8 -> exp_9 .)
    XOR_S           reduce using rule 56 (exp_8 -> exp_9 .)
    SAY             reduce using rule 56 (exp_8 -> exp_9 .)
    MY              reduce using rule 56 (exp_8 -> exp_9 .)
    OUR             reduce using rule 56 (exp_8 -> exp_9 .)
    LIST            reduce using rule 56 (exp_8 -> exp_9 .)
    FUNCTION        reduce using rule 56 (exp_8 -> exp_9 .)
    ESCALAR         reduce using rule 56 (exp_8 -> exp_9 .)
    ID              reduce using rule 56 (exp_8 -> exp_9 .)
    IF              reduce using rule 56 (exp_8 -> exp_9 .)
    LOOP            reduce using rule 56 (exp_8 -> exp_9 .)
    FOR             reduce using rule 56 (exp_8 -> exp_9 .)
    INTEGER         reduce using rule 56 (exp_8 -> exp_9 .)
    WHILE           reduce using rule 56 (exp_8 -> exp_9 .)
    ABRE_CHAVE      reduce using rule 56 (exp_8 -> exp_9 .)
    BREAK           reduce using rule 56 (exp_8 -> exp_9 .)
    EXIT            reduce using rule 56 (exp_8 -> exp_9 .)
    LAST            reduce using rule 56 (exp_8 -> exp_9 .)
    NEXT            reduce using rule 56 (exp_8 -> exp_9 .)
    REDO            reduce using rule 56 (exp_8 -> exp_9 .)
    RETURN          reduce using rule 56 (exp_8 -> exp_9 .)
    CONSTANT        reduce using rule 56 (exp_8 -> exp_9 .)
    STATE           reduce using rule 56 (exp_8 -> exp_9 .)
    LET             reduce using rule 56 (exp_8 -> exp_9 .)
    MULTI           reduce using rule 56 (exp_8 -> exp_9 .)
    ONLY            reduce using rule 56 (exp_8 -> exp_9 .)
    IMPORT          reduce using rule 56 (exp_8 -> exp_9 .)
    NEED            reduce using rule 56 (exp_8 -> exp_9 .)
    REQUIRE         reduce using rule 56 (exp_8 -> exp_9 .)
    USE             reduce using rule 56 (exp_8 -> exp_9 .)
    PUSH            reduce using rule 56 (exp_8 -> exp_9 .)
    UNSHIFT         reduce using rule 56 (exp_8 -> exp_9 .)
    SPLICE          reduce using rule 56 (exp_8 -> exp_9 .)
    NOT             reduce using rule 56 (exp_8 -> exp_9 .)
    NEGAC           reduce using rule 56 (exp_8 -> exp_9 .)
    ADC_DP          reduce using rule 56 (exp_8 -> exp_9 .)
    DECREMENTO      reduce using rule 56 (exp_8 -> exp_9 .)
    LPAREN          reduce using rule 56 (exp_8 -> exp_9 .)
    FLOAT           reduce using rule 56 (exp_8 -> exp_9 .)
    STRING          reduce using rule 56 (exp_8 -> exp_9 .)
    BOOLEAN         reduce using rule 56 (exp_8 -> exp_9 .)
    $end            reduce using rule 56 (exp_8 -> exp_9 .)
    PONTO_VIRGULA   reduce using rule 56 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 56 (exp_8 -> exp_9 .)
    FECHA_CHAVE     reduce using rule 56 (exp_8 -> exp_9 .)
    COMMA           reduce using rule 56 (exp_8 -> exp_9 .)


state 118

    (57) not_op -> NOT . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_8                          shift and go to state 209
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 119

    (58) not_s -> NEGAC . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_8                          shift and go to state 210
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 120

    (59) exp_9 -> unario .

    POW             reduce using rule 59 (exp_9 -> unario .)
    MULT            reduce using rule 59 (exp_9 -> unario .)
    DIVIDE          reduce using rule 59 (exp_9 -> unario .)
    DIV             reduce using rule 59 (exp_9 -> unario .)
    DIVI            reduce using rule 59 (exp_9 -> unario .)
    MOD             reduce using rule 59 (exp_9 -> unario .)
    LCM             reduce using rule 59 (exp_9 -> unario .)
    GCD             reduce using rule 59 (exp_9 -> unario .)
    ADC             reduce using rule 59 (exp_9 -> unario .)
    SUB             reduce using rule 59 (exp_9 -> unario .)
    CONC            reduce using rule 59 (exp_9 -> unario .)
    IGUAL_DP        reduce using rule 59 (exp_9 -> unario .)
    DIF             reduce using rule 59 (exp_9 -> unario .)
    MAIOR           reduce using rule 59 (exp_9 -> unario .)
    MENOR           reduce using rule 59 (exp_9 -> unario .)
    MAIOR_IGL       reduce using rule 59 (exp_9 -> unario .)
    LESSEQUAL       reduce using rule 59 (exp_9 -> unario .)
    SMARTMATCH      reduce using rule 59 (exp_9 -> unario .)
    AND_S           reduce using rule 59 (exp_9 -> unario .)
    OR_S            reduce using rule 59 (exp_9 -> unario .)
    XOR_S           reduce using rule 59 (exp_9 -> unario .)
    SAY             reduce using rule 59 (exp_9 -> unario .)
    MY              reduce using rule 59 (exp_9 -> unario .)
    OUR             reduce using rule 59 (exp_9 -> unario .)
    LIST            reduce using rule 59 (exp_9 -> unario .)
    FUNCTION        reduce using rule 59 (exp_9 -> unario .)
    ESCALAR         reduce using rule 59 (exp_9 -> unario .)
    ID              reduce using rule 59 (exp_9 -> unario .)
    IF              reduce using rule 59 (exp_9 -> unario .)
    LOOP            reduce using rule 59 (exp_9 -> unario .)
    FOR             reduce using rule 59 (exp_9 -> unario .)
    INTEGER         reduce using rule 59 (exp_9 -> unario .)
    WHILE           reduce using rule 59 (exp_9 -> unario .)
    ABRE_CHAVE      reduce using rule 59 (exp_9 -> unario .)
    BREAK           reduce using rule 59 (exp_9 -> unario .)
    EXIT            reduce using rule 59 (exp_9 -> unario .)
    LAST            reduce using rule 59 (exp_9 -> unario .)
    NEXT            reduce using rule 59 (exp_9 -> unario .)
    REDO            reduce using rule 59 (exp_9 -> unario .)
    RETURN          reduce using rule 59 (exp_9 -> unario .)
    CONSTANT        reduce using rule 59 (exp_9 -> unario .)
    STATE           reduce using rule 59 (exp_9 -> unario .)
    LET             reduce using rule 59 (exp_9 -> unario .)
    MULTI           reduce using rule 59 (exp_9 -> unario .)
    ONLY            reduce using rule 59 (exp_9 -> unario .)
    IMPORT          reduce using rule 59 (exp_9 -> unario .)
    NEED            reduce using rule 59 (exp_9 -> unario .)
    REQUIRE         reduce using rule 59 (exp_9 -> unario .)
    USE             reduce using rule 59 (exp_9 -> unario .)
    PUSH            reduce using rule 59 (exp_9 -> unario .)
    UNSHIFT         reduce using rule 59 (exp_9 -> unario .)
    SPLICE          reduce using rule 59 (exp_9 -> unario .)
    NOT             reduce using rule 59 (exp_9 -> unario .)
    NEGAC           reduce using rule 59 (exp_9 -> unario .)
    ADC_DP          reduce using rule 59 (exp_9 -> unario .)
    DECREMENTO      reduce using rule 59 (exp_9 -> unario .)
    LPAREN          reduce using rule 59 (exp_9 -> unario .)
    FLOAT           reduce using rule 59 (exp_9 -> unario .)
    STRING          reduce using rule 59 (exp_9 -> unario .)
    BOOLEAN         reduce using rule 59 (exp_9 -> unario .)
    $end            reduce using rule 59 (exp_9 -> unario .)
    PONTO_VIRGULA   reduce using rule 59 (exp_9 -> unario .)
    RPAREN          reduce using rule 59 (exp_9 -> unario .)
    FECHA_CHAVE     reduce using rule 59 (exp_9 -> unario .)
    COMMA           reduce using rule 59 (exp_9 -> unario .)


state 121

    (60) exp_9 -> operando .

    POW             reduce using rule 60 (exp_9 -> operando .)
    MULT            reduce using rule 60 (exp_9 -> operando .)
    DIVIDE          reduce using rule 60 (exp_9 -> operando .)
    DIV             reduce using rule 60 (exp_9 -> operando .)
    DIVI            reduce using rule 60 (exp_9 -> operando .)
    MOD             reduce using rule 60 (exp_9 -> operando .)
    LCM             reduce using rule 60 (exp_9 -> operando .)
    GCD             reduce using rule 60 (exp_9 -> operando .)
    ADC             reduce using rule 60 (exp_9 -> operando .)
    SUB             reduce using rule 60 (exp_9 -> operando .)
    CONC            reduce using rule 60 (exp_9 -> operando .)
    IGUAL_DP        reduce using rule 60 (exp_9 -> operando .)
    DIF             reduce using rule 60 (exp_9 -> operando .)
    MAIOR           reduce using rule 60 (exp_9 -> operando .)
    MENOR           reduce using rule 60 (exp_9 -> operando .)
    MAIOR_IGL       reduce using rule 60 (exp_9 -> operando .)
    LESSEQUAL       reduce using rule 60 (exp_9 -> operando .)
    SMARTMATCH      reduce using rule 60 (exp_9 -> operando .)
    AND_S           reduce using rule 60 (exp_9 -> operando .)
    OR_S            reduce using rule 60 (exp_9 -> operando .)
    XOR_S           reduce using rule 60 (exp_9 -> operando .)
    SAY             reduce using rule 60 (exp_9 -> operando .)
    MY              reduce using rule 60 (exp_9 -> operando .)
    OUR             reduce using rule 60 (exp_9 -> operando .)
    LIST            reduce using rule 60 (exp_9 -> operando .)
    FUNCTION        reduce using rule 60 (exp_9 -> operando .)
    ESCALAR         reduce using rule 60 (exp_9 -> operando .)
    ID              reduce using rule 60 (exp_9 -> operando .)
    IF              reduce using rule 60 (exp_9 -> operando .)
    LOOP            reduce using rule 60 (exp_9 -> operando .)
    FOR             reduce using rule 60 (exp_9 -> operando .)
    INTEGER         reduce using rule 60 (exp_9 -> operando .)
    WHILE           reduce using rule 60 (exp_9 -> operando .)
    ABRE_CHAVE      reduce using rule 60 (exp_9 -> operando .)
    BREAK           reduce using rule 60 (exp_9 -> operando .)
    EXIT            reduce using rule 60 (exp_9 -> operando .)
    LAST            reduce using rule 60 (exp_9 -> operando .)
    NEXT            reduce using rule 60 (exp_9 -> operando .)
    REDO            reduce using rule 60 (exp_9 -> operando .)
    RETURN          reduce using rule 60 (exp_9 -> operando .)
    CONSTANT        reduce using rule 60 (exp_9 -> operando .)
    STATE           reduce using rule 60 (exp_9 -> operando .)
    LET             reduce using rule 60 (exp_9 -> operando .)
    MULTI           reduce using rule 60 (exp_9 -> operando .)
    ONLY            reduce using rule 60 (exp_9 -> operando .)
    IMPORT          reduce using rule 60 (exp_9 -> operando .)
    NEED            reduce using rule 60 (exp_9 -> operando .)
    REQUIRE         reduce using rule 60 (exp_9 -> operando .)
    USE             reduce using rule 60 (exp_9 -> operando .)
    PUSH            reduce using rule 60 (exp_9 -> operando .)
    UNSHIFT         reduce using rule 60 (exp_9 -> operando .)
    SPLICE          reduce using rule 60 (exp_9 -> operando .)
    NOT             reduce using rule 60 (exp_9 -> operando .)
    NEGAC           reduce using rule 60 (exp_9 -> operando .)
    ADC_DP          reduce using rule 60 (exp_9 -> operando .)
    DECREMENTO      reduce using rule 60 (exp_9 -> operando .)
    LPAREN          reduce using rule 60 (exp_9 -> operando .)
    FLOAT           reduce using rule 60 (exp_9 -> operando .)
    STRING          reduce using rule 60 (exp_9 -> operando .)
    BOOLEAN         reduce using rule 60 (exp_9 -> operando .)
    $end            reduce using rule 60 (exp_9 -> operando .)
    PONTO_VIRGULA   reduce using rule 60 (exp_9 -> operando .)
    RPAREN          reduce using rule 60 (exp_9 -> operando .)
    FECHA_CHAVE     reduce using rule 60 (exp_9 -> operando .)
    COMMA           reduce using rule 60 (exp_9 -> operando .)


state 122

    (61) unario -> prefixo_incremento .

    POW             reduce using rule 61 (unario -> prefixo_incremento .)
    MULT            reduce using rule 61 (unario -> prefixo_incremento .)
    DIVIDE          reduce using rule 61 (unario -> prefixo_incremento .)
    DIV             reduce using rule 61 (unario -> prefixo_incremento .)
    DIVI            reduce using rule 61 (unario -> prefixo_incremento .)
    MOD             reduce using rule 61 (unario -> prefixo_incremento .)
    LCM             reduce using rule 61 (unario -> prefixo_incremento .)
    GCD             reduce using rule 61 (unario -> prefixo_incremento .)
    ADC             reduce using rule 61 (unario -> prefixo_incremento .)
    SUB             reduce using rule 61 (unario -> prefixo_incremento .)
    CONC            reduce using rule 61 (unario -> prefixo_incremento .)
    IGUAL_DP        reduce using rule 61 (unario -> prefixo_incremento .)
    DIF             reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MENOR           reduce using rule 61 (unario -> prefixo_incremento .)
    MAIOR_IGL       reduce using rule 61 (unario -> prefixo_incremento .)
    LESSEQUAL       reduce using rule 61 (unario -> prefixo_incremento .)
    SMARTMATCH      reduce using rule 61 (unario -> prefixo_incremento .)
    AND_S           reduce using rule 61 (unario -> prefixo_incremento .)
    OR_S            reduce using rule 61 (unario -> prefixo_incremento .)
    XOR_S           reduce using rule 61 (unario -> prefixo_incremento .)
    SAY             reduce using rule 61 (unario -> prefixo_incremento .)
    MY              reduce using rule 61 (unario -> prefixo_incremento .)
    OUR             reduce using rule 61 (unario -> prefixo_incremento .)
    LIST            reduce using rule 61 (unario -> prefixo_incremento .)
    FUNCTION        reduce using rule 61 (unario -> prefixo_incremento .)
    ESCALAR         reduce using rule 61 (unario -> prefixo_incremento .)
    ID              reduce using rule 61 (unario -> prefixo_incremento .)
    IF              reduce using rule 61 (unario -> prefixo_incremento .)
    LOOP            reduce using rule 61 (unario -> prefixo_incremento .)
    FOR             reduce using rule 61 (unario -> prefixo_incremento .)
    INTEGER         reduce using rule 61 (unario -> prefixo_incremento .)
    WHILE           reduce using rule 61 (unario -> prefixo_incremento .)
    ABRE_CHAVE      reduce using rule 61 (unario -> prefixo_incremento .)
    BREAK           reduce using rule 61 (unario -> prefixo_incremento .)
    EXIT            reduce using rule 61 (unario -> prefixo_incremento .)
    LAST            reduce using rule 61 (unario -> prefixo_incremento .)
    NEXT            reduce using rule 61 (unario -> prefixo_incremento .)
    REDO            reduce using rule 61 (unario -> prefixo_incremento .)
    RETURN          reduce using rule 61 (unario -> prefixo_incremento .)
    CONSTANT        reduce using rule 61 (unario -> prefixo_incremento .)
    STATE           reduce using rule 61 (unario -> prefixo_incremento .)
    LET             reduce using rule 61 (unario -> prefixo_incremento .)
    MULTI           reduce using rule 61 (unario -> prefixo_incremento .)
    ONLY            reduce using rule 61 (unario -> prefixo_incremento .)
    IMPORT          reduce using rule 61 (unario -> prefixo_incremento .)
    NEED            reduce using rule 61 (unario -> prefixo_incremento .)
    REQUIRE         reduce using rule 61 (unario -> prefixo_incremento .)
    USE             reduce using rule 61 (unario -> prefixo_incremento .)
    PUSH            reduce using rule 61 (unario -> prefixo_incremento .)
    UNSHIFT         reduce using rule 61 (unario -> prefixo_incremento .)
    SPLICE          reduce using rule 61 (unario -> prefixo_incremento .)
    NOT             reduce using rule 61 (unario -> prefixo_incremento .)
    NEGAC           reduce using rule 61 (unario -> prefixo_incremento .)
    ADC_DP          reduce using rule 61 (unario -> prefixo_incremento .)
    DECREMENTO      reduce using rule 61 (unario -> prefixo_incremento .)
    LPAREN          reduce using rule 61 (unario -> prefixo_incremento .)
    FLOAT           reduce using rule 61 (unario -> prefixo_incremento .)
    STRING          reduce using rule 61 (unario -> prefixo_incremento .)
    BOOLEAN         reduce using rule 61 (unario -> prefixo_incremento .)
    $end            reduce using rule 61 (unario -> prefixo_incremento .)
    PONTO_VIRGULA   reduce using rule 61 (unario -> prefixo_incremento .)
    RPAREN          reduce using rule 61 (unario -> prefixo_incremento .)
    FECHA_CHAVE     reduce using rule 61 (unario -> prefixo_incremento .)
    COMMA           reduce using rule 61 (unario -> prefixo_incremento .)


state 123

    (62) unario -> posfixo_incremento .

    POW             reduce using rule 62 (unario -> posfixo_incremento .)
    MULT            reduce using rule 62 (unario -> posfixo_incremento .)
    DIVIDE          reduce using rule 62 (unario -> posfixo_incremento .)
    DIV             reduce using rule 62 (unario -> posfixo_incremento .)
    DIVI            reduce using rule 62 (unario -> posfixo_incremento .)
    MOD             reduce using rule 62 (unario -> posfixo_incremento .)
    LCM             reduce using rule 62 (unario -> posfixo_incremento .)
    GCD             reduce using rule 62 (unario -> posfixo_incremento .)
    ADC             reduce using rule 62 (unario -> posfixo_incremento .)
    SUB             reduce using rule 62 (unario -> posfixo_incremento .)
    CONC            reduce using rule 62 (unario -> posfixo_incremento .)
    IGUAL_DP        reduce using rule 62 (unario -> posfixo_incremento .)
    DIF             reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MENOR           reduce using rule 62 (unario -> posfixo_incremento .)
    MAIOR_IGL       reduce using rule 62 (unario -> posfixo_incremento .)
    LESSEQUAL       reduce using rule 62 (unario -> posfixo_incremento .)
    SMARTMATCH      reduce using rule 62 (unario -> posfixo_incremento .)
    AND_S           reduce using rule 62 (unario -> posfixo_incremento .)
    OR_S            reduce using rule 62 (unario -> posfixo_incremento .)
    XOR_S           reduce using rule 62 (unario -> posfixo_incremento .)
    SAY             reduce using rule 62 (unario -> posfixo_incremento .)
    MY              reduce using rule 62 (unario -> posfixo_incremento .)
    OUR             reduce using rule 62 (unario -> posfixo_incremento .)
    LIST            reduce using rule 62 (unario -> posfixo_incremento .)
    FUNCTION        reduce using rule 62 (unario -> posfixo_incremento .)
    ESCALAR         reduce using rule 62 (unario -> posfixo_incremento .)
    ID              reduce using rule 62 (unario -> posfixo_incremento .)
    IF              reduce using rule 62 (unario -> posfixo_incremento .)
    LOOP            reduce using rule 62 (unario -> posfixo_incremento .)
    FOR             reduce using rule 62 (unario -> posfixo_incremento .)
    INTEGER         reduce using rule 62 (unario -> posfixo_incremento .)
    WHILE           reduce using rule 62 (unario -> posfixo_incremento .)
    ABRE_CHAVE      reduce using rule 62 (unario -> posfixo_incremento .)
    BREAK           reduce using rule 62 (unario -> posfixo_incremento .)
    EXIT            reduce using rule 62 (unario -> posfixo_incremento .)
    LAST            reduce using rule 62 (unario -> posfixo_incremento .)
    NEXT            reduce using rule 62 (unario -> posfixo_incremento .)
    REDO            reduce using rule 62 (unario -> posfixo_incremento .)
    RETURN          reduce using rule 62 (unario -> posfixo_incremento .)
    CONSTANT        reduce using rule 62 (unario -> posfixo_incremento .)
    STATE           reduce using rule 62 (unario -> posfixo_incremento .)
    LET             reduce using rule 62 (unario -> posfixo_incremento .)
    MULTI           reduce using rule 62 (unario -> posfixo_incremento .)
    ONLY            reduce using rule 62 (unario -> posfixo_incremento .)
    IMPORT          reduce using rule 62 (unario -> posfixo_incremento .)
    NEED            reduce using rule 62 (unario -> posfixo_incremento .)
    REQUIRE         reduce using rule 62 (unario -> posfixo_incremento .)
    USE             reduce using rule 62 (unario -> posfixo_incremento .)
    PUSH            reduce using rule 62 (unario -> posfixo_incremento .)
    UNSHIFT         reduce using rule 62 (unario -> posfixo_incremento .)
    SPLICE          reduce using rule 62 (unario -> posfixo_incremento .)
    NOT             reduce using rule 62 (unario -> posfixo_incremento .)
    NEGAC           reduce using rule 62 (unario -> posfixo_incremento .)
    ADC_DP          reduce using rule 62 (unario -> posfixo_incremento .)
    DECREMENTO      reduce using rule 62 (unario -> posfixo_incremento .)
    LPAREN          reduce using rule 62 (unario -> posfixo_incremento .)
    FLOAT           reduce using rule 62 (unario -> posfixo_incremento .)
    STRING          reduce using rule 62 (unario -> posfixo_incremento .)
    BOOLEAN         reduce using rule 62 (unario -> posfixo_incremento .)
    $end            reduce using rule 62 (unario -> posfixo_incremento .)
    PONTO_VIRGULA   reduce using rule 62 (unario -> posfixo_incremento .)
    RPAREN          reduce using rule 62 (unario -> posfixo_incremento .)
    FECHA_CHAVE     reduce using rule 62 (unario -> posfixo_incremento .)
    COMMA           reduce using rule 62 (unario -> posfixo_incremento .)


state 124

    (63) unario -> prefixo_decremento .

    POW             reduce using rule 63 (unario -> prefixo_decremento .)
    MULT            reduce using rule 63 (unario -> prefixo_decremento .)
    DIVIDE          reduce using rule 63 (unario -> prefixo_decremento .)
    DIV             reduce using rule 63 (unario -> prefixo_decremento .)
    DIVI            reduce using rule 63 (unario -> prefixo_decremento .)
    MOD             reduce using rule 63 (unario -> prefixo_decremento .)
    LCM             reduce using rule 63 (unario -> prefixo_decremento .)
    GCD             reduce using rule 63 (unario -> prefixo_decremento .)
    ADC             reduce using rule 63 (unario -> prefixo_decremento .)
    SUB             reduce using rule 63 (unario -> prefixo_decremento .)
    CONC            reduce using rule 63 (unario -> prefixo_decremento .)
    IGUAL_DP        reduce using rule 63 (unario -> prefixo_decremento .)
    DIF             reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MENOR           reduce using rule 63 (unario -> prefixo_decremento .)
    MAIOR_IGL       reduce using rule 63 (unario -> prefixo_decremento .)
    LESSEQUAL       reduce using rule 63 (unario -> prefixo_decremento .)
    SMARTMATCH      reduce using rule 63 (unario -> prefixo_decremento .)
    AND_S           reduce using rule 63 (unario -> prefixo_decremento .)
    OR_S            reduce using rule 63 (unario -> prefixo_decremento .)
    XOR_S           reduce using rule 63 (unario -> prefixo_decremento .)
    SAY             reduce using rule 63 (unario -> prefixo_decremento .)
    MY              reduce using rule 63 (unario -> prefixo_decremento .)
    OUR             reduce using rule 63 (unario -> prefixo_decremento .)
    LIST            reduce using rule 63 (unario -> prefixo_decremento .)
    FUNCTION        reduce using rule 63 (unario -> prefixo_decremento .)
    ESCALAR         reduce using rule 63 (unario -> prefixo_decremento .)
    ID              reduce using rule 63 (unario -> prefixo_decremento .)
    IF              reduce using rule 63 (unario -> prefixo_decremento .)
    LOOP            reduce using rule 63 (unario -> prefixo_decremento .)
    FOR             reduce using rule 63 (unario -> prefixo_decremento .)
    INTEGER         reduce using rule 63 (unario -> prefixo_decremento .)
    WHILE           reduce using rule 63 (unario -> prefixo_decremento .)
    ABRE_CHAVE      reduce using rule 63 (unario -> prefixo_decremento .)
    BREAK           reduce using rule 63 (unario -> prefixo_decremento .)
    EXIT            reduce using rule 63 (unario -> prefixo_decremento .)
    LAST            reduce using rule 63 (unario -> prefixo_decremento .)
    NEXT            reduce using rule 63 (unario -> prefixo_decremento .)
    REDO            reduce using rule 63 (unario -> prefixo_decremento .)
    RETURN          reduce using rule 63 (unario -> prefixo_decremento .)
    CONSTANT        reduce using rule 63 (unario -> prefixo_decremento .)
    STATE           reduce using rule 63 (unario -> prefixo_decremento .)
    LET             reduce using rule 63 (unario -> prefixo_decremento .)
    MULTI           reduce using rule 63 (unario -> prefixo_decremento .)
    ONLY            reduce using rule 63 (unario -> prefixo_decremento .)
    IMPORT          reduce using rule 63 (unario -> prefixo_decremento .)
    NEED            reduce using rule 63 (unario -> prefixo_decremento .)
    REQUIRE         reduce using rule 63 (unario -> prefixo_decremento .)
    USE             reduce using rule 63 (unario -> prefixo_decremento .)
    PUSH            reduce using rule 63 (unario -> prefixo_decremento .)
    UNSHIFT         reduce using rule 63 (unario -> prefixo_decremento .)
    SPLICE          reduce using rule 63 (unario -> prefixo_decremento .)
    NOT             reduce using rule 63 (unario -> prefixo_decremento .)
    NEGAC           reduce using rule 63 (unario -> prefixo_decremento .)
    ADC_DP          reduce using rule 63 (unario -> prefixo_decremento .)
    DECREMENTO      reduce using rule 63 (unario -> prefixo_decremento .)
    LPAREN          reduce using rule 63 (unario -> prefixo_decremento .)
    FLOAT           reduce using rule 63 (unario -> prefixo_decremento .)
    STRING          reduce using rule 63 (unario -> prefixo_decremento .)
    BOOLEAN         reduce using rule 63 (unario -> prefixo_decremento .)
    $end            reduce using rule 63 (unario -> prefixo_decremento .)
    PONTO_VIRGULA   reduce using rule 63 (unario -> prefixo_decremento .)
    RPAREN          reduce using rule 63 (unario -> prefixo_decremento .)
    FECHA_CHAVE     reduce using rule 63 (unario -> prefixo_decremento .)
    COMMA           reduce using rule 63 (unario -> prefixo_decremento .)


state 125

    (64) unario -> posfixo_decremento .

    POW             reduce using rule 64 (unario -> posfixo_decremento .)
    MULT            reduce using rule 64 (unario -> posfixo_decremento .)
    DIVIDE          reduce using rule 64 (unario -> posfixo_decremento .)
    DIV             reduce using rule 64 (unario -> posfixo_decremento .)
    DIVI            reduce using rule 64 (unario -> posfixo_decremento .)
    MOD             reduce using rule 64 (unario -> posfixo_decremento .)
    LCM             reduce using rule 64 (unario -> posfixo_decremento .)
    GCD             reduce using rule 64 (unario -> posfixo_decremento .)
    ADC             reduce using rule 64 (unario -> posfixo_decremento .)
    SUB             reduce using rule 64 (unario -> posfixo_decremento .)
    CONC            reduce using rule 64 (unario -> posfixo_decremento .)
    IGUAL_DP        reduce using rule 64 (unario -> posfixo_decremento .)
    DIF             reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MENOR           reduce using rule 64 (unario -> posfixo_decremento .)
    MAIOR_IGL       reduce using rule 64 (unario -> posfixo_decremento .)
    LESSEQUAL       reduce using rule 64 (unario -> posfixo_decremento .)
    SMARTMATCH      reduce using rule 64 (unario -> posfixo_decremento .)
    AND_S           reduce using rule 64 (unario -> posfixo_decremento .)
    OR_S            reduce using rule 64 (unario -> posfixo_decremento .)
    XOR_S           reduce using rule 64 (unario -> posfixo_decremento .)
    SAY             reduce using rule 64 (unario -> posfixo_decremento .)
    MY              reduce using rule 64 (unario -> posfixo_decremento .)
    OUR             reduce using rule 64 (unario -> posfixo_decremento .)
    LIST            reduce using rule 64 (unario -> posfixo_decremento .)
    FUNCTION        reduce using rule 64 (unario -> posfixo_decremento .)
    ESCALAR         reduce using rule 64 (unario -> posfixo_decremento .)
    ID              reduce using rule 64 (unario -> posfixo_decremento .)
    IF              reduce using rule 64 (unario -> posfixo_decremento .)
    LOOP            reduce using rule 64 (unario -> posfixo_decremento .)
    FOR             reduce using rule 64 (unario -> posfixo_decremento .)
    INTEGER         reduce using rule 64 (unario -> posfixo_decremento .)
    WHILE           reduce using rule 64 (unario -> posfixo_decremento .)
    ABRE_CHAVE      reduce using rule 64 (unario -> posfixo_decremento .)
    BREAK           reduce using rule 64 (unario -> posfixo_decremento .)
    EXIT            reduce using rule 64 (unario -> posfixo_decremento .)
    LAST            reduce using rule 64 (unario -> posfixo_decremento .)
    NEXT            reduce using rule 64 (unario -> posfixo_decremento .)
    REDO            reduce using rule 64 (unario -> posfixo_decremento .)
    RETURN          reduce using rule 64 (unario -> posfixo_decremento .)
    CONSTANT        reduce using rule 64 (unario -> posfixo_decremento .)
    STATE           reduce using rule 64 (unario -> posfixo_decremento .)
    LET             reduce using rule 64 (unario -> posfixo_decremento .)
    MULTI           reduce using rule 64 (unario -> posfixo_decremento .)
    ONLY            reduce using rule 64 (unario -> posfixo_decremento .)
    IMPORT          reduce using rule 64 (unario -> posfixo_decremento .)
    NEED            reduce using rule 64 (unario -> posfixo_decremento .)
    REQUIRE         reduce using rule 64 (unario -> posfixo_decremento .)
    USE             reduce using rule 64 (unario -> posfixo_decremento .)
    PUSH            reduce using rule 64 (unario -> posfixo_decremento .)
    UNSHIFT         reduce using rule 64 (unario -> posfixo_decremento .)
    SPLICE          reduce using rule 64 (unario -> posfixo_decremento .)
    NOT             reduce using rule 64 (unario -> posfixo_decremento .)
    NEGAC           reduce using rule 64 (unario -> posfixo_decremento .)
    ADC_DP          reduce using rule 64 (unario -> posfixo_decremento .)
    DECREMENTO      reduce using rule 64 (unario -> posfixo_decremento .)
    LPAREN          reduce using rule 64 (unario -> posfixo_decremento .)
    FLOAT           reduce using rule 64 (unario -> posfixo_decremento .)
    STRING          reduce using rule 64 (unario -> posfixo_decremento .)
    BOOLEAN         reduce using rule 64 (unario -> posfixo_decremento .)
    $end            reduce using rule 64 (unario -> posfixo_decremento .)
    PONTO_VIRGULA   reduce using rule 64 (unario -> posfixo_decremento .)
    RPAREN          reduce using rule 64 (unario -> posfixo_decremento .)
    FECHA_CHAVE     reduce using rule 64 (unario -> posfixo_decremento .)
    COMMA           reduce using rule 64 (unario -> posfixo_decremento .)


state 126

    (69) operando -> parenteses .

    POW             reduce using rule 69 (operando -> parenteses .)
    MULT            reduce using rule 69 (operando -> parenteses .)
    DIVIDE          reduce using rule 69 (operando -> parenteses .)
    DIV             reduce using rule 69 (operando -> parenteses .)
    DIVI            reduce using rule 69 (operando -> parenteses .)
    MOD             reduce using rule 69 (operando -> parenteses .)
    LCM             reduce using rule 69 (operando -> parenteses .)
    GCD             reduce using rule 69 (operando -> parenteses .)
    ADC             reduce using rule 69 (operando -> parenteses .)
    SUB             reduce using rule 69 (operando -> parenteses .)
    CONC            reduce using rule 69 (operando -> parenteses .)
    IGUAL_DP        reduce using rule 69 (operando -> parenteses .)
    DIF             reduce using rule 69 (operando -> parenteses .)
    MAIOR           reduce using rule 69 (operando -> parenteses .)
    MENOR           reduce using rule 69 (operando -> parenteses .)
    MAIOR_IGL       reduce using rule 69 (operando -> parenteses .)
    LESSEQUAL       reduce using rule 69 (operando -> parenteses .)
    SMARTMATCH      reduce using rule 69 (operando -> parenteses .)
    AND_S           reduce using rule 69 (operando -> parenteses .)
    OR_S            reduce using rule 69 (operando -> parenteses .)
    XOR_S           reduce using rule 69 (operando -> parenteses .)
    SAY             reduce using rule 69 (operando -> parenteses .)
    MY              reduce using rule 69 (operando -> parenteses .)
    OUR             reduce using rule 69 (operando -> parenteses .)
    LIST            reduce using rule 69 (operando -> parenteses .)
    FUNCTION        reduce using rule 69 (operando -> parenteses .)
    ESCALAR         reduce using rule 69 (operando -> parenteses .)
    ID              reduce using rule 69 (operando -> parenteses .)
    IF              reduce using rule 69 (operando -> parenteses .)
    LOOP            reduce using rule 69 (operando -> parenteses .)
    FOR             reduce using rule 69 (operando -> parenteses .)
    INTEGER         reduce using rule 69 (operando -> parenteses .)
    WHILE           reduce using rule 69 (operando -> parenteses .)
    ABRE_CHAVE      reduce using rule 69 (operando -> parenteses .)
    BREAK           reduce using rule 69 (operando -> parenteses .)
    EXIT            reduce using rule 69 (operando -> parenteses .)
    LAST            reduce using rule 69 (operando -> parenteses .)
    NEXT            reduce using rule 69 (operando -> parenteses .)
    REDO            reduce using rule 69 (operando -> parenteses .)
    RETURN          reduce using rule 69 (operando -> parenteses .)
    CONSTANT        reduce using rule 69 (operando -> parenteses .)
    STATE           reduce using rule 69 (operando -> parenteses .)
    LET             reduce using rule 69 (operando -> parenteses .)
    MULTI           reduce using rule 69 (operando -> parenteses .)
    ONLY            reduce using rule 69 (operando -> parenteses .)
    IMPORT          reduce using rule 69 (operando -> parenteses .)
    NEED            reduce using rule 69 (operando -> parenteses .)
    REQUIRE         reduce using rule 69 (operando -> parenteses .)
    USE             reduce using rule 69 (operando -> parenteses .)
    PUSH            reduce using rule 69 (operando -> parenteses .)
    UNSHIFT         reduce using rule 69 (operando -> parenteses .)
    SPLICE          reduce using rule 69 (operando -> parenteses .)
    NOT             reduce using rule 69 (operando -> parenteses .)
    NEGAC           reduce using rule 69 (operando -> parenteses .)
    ADC_DP          reduce using rule 69 (operando -> parenteses .)
    DECREMENTO      reduce using rule 69 (operando -> parenteses .)
    LPAREN          reduce using rule 69 (operando -> parenteses .)
    FLOAT           reduce using rule 69 (operando -> parenteses .)
    STRING          reduce using rule 69 (operando -> parenteses .)
    BOOLEAN         reduce using rule 69 (operando -> parenteses .)
    $end            reduce using rule 69 (operando -> parenteses .)
    PONTO_VIRGULA   reduce using rule 69 (operando -> parenteses .)
    RPAREN          reduce using rule 69 (operando -> parenteses .)
    FECHA_CHAVE     reduce using rule 69 (operando -> parenteses .)
    COMMA           reduce using rule 69 (operando -> parenteses .)


state 127

    (70) operando -> completo .

    POW             reduce using rule 70 (operando -> completo .)
    MULT            reduce using rule 70 (operando -> completo .)
    DIVIDE          reduce using rule 70 (operando -> completo .)
    DIV             reduce using rule 70 (operando -> completo .)
    DIVI            reduce using rule 70 (operando -> completo .)
    MOD             reduce using rule 70 (operando -> completo .)
    LCM             reduce using rule 70 (operando -> completo .)
    GCD             reduce using rule 70 (operando -> completo .)
    ADC             reduce using rule 70 (operando -> completo .)
    SUB             reduce using rule 70 (operando -> completo .)
    CONC            reduce using rule 70 (operando -> completo .)
    IGUAL_DP        reduce using rule 70 (operando -> completo .)
    DIF             reduce using rule 70 (operando -> completo .)
    MAIOR           reduce using rule 70 (operando -> completo .)
    MENOR           reduce using rule 70 (operando -> completo .)
    MAIOR_IGL       reduce using rule 70 (operando -> completo .)
    LESSEQUAL       reduce using rule 70 (operando -> completo .)
    SMARTMATCH      reduce using rule 70 (operando -> completo .)
    AND_S           reduce using rule 70 (operando -> completo .)
    OR_S            reduce using rule 70 (operando -> completo .)
    XOR_S           reduce using rule 70 (operando -> completo .)
    SAY             reduce using rule 70 (operando -> completo .)
    MY              reduce using rule 70 (operando -> completo .)
    OUR             reduce using rule 70 (operando -> completo .)
    LIST            reduce using rule 70 (operando -> completo .)
    FUNCTION        reduce using rule 70 (operando -> completo .)
    ESCALAR         reduce using rule 70 (operando -> completo .)
    ID              reduce using rule 70 (operando -> completo .)
    IF              reduce using rule 70 (operando -> completo .)
    LOOP            reduce using rule 70 (operando -> completo .)
    FOR             reduce using rule 70 (operando -> completo .)
    INTEGER         reduce using rule 70 (operando -> completo .)
    WHILE           reduce using rule 70 (operando -> completo .)
    ABRE_CHAVE      reduce using rule 70 (operando -> completo .)
    BREAK           reduce using rule 70 (operando -> completo .)
    EXIT            reduce using rule 70 (operando -> completo .)
    LAST            reduce using rule 70 (operando -> completo .)
    NEXT            reduce using rule 70 (operando -> completo .)
    REDO            reduce using rule 70 (operando -> completo .)
    RETURN          reduce using rule 70 (operando -> completo .)
    CONSTANT        reduce using rule 70 (operando -> completo .)
    STATE           reduce using rule 70 (operando -> completo .)
    LET             reduce using rule 70 (operando -> completo .)
    MULTI           reduce using rule 70 (operando -> completo .)
    ONLY            reduce using rule 70 (operando -> completo .)
    IMPORT          reduce using rule 70 (operando -> completo .)
    NEED            reduce using rule 70 (operando -> completo .)
    REQUIRE         reduce using rule 70 (operando -> completo .)
    USE             reduce using rule 70 (operando -> completo .)
    PUSH            reduce using rule 70 (operando -> completo .)
    UNSHIFT         reduce using rule 70 (operando -> completo .)
    SPLICE          reduce using rule 70 (operando -> completo .)
    NOT             reduce using rule 70 (operando -> completo .)
    NEGAC           reduce using rule 70 (operando -> completo .)
    ADC_DP          reduce using rule 70 (operando -> completo .)
    DECREMENTO      reduce using rule 70 (operando -> completo .)
    LPAREN          reduce using rule 70 (operando -> completo .)
    FLOAT           reduce using rule 70 (operando -> completo .)
    STRING          reduce using rule 70 (operando -> completo .)
    BOOLEAN         reduce using rule 70 (operando -> completo .)
    $end            reduce using rule 70 (operando -> completo .)
    PONTO_VIRGULA   reduce using rule 70 (operando -> completo .)
    RPAREN          reduce using rule 70 (operando -> completo .)
    FECHA_CHAVE     reduce using rule 70 (operando -> completo .)
    COMMA           reduce using rule 70 (operando -> completo .)


state 128

    (65) prefixo_incremento -> ADC_DP . escalar PONTO_VIRGULA
    (90) escalar -> . ESCALAR

    ESCALAR         shift and go to state 144

    escalar                        shift and go to state 211

state 129

    (66) posfixo_incremento -> escalar . ADC_DP PONTO_VIRGULA
    (68) posfixo_decremento -> escalar . DECREMENTO PONTO_VIRGULA
    (75) completo -> escalar .

  ! shift/reduce conflict for ADC_DP resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
    ADC_DP          shift and go to state 212
    DECREMENTO      shift and go to state 213
    POW             reduce using rule 75 (completo -> escalar .)
    MULT            reduce using rule 75 (completo -> escalar .)
    DIVIDE          reduce using rule 75 (completo -> escalar .)
    DIV             reduce using rule 75 (completo -> escalar .)
    DIVI            reduce using rule 75 (completo -> escalar .)
    MOD             reduce using rule 75 (completo -> escalar .)
    LCM             reduce using rule 75 (completo -> escalar .)
    GCD             reduce using rule 75 (completo -> escalar .)
    ADC             reduce using rule 75 (completo -> escalar .)
    SUB             reduce using rule 75 (completo -> escalar .)
    CONC            reduce using rule 75 (completo -> escalar .)
    IGUAL_DP        reduce using rule 75 (completo -> escalar .)
    DIF             reduce using rule 75 (completo -> escalar .)
    MAIOR           reduce using rule 75 (completo -> escalar .)
    MENOR           reduce using rule 75 (completo -> escalar .)
    MAIOR_IGL       reduce using rule 75 (completo -> escalar .)
    LESSEQUAL       reduce using rule 75 (completo -> escalar .)
    SMARTMATCH      reduce using rule 75 (completo -> escalar .)
    AND_S           reduce using rule 75 (completo -> escalar .)
    OR_S            reduce using rule 75 (completo -> escalar .)
    XOR_S           reduce using rule 75 (completo -> escalar .)
    SAY             reduce using rule 75 (completo -> escalar .)
    MY              reduce using rule 75 (completo -> escalar .)
    OUR             reduce using rule 75 (completo -> escalar .)
    LIST            reduce using rule 75 (completo -> escalar .)
    FUNCTION        reduce using rule 75 (completo -> escalar .)
    ESCALAR         reduce using rule 75 (completo -> escalar .)
    ID              reduce using rule 75 (completo -> escalar .)
    IF              reduce using rule 75 (completo -> escalar .)
    LOOP            reduce using rule 75 (completo -> escalar .)
    FOR             reduce using rule 75 (completo -> escalar .)
    INTEGER         reduce using rule 75 (completo -> escalar .)
    WHILE           reduce using rule 75 (completo -> escalar .)
    ABRE_CHAVE      reduce using rule 75 (completo -> escalar .)
    BREAK           reduce using rule 75 (completo -> escalar .)
    EXIT            reduce using rule 75 (completo -> escalar .)
    LAST            reduce using rule 75 (completo -> escalar .)
    NEXT            reduce using rule 75 (completo -> escalar .)
    REDO            reduce using rule 75 (completo -> escalar .)
    RETURN          reduce using rule 75 (completo -> escalar .)
    CONSTANT        reduce using rule 75 (completo -> escalar .)
    STATE           reduce using rule 75 (completo -> escalar .)
    LET             reduce using rule 75 (completo -> escalar .)
    MULTI           reduce using rule 75 (completo -> escalar .)
    ONLY            reduce using rule 75 (completo -> escalar .)
    IMPORT          reduce using rule 75 (completo -> escalar .)
    NEED            reduce using rule 75 (completo -> escalar .)
    REQUIRE         reduce using rule 75 (completo -> escalar .)
    USE             reduce using rule 75 (completo -> escalar .)
    PUSH            reduce using rule 75 (completo -> escalar .)
    UNSHIFT         reduce using rule 75 (completo -> escalar .)
    SPLICE          reduce using rule 75 (completo -> escalar .)
    NOT             reduce using rule 75 (completo -> escalar .)
    NEGAC           reduce using rule 75 (completo -> escalar .)
    LPAREN          reduce using rule 75 (completo -> escalar .)
    FLOAT           reduce using rule 75 (completo -> escalar .)
    STRING          reduce using rule 75 (completo -> escalar .)
    BOOLEAN         reduce using rule 75 (completo -> escalar .)
    $end            reduce using rule 75 (completo -> escalar .)
    PONTO_VIRGULA   reduce using rule 75 (completo -> escalar .)
    RPAREN          reduce using rule 75 (completo -> escalar .)
    FECHA_CHAVE     reduce using rule 75 (completo -> escalar .)
    COMMA           reduce using rule 75 (completo -> escalar .)

  ! ADC_DP          [ reduce using rule 75 (completo -> escalar .) ]
  ! DECREMENTO      [ reduce using rule 75 (completo -> escalar .) ]


state 130

    (67) prefixo_decremento -> DECREMENTO . escalar PONTO_VIRGULA
    (90) escalar -> . ESCALAR

    ESCALAR         shift and go to state 144

    escalar                        shift and go to state 214

state 131

    (72) completo -> tipo .

    POW             reduce using rule 72 (completo -> tipo .)
    MULT            reduce using rule 72 (completo -> tipo .)
    DIVIDE          reduce using rule 72 (completo -> tipo .)
    DIV             reduce using rule 72 (completo -> tipo .)
    DIVI            reduce using rule 72 (completo -> tipo .)
    MOD             reduce using rule 72 (completo -> tipo .)
    LCM             reduce using rule 72 (completo -> tipo .)
    GCD             reduce using rule 72 (completo -> tipo .)
    ADC             reduce using rule 72 (completo -> tipo .)
    SUB             reduce using rule 72 (completo -> tipo .)
    CONC            reduce using rule 72 (completo -> tipo .)
    IGUAL_DP        reduce using rule 72 (completo -> tipo .)
    DIF             reduce using rule 72 (completo -> tipo .)
    MAIOR           reduce using rule 72 (completo -> tipo .)
    MENOR           reduce using rule 72 (completo -> tipo .)
    MAIOR_IGL       reduce using rule 72 (completo -> tipo .)
    LESSEQUAL       reduce using rule 72 (completo -> tipo .)
    SMARTMATCH      reduce using rule 72 (completo -> tipo .)
    AND_S           reduce using rule 72 (completo -> tipo .)
    OR_S            reduce using rule 72 (completo -> tipo .)
    XOR_S           reduce using rule 72 (completo -> tipo .)
    SAY             reduce using rule 72 (completo -> tipo .)
    MY              reduce using rule 72 (completo -> tipo .)
    OUR             reduce using rule 72 (completo -> tipo .)
    LIST            reduce using rule 72 (completo -> tipo .)
    FUNCTION        reduce using rule 72 (completo -> tipo .)
    ESCALAR         reduce using rule 72 (completo -> tipo .)
    ID              reduce using rule 72 (completo -> tipo .)
    IF              reduce using rule 72 (completo -> tipo .)
    LOOP            reduce using rule 72 (completo -> tipo .)
    FOR             reduce using rule 72 (completo -> tipo .)
    INTEGER         reduce using rule 72 (completo -> tipo .)
    WHILE           reduce using rule 72 (completo -> tipo .)
    ABRE_CHAVE      reduce using rule 72 (completo -> tipo .)
    BREAK           reduce using rule 72 (completo -> tipo .)
    EXIT            reduce using rule 72 (completo -> tipo .)
    LAST            reduce using rule 72 (completo -> tipo .)
    NEXT            reduce using rule 72 (completo -> tipo .)
    REDO            reduce using rule 72 (completo -> tipo .)
    RETURN          reduce using rule 72 (completo -> tipo .)
    CONSTANT        reduce using rule 72 (completo -> tipo .)
    STATE           reduce using rule 72 (completo -> tipo .)
    LET             reduce using rule 72 (completo -> tipo .)
    MULTI           reduce using rule 72 (completo -> tipo .)
    ONLY            reduce using rule 72 (completo -> tipo .)
    IMPORT          reduce using rule 72 (completo -> tipo .)
    NEED            reduce using rule 72 (completo -> tipo .)
    REQUIRE         reduce using rule 72 (completo -> tipo .)
    USE             reduce using rule 72 (completo -> tipo .)
    PUSH            reduce using rule 72 (completo -> tipo .)
    UNSHIFT         reduce using rule 72 (completo -> tipo .)
    SPLICE          reduce using rule 72 (completo -> tipo .)
    NOT             reduce using rule 72 (completo -> tipo .)
    NEGAC           reduce using rule 72 (completo -> tipo .)
    ADC_DP          reduce using rule 72 (completo -> tipo .)
    DECREMENTO      reduce using rule 72 (completo -> tipo .)
    LPAREN          reduce using rule 72 (completo -> tipo .)
    FLOAT           reduce using rule 72 (completo -> tipo .)
    STRING          reduce using rule 72 (completo -> tipo .)
    BOOLEAN         reduce using rule 72 (completo -> tipo .)
    $end            reduce using rule 72 (completo -> tipo .)
    PONTO_VIRGULA   reduce using rule 72 (completo -> tipo .)
    RPAREN          reduce using rule 72 (completo -> tipo .)
    FECHA_CHAVE     reduce using rule 72 (completo -> tipo .)
    COMMA           reduce using rule 72 (completo -> tipo .)


state 132

    (77) tipo -> float .

    POW             reduce using rule 77 (tipo -> float .)
    MULT            reduce using rule 77 (tipo -> float .)
    DIVIDE          reduce using rule 77 (tipo -> float .)
    DIV             reduce using rule 77 (tipo -> float .)
    DIVI            reduce using rule 77 (tipo -> float .)
    MOD             reduce using rule 77 (tipo -> float .)
    LCM             reduce using rule 77 (tipo -> float .)
    GCD             reduce using rule 77 (tipo -> float .)
    ADC             reduce using rule 77 (tipo -> float .)
    SUB             reduce using rule 77 (tipo -> float .)
    CONC            reduce using rule 77 (tipo -> float .)
    IGUAL_DP        reduce using rule 77 (tipo -> float .)
    DIF             reduce using rule 77 (tipo -> float .)
    MAIOR           reduce using rule 77 (tipo -> float .)
    MENOR           reduce using rule 77 (tipo -> float .)
    MAIOR_IGL       reduce using rule 77 (tipo -> float .)
    LESSEQUAL       reduce using rule 77 (tipo -> float .)
    SMARTMATCH      reduce using rule 77 (tipo -> float .)
    AND_S           reduce using rule 77 (tipo -> float .)
    OR_S            reduce using rule 77 (tipo -> float .)
    XOR_S           reduce using rule 77 (tipo -> float .)
    SAY             reduce using rule 77 (tipo -> float .)
    MY              reduce using rule 77 (tipo -> float .)
    OUR             reduce using rule 77 (tipo -> float .)
    LIST            reduce using rule 77 (tipo -> float .)
    FUNCTION        reduce using rule 77 (tipo -> float .)
    ESCALAR         reduce using rule 77 (tipo -> float .)
    ID              reduce using rule 77 (tipo -> float .)
    IF              reduce using rule 77 (tipo -> float .)
    LOOP            reduce using rule 77 (tipo -> float .)
    FOR             reduce using rule 77 (tipo -> float .)
    INTEGER         reduce using rule 77 (tipo -> float .)
    WHILE           reduce using rule 77 (tipo -> float .)
    ABRE_CHAVE      reduce using rule 77 (tipo -> float .)
    BREAK           reduce using rule 77 (tipo -> float .)
    EXIT            reduce using rule 77 (tipo -> float .)
    LAST            reduce using rule 77 (tipo -> float .)
    NEXT            reduce using rule 77 (tipo -> float .)
    REDO            reduce using rule 77 (tipo -> float .)
    RETURN          reduce using rule 77 (tipo -> float .)
    CONSTANT        reduce using rule 77 (tipo -> float .)
    STATE           reduce using rule 77 (tipo -> float .)
    LET             reduce using rule 77 (tipo -> float .)
    MULTI           reduce using rule 77 (tipo -> float .)
    ONLY            reduce using rule 77 (tipo -> float .)
    IMPORT          reduce using rule 77 (tipo -> float .)
    NEED            reduce using rule 77 (tipo -> float .)
    REQUIRE         reduce using rule 77 (tipo -> float .)
    USE             reduce using rule 77 (tipo -> float .)
    PUSH            reduce using rule 77 (tipo -> float .)
    UNSHIFT         reduce using rule 77 (tipo -> float .)
    SPLICE          reduce using rule 77 (tipo -> float .)
    NOT             reduce using rule 77 (tipo -> float .)
    NEGAC           reduce using rule 77 (tipo -> float .)
    ADC_DP          reduce using rule 77 (tipo -> float .)
    DECREMENTO      reduce using rule 77 (tipo -> float .)
    LPAREN          reduce using rule 77 (tipo -> float .)
    FLOAT           reduce using rule 77 (tipo -> float .)
    STRING          reduce using rule 77 (tipo -> float .)
    BOOLEAN         reduce using rule 77 (tipo -> float .)
    $end            reduce using rule 77 (tipo -> float .)
    PONTO_VIRGULA   reduce using rule 77 (tipo -> float .)
    RPAREN          reduce using rule 77 (tipo -> float .)
    FECHA_CHAVE     reduce using rule 77 (tipo -> float .)
    COMMA           reduce using rule 77 (tipo -> float .)


state 133

    (78) tipo -> string .

    POW             reduce using rule 78 (tipo -> string .)
    MULT            reduce using rule 78 (tipo -> string .)
    DIVIDE          reduce using rule 78 (tipo -> string .)
    DIV             reduce using rule 78 (tipo -> string .)
    DIVI            reduce using rule 78 (tipo -> string .)
    MOD             reduce using rule 78 (tipo -> string .)
    LCM             reduce using rule 78 (tipo -> string .)
    GCD             reduce using rule 78 (tipo -> string .)
    ADC             reduce using rule 78 (tipo -> string .)
    SUB             reduce using rule 78 (tipo -> string .)
    CONC            reduce using rule 78 (tipo -> string .)
    IGUAL_DP        reduce using rule 78 (tipo -> string .)
    DIF             reduce using rule 78 (tipo -> string .)
    MAIOR           reduce using rule 78 (tipo -> string .)
    MENOR           reduce using rule 78 (tipo -> string .)
    MAIOR_IGL       reduce using rule 78 (tipo -> string .)
    LESSEQUAL       reduce using rule 78 (tipo -> string .)
    SMARTMATCH      reduce using rule 78 (tipo -> string .)
    AND_S           reduce using rule 78 (tipo -> string .)
    OR_S            reduce using rule 78 (tipo -> string .)
    XOR_S           reduce using rule 78 (tipo -> string .)
    SAY             reduce using rule 78 (tipo -> string .)
    MY              reduce using rule 78 (tipo -> string .)
    OUR             reduce using rule 78 (tipo -> string .)
    LIST            reduce using rule 78 (tipo -> string .)
    FUNCTION        reduce using rule 78 (tipo -> string .)
    ESCALAR         reduce using rule 78 (tipo -> string .)
    ID              reduce using rule 78 (tipo -> string .)
    IF              reduce using rule 78 (tipo -> string .)
    LOOP            reduce using rule 78 (tipo -> string .)
    FOR             reduce using rule 78 (tipo -> string .)
    INTEGER         reduce using rule 78 (tipo -> string .)
    WHILE           reduce using rule 78 (tipo -> string .)
    ABRE_CHAVE      reduce using rule 78 (tipo -> string .)
    BREAK           reduce using rule 78 (tipo -> string .)
    EXIT            reduce using rule 78 (tipo -> string .)
    LAST            reduce using rule 78 (tipo -> string .)
    NEXT            reduce using rule 78 (tipo -> string .)
    REDO            reduce using rule 78 (tipo -> string .)
    RETURN          reduce using rule 78 (tipo -> string .)
    CONSTANT        reduce using rule 78 (tipo -> string .)
    STATE           reduce using rule 78 (tipo -> string .)
    LET             reduce using rule 78 (tipo -> string .)
    MULTI           reduce using rule 78 (tipo -> string .)
    ONLY            reduce using rule 78 (tipo -> string .)
    IMPORT          reduce using rule 78 (tipo -> string .)
    NEED            reduce using rule 78 (tipo -> string .)
    REQUIRE         reduce using rule 78 (tipo -> string .)
    USE             reduce using rule 78 (tipo -> string .)
    PUSH            reduce using rule 78 (tipo -> string .)
    UNSHIFT         reduce using rule 78 (tipo -> string .)
    SPLICE          reduce using rule 78 (tipo -> string .)
    NOT             reduce using rule 78 (tipo -> string .)
    NEGAC           reduce using rule 78 (tipo -> string .)
    ADC_DP          reduce using rule 78 (tipo -> string .)
    DECREMENTO      reduce using rule 78 (tipo -> string .)
    LPAREN          reduce using rule 78 (tipo -> string .)
    FLOAT           reduce using rule 78 (tipo -> string .)
    STRING          reduce using rule 78 (tipo -> string .)
    BOOLEAN         reduce using rule 78 (tipo -> string .)
    $end            reduce using rule 78 (tipo -> string .)
    PONTO_VIRGULA   reduce using rule 78 (tipo -> string .)
    RPAREN          reduce using rule 78 (tipo -> string .)
    FECHA_CHAVE     reduce using rule 78 (tipo -> string .)
    COMMA           reduce using rule 78 (tipo -> string .)


state 134

    (79) tipo -> boolean .

    POW             reduce using rule 79 (tipo -> boolean .)
    MULT            reduce using rule 79 (tipo -> boolean .)
    DIVIDE          reduce using rule 79 (tipo -> boolean .)
    DIV             reduce using rule 79 (tipo -> boolean .)
    DIVI            reduce using rule 79 (tipo -> boolean .)
    MOD             reduce using rule 79 (tipo -> boolean .)
    LCM             reduce using rule 79 (tipo -> boolean .)
    GCD             reduce using rule 79 (tipo -> boolean .)
    ADC             reduce using rule 79 (tipo -> boolean .)
    SUB             reduce using rule 79 (tipo -> boolean .)
    CONC            reduce using rule 79 (tipo -> boolean .)
    IGUAL_DP        reduce using rule 79 (tipo -> boolean .)
    DIF             reduce using rule 79 (tipo -> boolean .)
    MAIOR           reduce using rule 79 (tipo -> boolean .)
    MENOR           reduce using rule 79 (tipo -> boolean .)
    MAIOR_IGL       reduce using rule 79 (tipo -> boolean .)
    LESSEQUAL       reduce using rule 79 (tipo -> boolean .)
    SMARTMATCH      reduce using rule 79 (tipo -> boolean .)
    AND_S           reduce using rule 79 (tipo -> boolean .)
    OR_S            reduce using rule 79 (tipo -> boolean .)
    XOR_S           reduce using rule 79 (tipo -> boolean .)
    SAY             reduce using rule 79 (tipo -> boolean .)
    MY              reduce using rule 79 (tipo -> boolean .)
    OUR             reduce using rule 79 (tipo -> boolean .)
    LIST            reduce using rule 79 (tipo -> boolean .)
    FUNCTION        reduce using rule 79 (tipo -> boolean .)
    ESCALAR         reduce using rule 79 (tipo -> boolean .)
    ID              reduce using rule 79 (tipo -> boolean .)
    IF              reduce using rule 79 (tipo -> boolean .)
    LOOP            reduce using rule 79 (tipo -> boolean .)
    FOR             reduce using rule 79 (tipo -> boolean .)
    INTEGER         reduce using rule 79 (tipo -> boolean .)
    WHILE           reduce using rule 79 (tipo -> boolean .)
    ABRE_CHAVE      reduce using rule 79 (tipo -> boolean .)
    BREAK           reduce using rule 79 (tipo -> boolean .)
    EXIT            reduce using rule 79 (tipo -> boolean .)
    LAST            reduce using rule 79 (tipo -> boolean .)
    NEXT            reduce using rule 79 (tipo -> boolean .)
    REDO            reduce using rule 79 (tipo -> boolean .)
    RETURN          reduce using rule 79 (tipo -> boolean .)
    CONSTANT        reduce using rule 79 (tipo -> boolean .)
    STATE           reduce using rule 79 (tipo -> boolean .)
    LET             reduce using rule 79 (tipo -> boolean .)
    MULTI           reduce using rule 79 (tipo -> boolean .)
    ONLY            reduce using rule 79 (tipo -> boolean .)
    IMPORT          reduce using rule 79 (tipo -> boolean .)
    NEED            reduce using rule 79 (tipo -> boolean .)
    REQUIRE         reduce using rule 79 (tipo -> boolean .)
    USE             reduce using rule 79 (tipo -> boolean .)
    PUSH            reduce using rule 79 (tipo -> boolean .)
    UNSHIFT         reduce using rule 79 (tipo -> boolean .)
    SPLICE          reduce using rule 79 (tipo -> boolean .)
    NOT             reduce using rule 79 (tipo -> boolean .)
    NEGAC           reduce using rule 79 (tipo -> boolean .)
    ADC_DP          reduce using rule 79 (tipo -> boolean .)
    DECREMENTO      reduce using rule 79 (tipo -> boolean .)
    LPAREN          reduce using rule 79 (tipo -> boolean .)
    FLOAT           reduce using rule 79 (tipo -> boolean .)
    STRING          reduce using rule 79 (tipo -> boolean .)
    BOOLEAN         reduce using rule 79 (tipo -> boolean .)
    $end            reduce using rule 79 (tipo -> boolean .)
    PONTO_VIRGULA   reduce using rule 79 (tipo -> boolean .)
    RPAREN          reduce using rule 79 (tipo -> boolean .)
    FECHA_CHAVE     reduce using rule 79 (tipo -> boolean .)
    COMMA           reduce using rule 79 (tipo -> boolean .)


state 135

    (87) float -> FLOAT .

    POW             reduce using rule 87 (float -> FLOAT .)
    MULT            reduce using rule 87 (float -> FLOAT .)
    DIVIDE          reduce using rule 87 (float -> FLOAT .)
    DIV             reduce using rule 87 (float -> FLOAT .)
    DIVI            reduce using rule 87 (float -> FLOAT .)
    MOD             reduce using rule 87 (float -> FLOAT .)
    LCM             reduce using rule 87 (float -> FLOAT .)
    GCD             reduce using rule 87 (float -> FLOAT .)
    ADC             reduce using rule 87 (float -> FLOAT .)
    SUB             reduce using rule 87 (float -> FLOAT .)
    CONC            reduce using rule 87 (float -> FLOAT .)
    IGUAL_DP        reduce using rule 87 (float -> FLOAT .)
    DIF             reduce using rule 87 (float -> FLOAT .)
    MAIOR           reduce using rule 87 (float -> FLOAT .)
    MENOR           reduce using rule 87 (float -> FLOAT .)
    MAIOR_IGL       reduce using rule 87 (float -> FLOAT .)
    LESSEQUAL       reduce using rule 87 (float -> FLOAT .)
    SMARTMATCH      reduce using rule 87 (float -> FLOAT .)
    AND_S           reduce using rule 87 (float -> FLOAT .)
    OR_S            reduce using rule 87 (float -> FLOAT .)
    XOR_S           reduce using rule 87 (float -> FLOAT .)
    SAY             reduce using rule 87 (float -> FLOAT .)
    MY              reduce using rule 87 (float -> FLOAT .)
    OUR             reduce using rule 87 (float -> FLOAT .)
    LIST            reduce using rule 87 (float -> FLOAT .)
    FUNCTION        reduce using rule 87 (float -> FLOAT .)
    ESCALAR         reduce using rule 87 (float -> FLOAT .)
    ID              reduce using rule 87 (float -> FLOAT .)
    IF              reduce using rule 87 (float -> FLOAT .)
    LOOP            reduce using rule 87 (float -> FLOAT .)
    FOR             reduce using rule 87 (float -> FLOAT .)
    INTEGER         reduce using rule 87 (float -> FLOAT .)
    WHILE           reduce using rule 87 (float -> FLOAT .)
    ABRE_CHAVE      reduce using rule 87 (float -> FLOAT .)
    BREAK           reduce using rule 87 (float -> FLOAT .)
    EXIT            reduce using rule 87 (float -> FLOAT .)
    LAST            reduce using rule 87 (float -> FLOAT .)
    NEXT            reduce using rule 87 (float -> FLOAT .)
    REDO            reduce using rule 87 (float -> FLOAT .)
    RETURN          reduce using rule 87 (float -> FLOAT .)
    CONSTANT        reduce using rule 87 (float -> FLOAT .)
    STATE           reduce using rule 87 (float -> FLOAT .)
    LET             reduce using rule 87 (float -> FLOAT .)
    MULTI           reduce using rule 87 (float -> FLOAT .)
    ONLY            reduce using rule 87 (float -> FLOAT .)
    IMPORT          reduce using rule 87 (float -> FLOAT .)
    NEED            reduce using rule 87 (float -> FLOAT .)
    REQUIRE         reduce using rule 87 (float -> FLOAT .)
    USE             reduce using rule 87 (float -> FLOAT .)
    PUSH            reduce using rule 87 (float -> FLOAT .)
    UNSHIFT         reduce using rule 87 (float -> FLOAT .)
    SPLICE          reduce using rule 87 (float -> FLOAT .)
    NOT             reduce using rule 87 (float -> FLOAT .)
    NEGAC           reduce using rule 87 (float -> FLOAT .)
    ADC_DP          reduce using rule 87 (float -> FLOAT .)
    DECREMENTO      reduce using rule 87 (float -> FLOAT .)
    LPAREN          reduce using rule 87 (float -> FLOAT .)
    FLOAT           reduce using rule 87 (float -> FLOAT .)
    STRING          reduce using rule 87 (float -> FLOAT .)
    BOOLEAN         reduce using rule 87 (float -> FLOAT .)
    $end            reduce using rule 87 (float -> FLOAT .)
    PONTO_VIRGULA   reduce using rule 87 (float -> FLOAT .)
    RPAREN          reduce using rule 87 (float -> FLOAT .)
    FECHA_CHAVE     reduce using rule 87 (float -> FLOAT .)
    COMMA           reduce using rule 87 (float -> FLOAT .)


state 136

    (88) string -> STRING .

    POW             reduce using rule 88 (string -> STRING .)
    MULT            reduce using rule 88 (string -> STRING .)
    DIVIDE          reduce using rule 88 (string -> STRING .)
    DIV             reduce using rule 88 (string -> STRING .)
    DIVI            reduce using rule 88 (string -> STRING .)
    MOD             reduce using rule 88 (string -> STRING .)
    LCM             reduce using rule 88 (string -> STRING .)
    GCD             reduce using rule 88 (string -> STRING .)
    ADC             reduce using rule 88 (string -> STRING .)
    SUB             reduce using rule 88 (string -> STRING .)
    CONC            reduce using rule 88 (string -> STRING .)
    IGUAL_DP        reduce using rule 88 (string -> STRING .)
    DIF             reduce using rule 88 (string -> STRING .)
    MAIOR           reduce using rule 88 (string -> STRING .)
    MENOR           reduce using rule 88 (string -> STRING .)
    MAIOR_IGL       reduce using rule 88 (string -> STRING .)
    LESSEQUAL       reduce using rule 88 (string -> STRING .)
    SMARTMATCH      reduce using rule 88 (string -> STRING .)
    AND_S           reduce using rule 88 (string -> STRING .)
    OR_S            reduce using rule 88 (string -> STRING .)
    XOR_S           reduce using rule 88 (string -> STRING .)
    SAY             reduce using rule 88 (string -> STRING .)
    MY              reduce using rule 88 (string -> STRING .)
    OUR             reduce using rule 88 (string -> STRING .)
    LIST            reduce using rule 88 (string -> STRING .)
    FUNCTION        reduce using rule 88 (string -> STRING .)
    ESCALAR         reduce using rule 88 (string -> STRING .)
    ID              reduce using rule 88 (string -> STRING .)
    IF              reduce using rule 88 (string -> STRING .)
    LOOP            reduce using rule 88 (string -> STRING .)
    FOR             reduce using rule 88 (string -> STRING .)
    INTEGER         reduce using rule 88 (string -> STRING .)
    WHILE           reduce using rule 88 (string -> STRING .)
    ABRE_CHAVE      reduce using rule 88 (string -> STRING .)
    BREAK           reduce using rule 88 (string -> STRING .)
    EXIT            reduce using rule 88 (string -> STRING .)
    LAST            reduce using rule 88 (string -> STRING .)
    NEXT            reduce using rule 88 (string -> STRING .)
    REDO            reduce using rule 88 (string -> STRING .)
    RETURN          reduce using rule 88 (string -> STRING .)
    CONSTANT        reduce using rule 88 (string -> STRING .)
    STATE           reduce using rule 88 (string -> STRING .)
    LET             reduce using rule 88 (string -> STRING .)
    MULTI           reduce using rule 88 (string -> STRING .)
    ONLY            reduce using rule 88 (string -> STRING .)
    IMPORT          reduce using rule 88 (string -> STRING .)
    NEED            reduce using rule 88 (string -> STRING .)
    REQUIRE         reduce using rule 88 (string -> STRING .)
    USE             reduce using rule 88 (string -> STRING .)
    PUSH            reduce using rule 88 (string -> STRING .)
    UNSHIFT         reduce using rule 88 (string -> STRING .)
    SPLICE          reduce using rule 88 (string -> STRING .)
    NOT             reduce using rule 88 (string -> STRING .)
    NEGAC           reduce using rule 88 (string -> STRING .)
    ADC_DP          reduce using rule 88 (string -> STRING .)
    DECREMENTO      reduce using rule 88 (string -> STRING .)
    LPAREN          reduce using rule 88 (string -> STRING .)
    FLOAT           reduce using rule 88 (string -> STRING .)
    STRING          reduce using rule 88 (string -> STRING .)
    BOOLEAN         reduce using rule 88 (string -> STRING .)
    $end            reduce using rule 88 (string -> STRING .)
    PONTO_VIRGULA   reduce using rule 88 (string -> STRING .)
    RPAREN          reduce using rule 88 (string -> STRING .)
    FECHA_CHAVE     reduce using rule 88 (string -> STRING .)
    COMMA           reduce using rule 88 (string -> STRING .)


state 137

    (2) lista_declaracoes -> lista_declaracoes declaracoes .

    SAY             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    MY              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    OUR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LIST            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FUNCTION        reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ESCALAR         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ID              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    IF              reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LOOP            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FOR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    INTEGER         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    WHILE           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ABRE_CHAVE      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    BREAK           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    EXIT            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LAST            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEXT            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    REDO            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    RETURN          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    CONSTANT        reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STATE           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LET             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    MULTI           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ONLY            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    IMPORT          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEED            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    REQUIRE         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    USE             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    PUSH            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    UNSHIFT         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    SPLICE          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NOT             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    NEGAC           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    ADC_DP          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    DECREMENTO      reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    LPAREN          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FLOAT           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    STRING          reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    BOOLEAN         reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    $end            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)
    FECHA_CHAVE     reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracoes .)


state 138

    (142) declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .

    SAY             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    MY              reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    OUR             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LIST            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FUNCTION        reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ID              reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IF              reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LOOP            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FOR             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    INTEGER         reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    WHILE           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BREAK           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    EXIT            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LAST            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEXT            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    REDO            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    RETURN          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    CONSTANT        reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STATE           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LET             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    MULTI           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ONLY            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    IMPORT          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEED            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    REQUIRE         reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    USE             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    PUSH            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    SPLICE          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NOT             reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    NEGAC           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    LPAREN          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FLOAT           reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    STRING          reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    $end            reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 142 (declaracao_de_atribuicao -> atribuicao PONTO_VIRGULA .)


state 139

    (105) say -> SAY say_func . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 215


state 140

    (106) say_func -> exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 106 (say_func -> exp_2 .)
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 141

    (107) say_func -> LIST .

    PONTO_VIRGULA   reduce using rule 107 (say_func -> LIST .)


state 142

    (73) completo -> chamada_funcao .

    POW             reduce using rule 73 (completo -> chamada_funcao .)
    MULT            reduce using rule 73 (completo -> chamada_funcao .)
    DIVIDE          reduce using rule 73 (completo -> chamada_funcao .)
    DIV             reduce using rule 73 (completo -> chamada_funcao .)
    DIVI            reduce using rule 73 (completo -> chamada_funcao .)
    MOD             reduce using rule 73 (completo -> chamada_funcao .)
    LCM             reduce using rule 73 (completo -> chamada_funcao .)
    GCD             reduce using rule 73 (completo -> chamada_funcao .)
    ADC             reduce using rule 73 (completo -> chamada_funcao .)
    SUB             reduce using rule 73 (completo -> chamada_funcao .)
    CONC            reduce using rule 73 (completo -> chamada_funcao .)
    IGUAL_DP        reduce using rule 73 (completo -> chamada_funcao .)
    DIF             reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR           reduce using rule 73 (completo -> chamada_funcao .)
    MENOR           reduce using rule 73 (completo -> chamada_funcao .)
    MAIOR_IGL       reduce using rule 73 (completo -> chamada_funcao .)
    LESSEQUAL       reduce using rule 73 (completo -> chamada_funcao .)
    SMARTMATCH      reduce using rule 73 (completo -> chamada_funcao .)
    AND_S           reduce using rule 73 (completo -> chamada_funcao .)
    OR_S            reduce using rule 73 (completo -> chamada_funcao .)
    XOR_S           reduce using rule 73 (completo -> chamada_funcao .)
    PONTO_VIRGULA   reduce using rule 73 (completo -> chamada_funcao .)
    RPAREN          reduce using rule 73 (completo -> chamada_funcao .)
    ABRE_CHAVE      reduce using rule 73 (completo -> chamada_funcao .)
    SAY             reduce using rule 73 (completo -> chamada_funcao .)
    MY              reduce using rule 73 (completo -> chamada_funcao .)
    OUR             reduce using rule 73 (completo -> chamada_funcao .)
    LIST            reduce using rule 73 (completo -> chamada_funcao .)
    FUNCTION        reduce using rule 73 (completo -> chamada_funcao .)
    ESCALAR         reduce using rule 73 (completo -> chamada_funcao .)
    ID              reduce using rule 73 (completo -> chamada_funcao .)
    IF              reduce using rule 73 (completo -> chamada_funcao .)
    LOOP            reduce using rule 73 (completo -> chamada_funcao .)
    FOR             reduce using rule 73 (completo -> chamada_funcao .)
    INTEGER         reduce using rule 73 (completo -> chamada_funcao .)
    WHILE           reduce using rule 73 (completo -> chamada_funcao .)
    BREAK           reduce using rule 73 (completo -> chamada_funcao .)
    EXIT            reduce using rule 73 (completo -> chamada_funcao .)
    LAST            reduce using rule 73 (completo -> chamada_funcao .)
    NEXT            reduce using rule 73 (completo -> chamada_funcao .)
    REDO            reduce using rule 73 (completo -> chamada_funcao .)
    RETURN          reduce using rule 73 (completo -> chamada_funcao .)
    CONSTANT        reduce using rule 73 (completo -> chamada_funcao .)
    STATE           reduce using rule 73 (completo -> chamada_funcao .)
    LET             reduce using rule 73 (completo -> chamada_funcao .)
    MULTI           reduce using rule 73 (completo -> chamada_funcao .)
    ONLY            reduce using rule 73 (completo -> chamada_funcao .)
    IMPORT          reduce using rule 73 (completo -> chamada_funcao .)
    NEED            reduce using rule 73 (completo -> chamada_funcao .)
    REQUIRE         reduce using rule 73 (completo -> chamada_funcao .)
    USE             reduce using rule 73 (completo -> chamada_funcao .)
    PUSH            reduce using rule 73 (completo -> chamada_funcao .)
    UNSHIFT         reduce using rule 73 (completo -> chamada_funcao .)
    SPLICE          reduce using rule 73 (completo -> chamada_funcao .)
    NOT             reduce using rule 73 (completo -> chamada_funcao .)
    NEGAC           reduce using rule 73 (completo -> chamada_funcao .)
    ADC_DP          reduce using rule 73 (completo -> chamada_funcao .)
    DECREMENTO      reduce using rule 73 (completo -> chamada_funcao .)
    LPAREN          reduce using rule 73 (completo -> chamada_funcao .)
    FLOAT           reduce using rule 73 (completo -> chamada_funcao .)
    STRING          reduce using rule 73 (completo -> chamada_funcao .)
    BOOLEAN         reduce using rule 73 (completo -> chamada_funcao .)
    $end            reduce using rule 73 (completo -> chamada_funcao .)
    FECHA_CHAVE     reduce using rule 73 (completo -> chamada_funcao .)
    COMMA           reduce using rule 73 (completo -> chamada_funcao .)


state 143

    (74) completo -> chamada_funcao_sem_parametro .

    POW             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MULT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVIDE          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIV             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIVI            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MOD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LCM             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    GCD             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ADC             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SUB             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    CONC            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IGUAL_DP        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DIF             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MENOR           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MAIOR_IGL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LESSEQUAL       reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SMARTMATCH      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    AND_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    OR_S            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    XOR_S           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    PONTO_VIRGULA   reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    RPAREN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ABRE_CHAVE      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SAY             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MY              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    OUR             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LIST            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FUNCTION        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ESCALAR         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ID              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IF              reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LOOP            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FOR             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    INTEGER         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    WHILE           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    BREAK           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    EXIT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LAST            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEXT            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    REDO            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    RETURN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    CONSTANT        reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    STATE           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LET             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    MULTI           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ONLY            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    IMPORT          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEED            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    REQUIRE         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    USE             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    PUSH            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    UNSHIFT         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    SPLICE          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NOT             reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    NEGAC           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    ADC_DP          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    DECREMENTO      reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    LPAREN          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FLOAT           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    STRING          reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    BOOLEAN         reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    $end            reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    FECHA_CHAVE     reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)
    COMMA           reduce using rule 74 (completo -> chamada_funcao_sem_parametro .)


state 144

    (90) escalar -> ESCALAR .

    ADC_DP          reduce using rule 90 (escalar -> ESCALAR .)
    DECREMENTO      reduce using rule 90 (escalar -> ESCALAR .)
    POW             reduce using rule 90 (escalar -> ESCALAR .)
    MULT            reduce using rule 90 (escalar -> ESCALAR .)
    DIVIDE          reduce using rule 90 (escalar -> ESCALAR .)
    DIV             reduce using rule 90 (escalar -> ESCALAR .)
    DIVI            reduce using rule 90 (escalar -> ESCALAR .)
    MOD             reduce using rule 90 (escalar -> ESCALAR .)
    LCM             reduce using rule 90 (escalar -> ESCALAR .)
    GCD             reduce using rule 90 (escalar -> ESCALAR .)
    ADC             reduce using rule 90 (escalar -> ESCALAR .)
    SUB             reduce using rule 90 (escalar -> ESCALAR .)
    CONC            reduce using rule 90 (escalar -> ESCALAR .)
    IGUAL_DP        reduce using rule 90 (escalar -> ESCALAR .)
    DIF             reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR           reduce using rule 90 (escalar -> ESCALAR .)
    MENOR           reduce using rule 90 (escalar -> ESCALAR .)
    MAIOR_IGL       reduce using rule 90 (escalar -> ESCALAR .)
    LESSEQUAL       reduce using rule 90 (escalar -> ESCALAR .)
    SMARTMATCH      reduce using rule 90 (escalar -> ESCALAR .)
    AND_S           reduce using rule 90 (escalar -> ESCALAR .)
    OR_S            reduce using rule 90 (escalar -> ESCALAR .)
    XOR_S           reduce using rule 90 (escalar -> ESCALAR .)
    PONTO_VIRGULA   reduce using rule 90 (escalar -> ESCALAR .)
    RPAREN          reduce using rule 90 (escalar -> ESCALAR .)
    ABRE_CHAVE      reduce using rule 90 (escalar -> ESCALAR .)
    SAY             reduce using rule 90 (escalar -> ESCALAR .)
    MY              reduce using rule 90 (escalar -> ESCALAR .)
    OUR             reduce using rule 90 (escalar -> ESCALAR .)
    LIST            reduce using rule 90 (escalar -> ESCALAR .)
    FUNCTION        reduce using rule 90 (escalar -> ESCALAR .)
    ESCALAR         reduce using rule 90 (escalar -> ESCALAR .)
    ID              reduce using rule 90 (escalar -> ESCALAR .)
    IF              reduce using rule 90 (escalar -> ESCALAR .)
    LOOP            reduce using rule 90 (escalar -> ESCALAR .)
    FOR             reduce using rule 90 (escalar -> ESCALAR .)
    INTEGER         reduce using rule 90 (escalar -> ESCALAR .)
    WHILE           reduce using rule 90 (escalar -> ESCALAR .)
    BREAK           reduce using rule 90 (escalar -> ESCALAR .)
    EXIT            reduce using rule 90 (escalar -> ESCALAR .)
    LAST            reduce using rule 90 (escalar -> ESCALAR .)
    NEXT            reduce using rule 90 (escalar -> ESCALAR .)
    REDO            reduce using rule 90 (escalar -> ESCALAR .)
    RETURN          reduce using rule 90 (escalar -> ESCALAR .)
    CONSTANT        reduce using rule 90 (escalar -> ESCALAR .)
    STATE           reduce using rule 90 (escalar -> ESCALAR .)
    LET             reduce using rule 90 (escalar -> ESCALAR .)
    MULTI           reduce using rule 90 (escalar -> ESCALAR .)
    ONLY            reduce using rule 90 (escalar -> ESCALAR .)
    IMPORT          reduce using rule 90 (escalar -> ESCALAR .)
    NEED            reduce using rule 90 (escalar -> ESCALAR .)
    REQUIRE         reduce using rule 90 (escalar -> ESCALAR .)
    USE             reduce using rule 90 (escalar -> ESCALAR .)
    PUSH            reduce using rule 90 (escalar -> ESCALAR .)
    UNSHIFT         reduce using rule 90 (escalar -> ESCALAR .)
    SPLICE          reduce using rule 90 (escalar -> ESCALAR .)
    NOT             reduce using rule 90 (escalar -> ESCALAR .)
    NEGAC           reduce using rule 90 (escalar -> ESCALAR .)
    LPAREN          reduce using rule 90 (escalar -> ESCALAR .)
    FLOAT           reduce using rule 90 (escalar -> ESCALAR .)
    STRING          reduce using rule 90 (escalar -> ESCALAR .)
    BOOLEAN         reduce using rule 90 (escalar -> ESCALAR .)
    $end            reduce using rule 90 (escalar -> ESCALAR .)
    FECHA_CHAVE     reduce using rule 90 (escalar -> ESCALAR .)
    COMMA           reduce using rule 90 (escalar -> ESCALAR .)


state 145

    (86) inteiro -> INTEGER .

    POW             reduce using rule 86 (inteiro -> INTEGER .)
    MULT            reduce using rule 86 (inteiro -> INTEGER .)
    DIVIDE          reduce using rule 86 (inteiro -> INTEGER .)
    DIV             reduce using rule 86 (inteiro -> INTEGER .)
    DIVI            reduce using rule 86 (inteiro -> INTEGER .)
    MOD             reduce using rule 86 (inteiro -> INTEGER .)
    LCM             reduce using rule 86 (inteiro -> INTEGER .)
    GCD             reduce using rule 86 (inteiro -> INTEGER .)
    ADC             reduce using rule 86 (inteiro -> INTEGER .)
    SUB             reduce using rule 86 (inteiro -> INTEGER .)
    CONC            reduce using rule 86 (inteiro -> INTEGER .)
    IGUAL_DP        reduce using rule 86 (inteiro -> INTEGER .)
    DIF             reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR           reduce using rule 86 (inteiro -> INTEGER .)
    MENOR           reduce using rule 86 (inteiro -> INTEGER .)
    MAIOR_IGL       reduce using rule 86 (inteiro -> INTEGER .)
    LESSEQUAL       reduce using rule 86 (inteiro -> INTEGER .)
    SMARTMATCH      reduce using rule 86 (inteiro -> INTEGER .)
    AND_S           reduce using rule 86 (inteiro -> INTEGER .)
    OR_S            reduce using rule 86 (inteiro -> INTEGER .)
    XOR_S           reduce using rule 86 (inteiro -> INTEGER .)
    PONTO_VIRGULA   reduce using rule 86 (inteiro -> INTEGER .)
    RPAREN          reduce using rule 86 (inteiro -> INTEGER .)
    ABRE_CHAVE      reduce using rule 86 (inteiro -> INTEGER .)
    INTERPOLACAO    reduce using rule 86 (inteiro -> INTEGER .)
    SAY             reduce using rule 86 (inteiro -> INTEGER .)
    MY              reduce using rule 86 (inteiro -> INTEGER .)
    OUR             reduce using rule 86 (inteiro -> INTEGER .)
    LIST            reduce using rule 86 (inteiro -> INTEGER .)
    FUNCTION        reduce using rule 86 (inteiro -> INTEGER .)
    ESCALAR         reduce using rule 86 (inteiro -> INTEGER .)
    ID              reduce using rule 86 (inteiro -> INTEGER .)
    IF              reduce using rule 86 (inteiro -> INTEGER .)
    LOOP            reduce using rule 86 (inteiro -> INTEGER .)
    FOR             reduce using rule 86 (inteiro -> INTEGER .)
    INTEGER         reduce using rule 86 (inteiro -> INTEGER .)
    WHILE           reduce using rule 86 (inteiro -> INTEGER .)
    BREAK           reduce using rule 86 (inteiro -> INTEGER .)
    EXIT            reduce using rule 86 (inteiro -> INTEGER .)
    LAST            reduce using rule 86 (inteiro -> INTEGER .)
    NEXT            reduce using rule 86 (inteiro -> INTEGER .)
    REDO            reduce using rule 86 (inteiro -> INTEGER .)
    RETURN          reduce using rule 86 (inteiro -> INTEGER .)
    CONSTANT        reduce using rule 86 (inteiro -> INTEGER .)
    STATE           reduce using rule 86 (inteiro -> INTEGER .)
    LET             reduce using rule 86 (inteiro -> INTEGER .)
    MULTI           reduce using rule 86 (inteiro -> INTEGER .)
    ONLY            reduce using rule 86 (inteiro -> INTEGER .)
    IMPORT          reduce using rule 86 (inteiro -> INTEGER .)
    NEED            reduce using rule 86 (inteiro -> INTEGER .)
    REQUIRE         reduce using rule 86 (inteiro -> INTEGER .)
    USE             reduce using rule 86 (inteiro -> INTEGER .)
    PUSH            reduce using rule 86 (inteiro -> INTEGER .)
    UNSHIFT         reduce using rule 86 (inteiro -> INTEGER .)
    SPLICE          reduce using rule 86 (inteiro -> INTEGER .)
    NOT             reduce using rule 86 (inteiro -> INTEGER .)
    NEGAC           reduce using rule 86 (inteiro -> INTEGER .)
    ADC_DP          reduce using rule 86 (inteiro -> INTEGER .)
    DECREMENTO      reduce using rule 86 (inteiro -> INTEGER .)
    LPAREN          reduce using rule 86 (inteiro -> INTEGER .)
    FLOAT           reduce using rule 86 (inteiro -> INTEGER .)
    STRING          reduce using rule 86 (inteiro -> INTEGER .)
    BOOLEAN         reduce using rule 86 (inteiro -> INTEGER .)
    $end            reduce using rule 86 (inteiro -> INTEGER .)
    FECHA_CHAVE     reduce using rule 86 (inteiro -> INTEGER .)
    COMMA           reduce using rule 86 (inteiro -> INTEGER .)
    SETA            reduce using rule 86 (inteiro -> INTEGER .)


state 146

    (145) declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .

    SAY             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    MY              reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    OUR             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LIST            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FUNCTION        reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ESCALAR         reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ID              reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    IF              reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LOOP            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FOR             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    INTEGER         reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    WHILE           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    BREAK           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    EXIT            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LAST            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEXT            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    REDO            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    RETURN          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    CONSTANT        reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    STATE           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LET             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    MULTI           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ONLY            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    IMPORT          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEED            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    REQUIRE         reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    USE             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    PUSH            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    SPLICE          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NOT             reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    NEGAC           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    ADC_DP          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    LPAREN          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FLOAT           reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    STRING          reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    $end            reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 145 (declaracao_de_chamada_funcao -> chamada_funcao PONTO_VIRGULA .)


state 147

    (146) declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .

    SAY             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    MY              reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    OUR             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LIST            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FUNCTION        reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ESCALAR         reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ID              reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    IF              reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LOOP            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FOR             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    INTEGER         reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    WHILE           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    BREAK           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    EXIT            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LAST            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NEXT            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    REDO            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    RETURN          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    CONSTANT        reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    STATE           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LET             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    MULTI           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ONLY            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    IMPORT          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NEED            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    REQUIRE         reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    USE             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    PUSH            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    SPLICE          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NOT             reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    NEGAC           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    ADC_DP          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    LPAREN          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FLOAT           reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    STRING          reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    $end            reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 146 (declaracao_de_chamada_funcao -> chamada_funcao_sem_parametro PONTO_VIRGULA .)


state 148

    (9) or -> exp_2 OR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_3                          shift and go to state 216
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 149

    (10) xor -> exp_2 XOR_S . exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_3                          shift and go to state 217
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 150

    (91) declaracao_escalar_MY -> MY tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 218


state 151

    (94) declaracao_lista_MY -> MY LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 219


state 152

    (80) tipo_opicional -> tipo_opicional_int .

    ESCALAR         reduce using rule 80 (tipo_opicional -> tipo_opicional_int .)


state 153

    (81) tipo_opicional -> tipo_opicional_str .

    ESCALAR         reduce using rule 81 (tipo_opicional -> tipo_opicional_str .)


state 154

    (82) tipo_opicional -> empty .

    ESCALAR         reduce using rule 82 (tipo_opicional -> empty .)


state 155

    (83) tipo_opicional_int -> INT .

    ESCALAR         reduce using rule 83 (tipo_opicional_int -> INT .)


state 156

    (84) tipo_opicional_str -> STR .

    ESCALAR         reduce using rule 84 (tipo_opicional_str -> STR .)


state 157

    (112) atribuicao -> ESCALAR IGUAL . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 220
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 158

    (92) declaracao_escalar_OUR -> OUR tipo_opicional . ESCALAR IGUAL exp_2 PONTO_VIRGULA

    ESCALAR         shift and go to state 221


state 159

    (95) declaracao_lista_OUR -> OUR LIST . IGUAL lista_valores PONTO_VIRGULA

    IGUAL           shift and go to state 222


state 160

    (93) declaracao_lista -> LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 223
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 161

    (108) funcao_com_params -> FUNCTION ID . LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> FUNCTION ID . LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    LPAREN          shift and go to state 226


state 162

    (113) chamada_funcao -> ID LPAREN . chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> ID LPAREN . RPAREN
    (115) chamada_funcao_auxiliar -> . chamada_funcao_auxiliar COMMA exp_2
    (116) chamada_funcao_auxiliar -> . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    RPAREN          shift and go to state 228
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    chamada_funcao_auxiliar        shift and go to state 227
    exp_2                          shift and go to state 229
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 163

    (71) parenteses -> LPAREN exp_2 . RPAREN
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          shift and go to state 230
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 164

    (123) bloco -> ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 231
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 165

    (117) condicional -> IF exp_2 . bloco
    (118) condicional -> IF exp_2 . bloco ELSE bloco
    (119) condicional -> IF exp_2 . bloco lista_elsif
    (120) condicional -> IF exp_2 . bloco lista_elsif ELSE bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149
    ABRE_CHAVE      shift and go to state 62

    bloco                          shift and go to state 232

state 166

    (103) loop -> LOOP LPAREN . declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA

    MY              shift and go to state 234

    declaracao_escalar_MY          shift and go to state 233

state 167

    (104) loop_sem_condicao -> LOOP ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes              shift and go to state 235
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 168

    (99) loop_for -> FOR inteiro . INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    INTERPOLACAO    shift and go to state 236


state 169

    (100) loop_for_com_lista -> FOR LIST . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 237


state 170

    (101) loop_times -> INTEGER TIMES . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 238


state 171

    (102) loop_while -> WHILE exp_2 . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    ABRE_CHAVE      shift and go to state 239
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 172

    (13) and -> exp_3 AND_S . exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_4                          shift and go to state 240
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 173

    (174) declaracao_break -> BREAK PONTO_VIRGULA .

    SAY             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    MY              reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    OUR             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LIST            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FUNCTION        reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ESCALAR         reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ID              reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    IF              reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LOOP            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FOR             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    INTEGER         reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    WHILE           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    BREAK           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    EXIT            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LAST            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEXT            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    REDO            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    RETURN          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    CONSTANT        reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    STATE           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LET             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    MULTI           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ONLY            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    IMPORT          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEED            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    REQUIRE         reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    USE             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    PUSH            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    SPLICE          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NOT             reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    NEGAC           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    ADC_DP          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    LPAREN          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FLOAT           reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    STRING          reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    $end            reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 174 (declaracao_break -> BREAK PONTO_VIRGULA .)


state 174

    (175) declaracao_exit -> EXIT exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 241
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 175

    (176) declaracao_last -> LAST PONTO_VIRGULA .

    SAY             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    MY              reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    OUR             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    LIST            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    FUNCTION        reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    ESCALAR         reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    ID              reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    IF              reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    LOOP            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    FOR             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    INTEGER         reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    WHILE           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    BREAK           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    EXIT            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    LAST            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEXT            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    REDO            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    RETURN          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    CONSTANT        reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    STATE           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    LET             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    MULTI           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    ONLY            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    IMPORT          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEED            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    REQUIRE         reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    USE             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    PUSH            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    SPLICE          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    NOT             reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    NEGAC           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    ADC_DP          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    LPAREN          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    FLOAT           reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    STRING          reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    $end            reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 176 (declaracao_last -> LAST PONTO_VIRGULA .)


state 176

    (177) declaracao_next -> NEXT PONTO_VIRGULA .

    SAY             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    MY              reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    OUR             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LIST            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FUNCTION        reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ESCALAR         reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ID              reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    IF              reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LOOP            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FOR             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    INTEGER         reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    WHILE           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    BREAK           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    EXIT            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LAST            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEXT            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    REDO            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    RETURN          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    CONSTANT        reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    STATE           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LET             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    MULTI           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ONLY            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    IMPORT          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEED            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    REQUIRE         reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    USE             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    PUSH            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    SPLICE          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NOT             reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    NEGAC           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    ADC_DP          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    LPAREN          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FLOAT           reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    STRING          reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    $end            reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 177 (declaracao_next -> NEXT PONTO_VIRGULA .)


state 177

    (178) declaracao_redo -> REDO IF . BOOLEAN PONTO_VIRGULA

    BOOLEAN         shift and go to state 242


state 178

    (179) declaracao_return -> RETURN exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 243
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 179

    (180) declaracao_constant -> CONSTANT ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 244


state 180

    (181) declaracao_state -> STATE ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 245


state 181

    (182) declaracao_let -> LET ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 246


state 182

    (183) declaracao_multi -> MULTI declaracao_de_funcao .

    SAY             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    MY              reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    OUR             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    LIST            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    FUNCTION        reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    ESCALAR         reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    ID              reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    IF              reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    LOOP            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    FOR             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    INTEGER         reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    WHILE           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    BREAK           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    EXIT            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    LAST            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    NEXT            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    REDO            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    RETURN          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    CONSTANT        reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    STATE           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    LET             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    MULTI           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    ONLY            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    IMPORT          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    NEED            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    REQUIRE         reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    USE             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    PUSH            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    UNSHIFT         reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    SPLICE          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    NOT             reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    NEGAC           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    ADC_DP          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    DECREMENTO      reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    LPAREN          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    FLOAT           reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    STRING          reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    BOOLEAN         reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    $end            reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 183 (declaracao_multi -> MULTI declaracao_de_funcao .)


state 183

    (184) declaracao_only -> ONLY declaracao_de_funcao .

    SAY             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    MY              reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    OUR             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    LIST            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    FUNCTION        reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    ESCALAR         reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    ID              reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    IF              reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    LOOP            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    FOR             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    INTEGER         reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    WHILE           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    ABRE_CHAVE      reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    BREAK           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    EXIT            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    LAST            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    NEXT            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    REDO            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    RETURN          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    CONSTANT        reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    STATE           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    LET             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    MULTI           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    ONLY            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    IMPORT          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    NEED            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    REQUIRE         reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    USE             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    PUSH            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    UNSHIFT         reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    SPLICE          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    NOT             reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    NEGAC           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    ADC_DP          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    DECREMENTO      reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    LPAREN          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    FLOAT           reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    STRING          reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    BOOLEAN         reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    $end            reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)
    FECHA_CHAVE     reduce using rule 184 (declaracao_only -> ONLY declaracao_de_funcao .)


state 184

    (185) import -> IMPORT ID . MENOR ID MAIOR PONTO_VIRGULA

    MENOR           shift and go to state 247


state 185

    (186) need -> NEED ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 248


state 186

    (187) require -> REQUIRE ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 249


state 187

    (188) use -> USE ID . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 250


state 188

    (189) push -> PUSH LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 251


state 189

    (190) unshift -> UNSHIFT LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 252


state 190

    (191) splice -> SPLICE LIST . COMMA lista_valores PONTO_VIRGULA

    COMMA           shift and go to state 253


state 191

    (22) igual_dp -> exp_4 IGUAL_DP . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 254
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 192

    (23) dif -> exp_4 DIF . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 255
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 193

    (24) maior -> exp_4 MAIOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 256
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 194

    (25) menor -> exp_4 MENOR . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 257
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 195

    (26) maior_igual -> exp_4 MAIOR_IGL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 258
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 196

    (27) menor_igual -> exp_4 LESSEQUAL . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 259
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 197

    (28) smartmatch -> exp_4 SMARTMATCH . exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_5                          shift and go to state 260
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 198

    (33) adicao -> exp_5 ADC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_6                          shift and go to state 261
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 199

    (34) subtracao -> exp_5 SUB . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_6                          shift and go to state 262
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 200

    (35) conc -> exp_5 CONC . exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_6                          shift and go to state 263
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 201

    (44) mult -> exp_6 MULT . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 264
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 202

    (45) divide -> exp_6 DIVIDE . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 265
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 203

    (46) div -> exp_6 DIV . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 266
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 204

    (47) divi -> exp_6 DIVI . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 267
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 205

    (48) mod -> exp_6 MOD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 268
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 206

    (49) lcm -> exp_6 LCM . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 269
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 207

    (50) gcd -> exp_6 GCD . exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_7                          shift and go to state 270
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 208

    (53) pow -> exp_7 POW . exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_8                          shift and go to state 271
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 209

    (57) not_op -> NOT exp_8 .

    POW             reduce using rule 57 (not_op -> NOT exp_8 .)
    MULT            reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVIDE          reduce using rule 57 (not_op -> NOT exp_8 .)
    DIV             reduce using rule 57 (not_op -> NOT exp_8 .)
    DIVI            reduce using rule 57 (not_op -> NOT exp_8 .)
    MOD             reduce using rule 57 (not_op -> NOT exp_8 .)
    LCM             reduce using rule 57 (not_op -> NOT exp_8 .)
    GCD             reduce using rule 57 (not_op -> NOT exp_8 .)
    ADC             reduce using rule 57 (not_op -> NOT exp_8 .)
    SUB             reduce using rule 57 (not_op -> NOT exp_8 .)
    CONC            reduce using rule 57 (not_op -> NOT exp_8 .)
    IGUAL_DP        reduce using rule 57 (not_op -> NOT exp_8 .)
    DIF             reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MENOR           reduce using rule 57 (not_op -> NOT exp_8 .)
    MAIOR_IGL       reduce using rule 57 (not_op -> NOT exp_8 .)
    LESSEQUAL       reduce using rule 57 (not_op -> NOT exp_8 .)
    SMARTMATCH      reduce using rule 57 (not_op -> NOT exp_8 .)
    AND_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    OR_S            reduce using rule 57 (not_op -> NOT exp_8 .)
    XOR_S           reduce using rule 57 (not_op -> NOT exp_8 .)
    SAY             reduce using rule 57 (not_op -> NOT exp_8 .)
    MY              reduce using rule 57 (not_op -> NOT exp_8 .)
    OUR             reduce using rule 57 (not_op -> NOT exp_8 .)
    LIST            reduce using rule 57 (not_op -> NOT exp_8 .)
    FUNCTION        reduce using rule 57 (not_op -> NOT exp_8 .)
    ESCALAR         reduce using rule 57 (not_op -> NOT exp_8 .)
    ID              reduce using rule 57 (not_op -> NOT exp_8 .)
    IF              reduce using rule 57 (not_op -> NOT exp_8 .)
    LOOP            reduce using rule 57 (not_op -> NOT exp_8 .)
    FOR             reduce using rule 57 (not_op -> NOT exp_8 .)
    INTEGER         reduce using rule 57 (not_op -> NOT exp_8 .)
    WHILE           reduce using rule 57 (not_op -> NOT exp_8 .)
    ABRE_CHAVE      reduce using rule 57 (not_op -> NOT exp_8 .)
    BREAK           reduce using rule 57 (not_op -> NOT exp_8 .)
    EXIT            reduce using rule 57 (not_op -> NOT exp_8 .)
    LAST            reduce using rule 57 (not_op -> NOT exp_8 .)
    NEXT            reduce using rule 57 (not_op -> NOT exp_8 .)
    REDO            reduce using rule 57 (not_op -> NOT exp_8 .)
    RETURN          reduce using rule 57 (not_op -> NOT exp_8 .)
    CONSTANT        reduce using rule 57 (not_op -> NOT exp_8 .)
    STATE           reduce using rule 57 (not_op -> NOT exp_8 .)
    LET             reduce using rule 57 (not_op -> NOT exp_8 .)
    MULTI           reduce using rule 57 (not_op -> NOT exp_8 .)
    ONLY            reduce using rule 57 (not_op -> NOT exp_8 .)
    IMPORT          reduce using rule 57 (not_op -> NOT exp_8 .)
    NEED            reduce using rule 57 (not_op -> NOT exp_8 .)
    REQUIRE         reduce using rule 57 (not_op -> NOT exp_8 .)
    USE             reduce using rule 57 (not_op -> NOT exp_8 .)
    PUSH            reduce using rule 57 (not_op -> NOT exp_8 .)
    UNSHIFT         reduce using rule 57 (not_op -> NOT exp_8 .)
    SPLICE          reduce using rule 57 (not_op -> NOT exp_8 .)
    NOT             reduce using rule 57 (not_op -> NOT exp_8 .)
    NEGAC           reduce using rule 57 (not_op -> NOT exp_8 .)
    ADC_DP          reduce using rule 57 (not_op -> NOT exp_8 .)
    DECREMENTO      reduce using rule 57 (not_op -> NOT exp_8 .)
    LPAREN          reduce using rule 57 (not_op -> NOT exp_8 .)
    FLOAT           reduce using rule 57 (not_op -> NOT exp_8 .)
    STRING          reduce using rule 57 (not_op -> NOT exp_8 .)
    BOOLEAN         reduce using rule 57 (not_op -> NOT exp_8 .)
    $end            reduce using rule 57 (not_op -> NOT exp_8 .)
    PONTO_VIRGULA   reduce using rule 57 (not_op -> NOT exp_8 .)
    RPAREN          reduce using rule 57 (not_op -> NOT exp_8 .)
    FECHA_CHAVE     reduce using rule 57 (not_op -> NOT exp_8 .)
    COMMA           reduce using rule 57 (not_op -> NOT exp_8 .)


state 210

    (58) not_s -> NEGAC exp_8 .

    POW             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MULT            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVIDE          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIV             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIVI            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MOD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LCM             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    GCD             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ADC             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SUB             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    CONC            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    IGUAL_DP        reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DIF             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MENOR           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MAIOR_IGL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LESSEQUAL       reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SMARTMATCH      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    AND_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    OR_S            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    XOR_S           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SAY             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MY              reduce using rule 58 (not_s -> NEGAC exp_8 .)
    OUR             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LIST            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    FUNCTION        reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ESCALAR         reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ID              reduce using rule 58 (not_s -> NEGAC exp_8 .)
    IF              reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LOOP            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    FOR             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    INTEGER         reduce using rule 58 (not_s -> NEGAC exp_8 .)
    WHILE           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ABRE_CHAVE      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    BREAK           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    EXIT            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LAST            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    NEXT            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    REDO            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    RETURN          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    CONSTANT        reduce using rule 58 (not_s -> NEGAC exp_8 .)
    STATE           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LET             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    MULTI           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ONLY            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    IMPORT          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    NEED            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    REQUIRE         reduce using rule 58 (not_s -> NEGAC exp_8 .)
    USE             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    PUSH            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    UNSHIFT         reduce using rule 58 (not_s -> NEGAC exp_8 .)
    SPLICE          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    NOT             reduce using rule 58 (not_s -> NEGAC exp_8 .)
    NEGAC           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    ADC_DP          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    DECREMENTO      reduce using rule 58 (not_s -> NEGAC exp_8 .)
    LPAREN          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    FLOAT           reduce using rule 58 (not_s -> NEGAC exp_8 .)
    STRING          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    BOOLEAN         reduce using rule 58 (not_s -> NEGAC exp_8 .)
    $end            reduce using rule 58 (not_s -> NEGAC exp_8 .)
    PONTO_VIRGULA   reduce using rule 58 (not_s -> NEGAC exp_8 .)
    RPAREN          reduce using rule 58 (not_s -> NEGAC exp_8 .)
    FECHA_CHAVE     reduce using rule 58 (not_s -> NEGAC exp_8 .)
    COMMA           reduce using rule 58 (not_s -> NEGAC exp_8 .)


state 211

    (65) prefixo_incremento -> ADC_DP escalar . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 272


state 212

    (66) posfixo_incremento -> escalar ADC_DP . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 273


state 213

    (68) posfixo_decremento -> escalar DECREMENTO . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 274


state 214

    (67) prefixo_decremento -> DECREMENTO escalar . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 275


state 215

    (105) say -> SAY say_func PONTO_VIRGULA .

    SAY             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    MY              reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    OUR             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    LIST            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    FUNCTION        reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    ESCALAR         reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    ID              reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    IF              reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    LOOP            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    FOR             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    INTEGER         reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    WHILE           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    BREAK           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    EXIT            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    LAST            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    NEXT            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    REDO            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    RETURN          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    CONSTANT        reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    STATE           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    LET             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    MULTI           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    ONLY            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    IMPORT          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    NEED            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    REQUIRE         reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    USE             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    PUSH            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    SPLICE          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    NOT             reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    NEGAC           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    ADC_DP          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    LPAREN          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    FLOAT           reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    STRING          reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    $end            reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 105 (say -> SAY say_func PONTO_VIRGULA .)


state 216

    (9) or -> exp_2 OR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    OR_S            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    XOR_S           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    SAY             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    MY              reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    OUR             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    LIST            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    FUNCTION        reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ESCALAR         reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ID              reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    IF              reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    LOOP            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    FOR             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    INTEGER         reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    WHILE           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    BREAK           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    EXIT            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    LAST            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    NEXT            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    REDO            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    RETURN          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    CONSTANT        reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    STATE           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    LET             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    MULTI           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ONLY            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    IMPORT          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    NEED            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    REQUIRE         reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    USE             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    PUSH            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    UNSHIFT         reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    SPLICE          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    NOT             reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    NEGAC           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    ADC_DP          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    DECREMENTO      reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    LPAREN          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    FLOAT           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    STRING          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    BOOLEAN         reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    $end            reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    PONTO_VIRGULA   reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    RPAREN          reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    FECHA_CHAVE     reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    COMMA           reduce using rule 9 (or -> exp_2 OR_S exp_3 .)
    AND_S           shift and go to state 172


state 217

    (10) xor -> exp_2 XOR_S exp_3 .
    (13) and -> exp_3 . AND_S exp_4

    OR_S            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    XOR_S           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    SAY             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    MY              reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    OUR             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    LIST            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    FUNCTION        reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ESCALAR         reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ID              reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    IF              reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    LOOP            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    FOR             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    INTEGER         reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    WHILE           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ABRE_CHAVE      reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    BREAK           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    EXIT            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    LAST            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    NEXT            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    REDO            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    RETURN          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    CONSTANT        reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    STATE           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    LET             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    MULTI           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ONLY            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    IMPORT          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    NEED            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    REQUIRE         reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    USE             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    PUSH            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    UNSHIFT         reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    SPLICE          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    NOT             reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    NEGAC           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    ADC_DP          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    DECREMENTO      reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    LPAREN          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    FLOAT           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    STRING          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    BOOLEAN         reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    $end            reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    PONTO_VIRGULA   reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    RPAREN          reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    FECHA_CHAVE     reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    COMMA           reduce using rule 10 (xor -> exp_2 XOR_S exp_3 .)
    AND_S           shift and go to state 172


state 218

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 276


state 219

    (94) declaracao_lista_MY -> MY LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 277
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 220

    (112) atribuicao -> ESCALAR IGUAL exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   reduce using rule 112 (atribuicao -> ESCALAR IGUAL exp_2 .)
    RPAREN          reduce using rule 112 (atribuicao -> ESCALAR IGUAL exp_2 .)
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 221

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR . IGUAL exp_2 PONTO_VIRGULA

    IGUAL           shift and go to state 278


state 222

    (95) declaracao_lista_OUR -> OUR LIST IGUAL . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 279
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 223

    (93) declaracao_lista -> LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 280
    COMMA           shift and go to state 281


state 224

    (98) lista_valores_base -> tipo .

    PONTO_VIRGULA   reduce using rule 98 (lista_valores_base -> tipo .)
    COMMA           reduce using rule 98 (lista_valores_base -> tipo .)


state 225

    (97) lista_valores -> lista_valores_base .

    PONTO_VIRGULA   reduce using rule 97 (lista_valores -> lista_valores_base .)
    COMMA           reduce using rule 97 (lista_valores -> lista_valores_base .)


state 226

    (108) funcao_com_params -> FUNCTION ID LPAREN . parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> FUNCTION ID LPAREN . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (110) parametros -> . tipo_opicional ESCALAR
    (111) parametros -> . parametros COMMA tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    RPAREN          shift and go to state 283
    INT             shift and go to state 155
    STR             shift and go to state 156
    ESCALAR         reduce using rule 85 (empty -> .)

    parametros                     shift and go to state 282
    tipo_opicional                 shift and go to state 284
    tipo_opicional_int             shift and go to state 152
    tipo_opicional_str             shift and go to state 153
    empty                          shift and go to state 154

state 227

    (113) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar . RPAREN
    (115) chamada_funcao_auxiliar -> chamada_funcao_auxiliar . COMMA exp_2

    RPAREN          shift and go to state 285
    COMMA           shift and go to state 286


state 228

    (114) chamada_funcao_sem_parametro -> ID LPAREN RPAREN .

    PONTO_VIRGULA   reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    POW             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MULT            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIV             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIVI            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MOD             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LCM             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    GCD             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ADC             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SUB             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    CONC            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    IGUAL_DP        reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DIF             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MAIOR           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MENOR           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MAIOR_IGL       reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SMARTMATCH      reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    AND_S           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    OR_S            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    XOR_S           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SAY             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MY              reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    OUR             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LIST            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    FUNCTION        reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ESCALAR         reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ID              reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    IF              reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LOOP            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    FOR             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    INTEGER         reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ABRE_CHAVE      reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    EXIT            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LAST            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    NEXT            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    REDO            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    CONSTANT        reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    STATE           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LET             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    MULTI           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ONLY            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    IMPORT          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    NEED            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    REQUIRE         reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    USE             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    PUSH            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    UNSHIFT         reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    SPLICE          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    NOT             reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    NEGAC           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    ADC_DP          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    DECREMENTO      reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    STRING          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    BOOLEAN         reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    $end            reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    FECHA_CHAVE     reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 114 (chamada_funcao_sem_parametro -> ID LPAREN RPAREN .)


state 229

    (116) chamada_funcao_auxiliar -> exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 116 (chamada_funcao_auxiliar -> exp_2 .)
    COMMA           reduce using rule 116 (chamada_funcao_auxiliar -> exp_2 .)
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 230

    (71) parenteses -> LPAREN exp_2 RPAREN .

    POW             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MULT            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVIDE          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIV             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIVI            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MOD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LCM             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    GCD             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ADC             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SUB             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    CONC            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    IGUAL_DP        reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DIF             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MENOR           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MAIOR_IGL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LESSEQUAL       reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SMARTMATCH      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    AND_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    OR_S            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    XOR_S           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SAY             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MY              reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    OUR             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LIST            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    FUNCTION        reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ESCALAR         reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ID              reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    IF              reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LOOP            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    FOR             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    INTEGER         reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    WHILE           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ABRE_CHAVE      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    BREAK           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    EXIT            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LAST            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    NEXT            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    REDO            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    RETURN          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    CONSTANT        reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    STATE           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LET             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    MULTI           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ONLY            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    IMPORT          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    NEED            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    REQUIRE         reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    USE             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    PUSH            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    UNSHIFT         reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    SPLICE          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    NOT             reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    NEGAC           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    ADC_DP          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    DECREMENTO      reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    LPAREN          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    FLOAT           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    STRING          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    BOOLEAN         reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    $end            reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    PONTO_VIRGULA   reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    RPAREN          reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    FECHA_CHAVE     reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)
    COMMA           reduce using rule 71 (parenteses -> LPAREN exp_2 RPAREN .)


state 231

    (123) bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSE            reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ELSIF           reduce using rule 123 (bloco -> ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 232

    (117) condicional -> IF exp_2 bloco .
    (118) condicional -> IF exp_2 bloco . ELSE bloco
    (119) condicional -> IF exp_2 bloco . lista_elsif
    (120) condicional -> IF exp_2 bloco . lista_elsif ELSE bloco
    (121) lista_elsif -> . ELSIF exp_2 bloco
    (122) lista_elsif -> . lista_elsif ELSIF exp_2 bloco

    SAY             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    MY              reduce using rule 117 (condicional -> IF exp_2 bloco .)
    OUR             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    LIST            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    FUNCTION        reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ESCALAR         reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ID              reduce using rule 117 (condicional -> IF exp_2 bloco .)
    IF              reduce using rule 117 (condicional -> IF exp_2 bloco .)
    LOOP            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    FOR             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    INTEGER         reduce using rule 117 (condicional -> IF exp_2 bloco .)
    WHILE           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 117 (condicional -> IF exp_2 bloco .)
    BREAK           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    EXIT            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    LAST            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    NEXT            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    REDO            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    RETURN          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    CONSTANT        reduce using rule 117 (condicional -> IF exp_2 bloco .)
    STATE           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    LET             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    MULTI           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ONLY            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    IMPORT          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    NEED            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    REQUIRE         reduce using rule 117 (condicional -> IF exp_2 bloco .)
    USE             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    PUSH            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    UNSHIFT         reduce using rule 117 (condicional -> IF exp_2 bloco .)
    SPLICE          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    NOT             reduce using rule 117 (condicional -> IF exp_2 bloco .)
    NEGAC           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ADC_DP          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    DECREMENTO      reduce using rule 117 (condicional -> IF exp_2 bloco .)
    LPAREN          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    FLOAT           reduce using rule 117 (condicional -> IF exp_2 bloco .)
    STRING          reduce using rule 117 (condicional -> IF exp_2 bloco .)
    BOOLEAN         reduce using rule 117 (condicional -> IF exp_2 bloco .)
    $end            reduce using rule 117 (condicional -> IF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 117 (condicional -> IF exp_2 bloco .)
    ELSE            shift and go to state 287
    ELSIF           shift and go to state 289

    lista_elsif                    shift and go to state 288

state 233

    (103) loop -> LOOP LPAREN declaracao_escalar_MY . exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 290
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 234

    (91) declaracao_escalar_MY -> MY . tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 155
    STR             shift and go to state 156
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 150
    tipo_opicional_int             shift and go to state 152
    tipo_opicional_str             shift and go to state 153
    empty                          shift and go to state 154

state 235

    (104) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 291
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 236

    (99) loop_for -> FOR inteiro INTERPOLACAO . inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (86) inteiro -> . INTEGER

    INTEGER         shift and go to state 145

    inteiro                        shift and go to state 292

state 237

    (100) loop_for_com_lista -> FOR LIST SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 293


state 238

    (101) loop_times -> INTEGER TIMES SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 294


state 239

    (102) loop_while -> WHILE exp_2 ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 35
    lista_declaracoes              shift and go to state 295
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 240

    (13) and -> exp_3 AND_S exp_4 .
    (22) igual_dp -> exp_4 . IGUAL_DP exp_5
    (23) dif -> exp_4 . DIF exp_5
    (24) maior -> exp_4 . MAIOR exp_5
    (25) menor -> exp_4 . MENOR exp_5
    (26) maior_igual -> exp_4 . MAIOR_IGL exp_5
    (27) menor_igual -> exp_4 . LESSEQUAL exp_5
    (28) smartmatch -> exp_4 . SMARTMATCH exp_5

    AND_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    OR_S            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    XOR_S           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    SAY             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    MY              reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    OUR             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    LIST            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    FUNCTION        reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ESCALAR         reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ID              reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    IF              reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    LOOP            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    FOR             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    INTEGER         reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    WHILE           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ABRE_CHAVE      reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    BREAK           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    EXIT            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    LAST            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    NEXT            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    REDO            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    RETURN          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    CONSTANT        reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    STATE           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    LET             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    MULTI           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ONLY            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    IMPORT          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    NEED            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    REQUIRE         reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    USE             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    PUSH            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    UNSHIFT         reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    SPLICE          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    NOT             reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    NEGAC           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    ADC_DP          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    DECREMENTO      reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    LPAREN          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    FLOAT           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    STRING          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    BOOLEAN         reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    $end            reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    PONTO_VIRGULA   reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    RPAREN          reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    FECHA_CHAVE     reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    COMMA           reduce using rule 13 (and -> exp_3 AND_S exp_4 .)
    IGUAL_DP        shift and go to state 191
    DIF             shift and go to state 192
    MAIOR           shift and go to state 193
    MENOR           shift and go to state 194
    MAIOR_IGL       shift and go to state 195
    LESSEQUAL       shift and go to state 196
    SMARTMATCH      shift and go to state 197


state 241

    (175) declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 175 (declaracao_exit -> EXIT exp_2 PONTO_VIRGULA .)


state 242

    (178) declaracao_redo -> REDO IF BOOLEAN . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 296


state 243

    (179) declaracao_return -> RETURN exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 179 (declaracao_return -> RETURN exp_2 PONTO_VIRGULA .)


state 244

    (180) declaracao_constant -> CONSTANT ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 297
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 245

    (181) declaracao_state -> STATE ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 298
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 246

    (182) declaracao_let -> LET ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 299
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 247

    (185) import -> IMPORT ID MENOR . ID MAIOR PONTO_VIRGULA

    ID              shift and go to state 300


state 248

    (186) need -> NEED ID PONTO_VIRGULA .

    SAY             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    MY              reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    OUR             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    LIST            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    ID              reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    IF              reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    LOOP            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    FOR             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    WHILE           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    BREAK           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    EXIT            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    LAST            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    NEXT            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    REDO            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    RETURN          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    STATE           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    LET             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    MULTI           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    ONLY            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    NEED            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    USE             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    PUSH            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    NOT             reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    STRING          reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    $end            reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 186 (need -> NEED ID PONTO_VIRGULA .)


state 249

    (187) require -> REQUIRE ID PONTO_VIRGULA .

    SAY             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    MY              reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    OUR             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    LIST            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    ID              reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    IF              reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    LOOP            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    FOR             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    WHILE           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    BREAK           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    EXIT            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    LAST            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEXT            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    REDO            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    RETURN          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    STATE           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    LET             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    MULTI           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    ONLY            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEED            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    USE             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    PUSH            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    NOT             reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    STRING          reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    $end            reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 187 (require -> REQUIRE ID PONTO_VIRGULA .)


state 250

    (188) use -> USE ID PONTO_VIRGULA .

    SAY             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    MY              reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    OUR             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    LIST            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    FUNCTION        reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    ESCALAR         reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    ID              reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    IF              reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    LOOP            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    FOR             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    INTEGER         reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    WHILE           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    BREAK           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    EXIT            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    LAST            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    NEXT            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    REDO            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    RETURN          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    CONSTANT        reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    STATE           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    LET             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    MULTI           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    ONLY            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    IMPORT          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    NEED            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    REQUIRE         reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    USE             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    PUSH            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    SPLICE          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    NOT             reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    NEGAC           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    ADC_DP          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    LPAREN          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    FLOAT           reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    STRING          reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    $end            reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 188 (use -> USE ID PONTO_VIRGULA .)


state 251

    (189) push -> PUSH LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 301
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 252

    (190) unshift -> UNSHIFT LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 302
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 253

    (191) splice -> SPLICE LIST COMMA . lista_valores PONTO_VIRGULA
    (96) lista_valores -> . lista_valores COMMA tipo
    (97) lista_valores -> . lista_valores_base
    (98) lista_valores_base -> . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_valores                  shift and go to state 303
    tipo                           shift and go to state 224
    lista_valores_base             shift and go to state 225
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 254

    (22) igual_dp -> exp_4 IGUAL_DP exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DIF             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MENOR           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MAIOR_IGL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LESSEQUAL       reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SMARTMATCH      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    AND_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OR_S            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    XOR_S           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SAY             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MY              reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    OUR             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LIST            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FUNCTION        reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ESCALAR         reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ID              reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    IF              reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LOOP            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FOR             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    INTEGER         reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    WHILE           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ABRE_CHAVE      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    BREAK           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    EXIT            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LAST            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NEXT            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    REDO            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RETURN          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    CONSTANT        reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    STATE           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LET             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    MULTI           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ONLY            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    IMPORT          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NEED            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    REQUIRE         reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    USE             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PUSH            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    UNSHIFT         reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    SPLICE          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NOT             reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    NEGAC           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC_DP          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    DECREMENTO      reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    LPAREN          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FLOAT           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    STRING          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    BOOLEAN         reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    $end            reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    PONTO_VIRGULA   reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    RPAREN          reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    FECHA_CHAVE     reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    COMMA           reduce using rule 22 (igual_dp -> exp_4 IGUAL_DP exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 255

    (23) dif -> exp_4 DIF exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    DIF             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MENOR           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MAIOR_IGL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LESSEQUAL       reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    SMARTMATCH      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    AND_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    OR_S            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    XOR_S           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    SAY             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MY              reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    OUR             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LIST            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    FUNCTION        reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ESCALAR         reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ID              reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    IF              reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LOOP            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    FOR             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    INTEGER         reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    WHILE           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ABRE_CHAVE      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    BREAK           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    EXIT            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LAST            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    NEXT            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    REDO            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    RETURN          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    CONSTANT        reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    STATE           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LET             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    MULTI           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ONLY            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    IMPORT          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    NEED            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    REQUIRE         reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    USE             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    PUSH            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    UNSHIFT         reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    SPLICE          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    NOT             reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    NEGAC           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ADC_DP          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    DECREMENTO      reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    LPAREN          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    FLOAT           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    STRING          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    BOOLEAN         reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    $end            reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    PONTO_VIRGULA   reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    RPAREN          reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    FECHA_CHAVE     reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    COMMA           reduce using rule 23 (dif -> exp_4 DIF exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 256

    (24) maior -> exp_4 MAIOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    DIF             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MENOR           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MAIOR_IGL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LESSEQUAL       reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    SMARTMATCH      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    AND_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    OR_S            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    XOR_S           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    SAY             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MY              reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    OUR             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LIST            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    FUNCTION        reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ESCALAR         reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ID              reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    IF              reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LOOP            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    FOR             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    INTEGER         reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    WHILE           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ABRE_CHAVE      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    BREAK           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    EXIT            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LAST            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    NEXT            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    REDO            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    RETURN          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    CONSTANT        reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    STATE           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LET             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    MULTI           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ONLY            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    IMPORT          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    NEED            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    REQUIRE         reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    USE             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    PUSH            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    UNSHIFT         reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    SPLICE          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    NOT             reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    NEGAC           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ADC_DP          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    DECREMENTO      reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    LPAREN          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    FLOAT           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    STRING          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    BOOLEAN         reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    $end            reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    RPAREN          reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    FECHA_CHAVE     reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    COMMA           reduce using rule 24 (maior -> exp_4 MAIOR exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 257

    (25) menor -> exp_4 MENOR exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    DIF             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MENOR           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MAIOR_IGL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LESSEQUAL       reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    SMARTMATCH      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    AND_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    OR_S            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    XOR_S           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    SAY             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MY              reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    OUR             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LIST            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    FUNCTION        reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ESCALAR         reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ID              reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    IF              reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LOOP            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    FOR             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    INTEGER         reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    WHILE           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ABRE_CHAVE      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    BREAK           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    EXIT            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LAST            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    NEXT            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    REDO            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    RETURN          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    CONSTANT        reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    STATE           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LET             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    MULTI           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ONLY            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    IMPORT          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    NEED            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    REQUIRE         reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    USE             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    PUSH            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    UNSHIFT         reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    SPLICE          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    NOT             reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    NEGAC           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ADC_DP          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    DECREMENTO      reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    LPAREN          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    FLOAT           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    STRING          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    BOOLEAN         reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    $end            reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    PONTO_VIRGULA   reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    RPAREN          reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    FECHA_CHAVE     reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    COMMA           reduce using rule 25 (menor -> exp_4 MENOR exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 258

    (26) maior_igual -> exp_4 MAIOR_IGL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DIF             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MENOR           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MAIOR_IGL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LESSEQUAL       reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SMARTMATCH      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    AND_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OR_S            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    XOR_S           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SAY             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MY              reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    OUR             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LIST            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FUNCTION        reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ESCALAR         reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ID              reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    IF              reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LOOP            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FOR             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    INTEGER         reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    WHILE           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ABRE_CHAVE      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    BREAK           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    EXIT            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LAST            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NEXT            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    REDO            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RETURN          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    CONSTANT        reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    STATE           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LET             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    MULTI           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ONLY            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    IMPORT          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NEED            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    REQUIRE         reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    USE             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PUSH            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    UNSHIFT         reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    SPLICE          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NOT             reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    NEGAC           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC_DP          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    DECREMENTO      reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    LPAREN          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FLOAT           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    STRING          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    BOOLEAN         reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    $end            reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    PONTO_VIRGULA   reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    RPAREN          reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    FECHA_CHAVE     reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    COMMA           reduce using rule 26 (maior_igual -> exp_4 MAIOR_IGL exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 259

    (27) menor_igual -> exp_4 LESSEQUAL exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DIF             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MENOR           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MAIOR_IGL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LESSEQUAL       reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SMARTMATCH      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    AND_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OR_S            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    XOR_S           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SAY             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MY              reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    OUR             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LIST            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FUNCTION        reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ESCALAR         reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ID              reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    IF              reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LOOP            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FOR             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    INTEGER         reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    WHILE           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ABRE_CHAVE      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    BREAK           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    EXIT            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LAST            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NEXT            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    REDO            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RETURN          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    CONSTANT        reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    STATE           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LET             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    MULTI           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ONLY            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    IMPORT          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NEED            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    REQUIRE         reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    USE             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PUSH            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    UNSHIFT         reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    SPLICE          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NOT             reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    NEGAC           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC_DP          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    DECREMENTO      reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    LPAREN          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FLOAT           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    STRING          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    BOOLEAN         reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    $end            reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    PONTO_VIRGULA   reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    RPAREN          reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    FECHA_CHAVE     reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    COMMA           reduce using rule 27 (menor_igual -> exp_4 LESSEQUAL exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 260

    (28) smartmatch -> exp_4 SMARTMATCH exp_5 .
    (33) adicao -> exp_5 . ADC exp_6
    (34) subtracao -> exp_5 . SUB exp_6
    (35) conc -> exp_5 . CONC exp_6

    IGUAL_DP        reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DIF             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MENOR           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MAIOR_IGL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LESSEQUAL       reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SMARTMATCH      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    AND_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OR_S            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    XOR_S           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SAY             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MY              reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    OUR             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LIST            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FUNCTION        reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ESCALAR         reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ID              reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    IF              reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LOOP            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FOR             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    INTEGER         reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    WHILE           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ABRE_CHAVE      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    BREAK           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    EXIT            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LAST            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NEXT            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    REDO            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RETURN          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    CONSTANT        reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    STATE           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LET             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    MULTI           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ONLY            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    IMPORT          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NEED            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    REQUIRE         reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    USE             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PUSH            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    UNSHIFT         reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    SPLICE          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NOT             reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    NEGAC           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC_DP          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    DECREMENTO      reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    LPAREN          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FLOAT           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    STRING          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    BOOLEAN         reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    $end            reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    PONTO_VIRGULA   reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    RPAREN          reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    FECHA_CHAVE     reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    COMMA           reduce using rule 28 (smartmatch -> exp_4 SMARTMATCH exp_5 .)
    ADC             shift and go to state 198
    SUB             shift and go to state 199
    CONC            shift and go to state 200


state 261

    (33) adicao -> exp_5 ADC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SUB             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    CONC            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    IGUAL_DP        reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    DIF             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MENOR           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MAIOR_IGL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LESSEQUAL       reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SMARTMATCH      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    AND_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    OR_S            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    XOR_S           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SAY             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MY              reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    OUR             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LIST            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    FUNCTION        reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ESCALAR         reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ID              reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    IF              reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LOOP            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    FOR             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    INTEGER         reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    WHILE           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ABRE_CHAVE      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    BREAK           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    EXIT            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LAST            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    NEXT            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    REDO            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    RETURN          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    CONSTANT        reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    STATE           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LET             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MULTI           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ONLY            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    IMPORT          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    NEED            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    REQUIRE         reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    USE             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    PUSH            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    UNSHIFT         reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    SPLICE          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    NOT             reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    NEGAC           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    ADC_DP          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    DECREMENTO      reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    LPAREN          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    FLOAT           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    STRING          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    BOOLEAN         reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    $end            reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    PONTO_VIRGULA   reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    RPAREN          reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    FECHA_CHAVE     reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    COMMA           reduce using rule 33 (adicao -> exp_5 ADC exp_6 .)
    MULT            shift and go to state 201
    DIVIDE          shift and go to state 202
    DIV             shift and go to state 203
    DIVI            shift and go to state 204
    MOD             shift and go to state 205
    LCM             shift and go to state 206
    GCD             shift and go to state 207


state 262

    (34) subtracao -> exp_5 SUB exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SUB             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    CONC            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    IGUAL_DP        reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    DIF             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MENOR           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MAIOR_IGL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LESSEQUAL       reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SMARTMATCH      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    AND_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    OR_S            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    XOR_S           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SAY             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MY              reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    OUR             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LIST            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    FUNCTION        reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ESCALAR         reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ID              reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    IF              reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LOOP            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    FOR             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    INTEGER         reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    WHILE           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ABRE_CHAVE      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    BREAK           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    EXIT            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LAST            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    NEXT            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    REDO            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    RETURN          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    CONSTANT        reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    STATE           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LET             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MULTI           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ONLY            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    IMPORT          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    NEED            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    REQUIRE         reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    USE             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    PUSH            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    UNSHIFT         reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    SPLICE          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    NOT             reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    NEGAC           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    ADC_DP          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    DECREMENTO      reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    LPAREN          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    FLOAT           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    STRING          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    BOOLEAN         reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    $end            reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    PONTO_VIRGULA   reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    RPAREN          reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    FECHA_CHAVE     reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    COMMA           reduce using rule 34 (subtracao -> exp_5 SUB exp_6 .)
    MULT            shift and go to state 201
    DIVIDE          shift and go to state 202
    DIV             shift and go to state 203
    DIVI            shift and go to state 204
    MOD             shift and go to state 205
    LCM             shift and go to state 206
    GCD             shift and go to state 207


state 263

    (35) conc -> exp_5 CONC exp_6 .
    (44) mult -> exp_6 . MULT exp_7
    (45) divide -> exp_6 . DIVIDE exp_7
    (46) div -> exp_6 . DIV exp_7
    (47) divi -> exp_6 . DIVI exp_7
    (48) mod -> exp_6 . MOD exp_7
    (49) lcm -> exp_6 . LCM exp_7
    (50) gcd -> exp_6 . GCD exp_7

    ADC             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SUB             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    CONC            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    IGUAL_DP        reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    DIF             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MENOR           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MAIOR_IGL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LESSEQUAL       reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SMARTMATCH      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    AND_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    OR_S            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    XOR_S           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SAY             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MY              reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    OUR             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LIST            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    FUNCTION        reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ESCALAR         reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ID              reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    IF              reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LOOP            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    FOR             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    INTEGER         reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    WHILE           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ABRE_CHAVE      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    BREAK           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    EXIT            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LAST            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    NEXT            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    REDO            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    RETURN          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    CONSTANT        reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    STATE           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LET             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MULTI           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ONLY            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    IMPORT          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    NEED            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    REQUIRE         reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    USE             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    PUSH            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    UNSHIFT         reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    SPLICE          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    NOT             reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    NEGAC           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    ADC_DP          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    DECREMENTO      reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    LPAREN          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    FLOAT           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    STRING          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    BOOLEAN         reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    $end            reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    PONTO_VIRGULA   reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    RPAREN          reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    FECHA_CHAVE     reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    COMMA           reduce using rule 35 (conc -> exp_5 CONC exp_6 .)
    MULT            shift and go to state 201
    DIVIDE          shift and go to state 202
    DIV             shift and go to state 203
    DIVI            shift and go to state 204
    MOD             shift and go to state 205
    LCM             shift and go to state 206
    GCD             shift and go to state 207


state 264

    (44) mult -> exp_6 MULT exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVIDE          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIV             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIVI            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MOD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LCM             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    GCD             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ADC             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SUB             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    CONC            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    IGUAL_DP        reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DIF             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MENOR           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MAIOR_IGL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LESSEQUAL       reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SMARTMATCH      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    AND_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    OR_S            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    XOR_S           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SAY             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MY              reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    OUR             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LIST            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    FUNCTION        reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ESCALAR         reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ID              reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    IF              reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LOOP            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    FOR             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    INTEGER         reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    WHILE           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ABRE_CHAVE      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    BREAK           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    EXIT            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LAST            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    NEXT            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    REDO            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    RETURN          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    CONSTANT        reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    STATE           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LET             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    MULTI           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ONLY            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    IMPORT          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    NEED            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    REQUIRE         reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    USE             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    PUSH            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    UNSHIFT         reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    SPLICE          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    NOT             reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    NEGAC           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    ADC_DP          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    DECREMENTO      reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    LPAREN          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    FLOAT           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    STRING          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    BOOLEAN         reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    $end            reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    PONTO_VIRGULA   reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    RPAREN          reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    FECHA_CHAVE     reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    COMMA           reduce using rule 44 (mult -> exp_6 MULT exp_7 .)
    POW             shift and go to state 208


state 265

    (45) divide -> exp_6 DIVIDE exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVIDE          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIV             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIVI            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MOD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LCM             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    GCD             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ADC             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SUB             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    CONC            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    IGUAL_DP        reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DIF             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MENOR           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MAIOR_IGL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LESSEQUAL       reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SMARTMATCH      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    AND_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    OR_S            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    XOR_S           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SAY             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MY              reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    OUR             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LIST            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    FUNCTION        reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ESCALAR         reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ID              reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    IF              reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LOOP            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    FOR             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    INTEGER         reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    WHILE           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ABRE_CHAVE      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    BREAK           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    EXIT            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LAST            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    NEXT            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    REDO            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    RETURN          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    CONSTANT        reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    STATE           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LET             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    MULTI           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ONLY            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    IMPORT          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    NEED            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    REQUIRE         reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    USE             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    PUSH            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    UNSHIFT         reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    SPLICE          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    NOT             reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    NEGAC           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    ADC_DP          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    DECREMENTO      reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    LPAREN          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    FLOAT           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    STRING          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    BOOLEAN         reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    $end            reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    PONTO_VIRGULA   reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    RPAREN          reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    FECHA_CHAVE     reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    COMMA           reduce using rule 45 (divide -> exp_6 DIVIDE exp_7 .)
    POW             shift and go to state 208


state 266

    (46) div -> exp_6 DIV exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVIDE          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIV             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIVI            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MOD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LCM             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    GCD             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ADC             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SUB             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    CONC            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    IGUAL_DP        reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DIF             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MENOR           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MAIOR_IGL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LESSEQUAL       reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SMARTMATCH      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    AND_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    OR_S            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    XOR_S           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SAY             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MY              reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    OUR             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LIST            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    FUNCTION        reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ESCALAR         reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ID              reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    IF              reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LOOP            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    FOR             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    INTEGER         reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    WHILE           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ABRE_CHAVE      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    BREAK           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    EXIT            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LAST            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    NEXT            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    REDO            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    RETURN          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    CONSTANT        reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    STATE           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LET             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    MULTI           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ONLY            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    IMPORT          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    NEED            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    REQUIRE         reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    USE             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    PUSH            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    UNSHIFT         reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    SPLICE          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    NOT             reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    NEGAC           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    ADC_DP          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    DECREMENTO      reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    LPAREN          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    FLOAT           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    STRING          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    BOOLEAN         reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    $end            reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    PONTO_VIRGULA   reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    RPAREN          reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    FECHA_CHAVE     reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    COMMA           reduce using rule 46 (div -> exp_6 DIV exp_7 .)
    POW             shift and go to state 208


state 267

    (47) divi -> exp_6 DIVI exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVIDE          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIV             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIVI            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MOD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LCM             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    GCD             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ADC             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SUB             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    CONC            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    IGUAL_DP        reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DIF             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MENOR           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MAIOR_IGL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LESSEQUAL       reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SMARTMATCH      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    AND_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    OR_S            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    XOR_S           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SAY             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MY              reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    OUR             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LIST            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    FUNCTION        reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ESCALAR         reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ID              reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    IF              reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LOOP            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    FOR             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    INTEGER         reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    WHILE           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ABRE_CHAVE      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    BREAK           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    EXIT            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LAST            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    NEXT            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    REDO            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    RETURN          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    CONSTANT        reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    STATE           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LET             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    MULTI           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ONLY            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    IMPORT          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    NEED            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    REQUIRE         reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    USE             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    PUSH            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    UNSHIFT         reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    SPLICE          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    NOT             reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    NEGAC           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    ADC_DP          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    DECREMENTO      reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    LPAREN          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    FLOAT           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    STRING          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    BOOLEAN         reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    $end            reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    PONTO_VIRGULA   reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    RPAREN          reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    FECHA_CHAVE     reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    COMMA           reduce using rule 47 (divi -> exp_6 DIVI exp_7 .)
    POW             shift and go to state 208


state 268

    (48) mod -> exp_6 MOD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVIDE          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIV             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIVI            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MOD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LCM             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    GCD             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ADC             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SUB             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    CONC            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    IGUAL_DP        reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DIF             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MENOR           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MAIOR_IGL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LESSEQUAL       reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SMARTMATCH      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    AND_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    OR_S            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    XOR_S           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SAY             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MY              reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    OUR             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LIST            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    FUNCTION        reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ESCALAR         reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ID              reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    IF              reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LOOP            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    FOR             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    INTEGER         reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    WHILE           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ABRE_CHAVE      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    BREAK           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    EXIT            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LAST            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    NEXT            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    REDO            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    RETURN          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    CONSTANT        reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    STATE           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LET             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    MULTI           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ONLY            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    IMPORT          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    NEED            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    REQUIRE         reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    USE             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    PUSH            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    UNSHIFT         reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    SPLICE          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    NOT             reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    NEGAC           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    ADC_DP          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    DECREMENTO      reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    LPAREN          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    FLOAT           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    STRING          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    BOOLEAN         reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    $end            reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    PONTO_VIRGULA   reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    RPAREN          reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    FECHA_CHAVE     reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    COMMA           reduce using rule 48 (mod -> exp_6 MOD exp_7 .)
    POW             shift and go to state 208


state 269

    (49) lcm -> exp_6 LCM exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVIDE          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIV             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIVI            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MOD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LCM             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    GCD             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ADC             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SUB             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    CONC            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    IGUAL_DP        reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DIF             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MENOR           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MAIOR_IGL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LESSEQUAL       reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SMARTMATCH      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    AND_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    OR_S            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    XOR_S           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SAY             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MY              reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    OUR             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LIST            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    FUNCTION        reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ESCALAR         reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ID              reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    IF              reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LOOP            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    FOR             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    INTEGER         reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    WHILE           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ABRE_CHAVE      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    BREAK           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    EXIT            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LAST            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    NEXT            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    REDO            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    RETURN          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    CONSTANT        reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    STATE           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LET             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    MULTI           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ONLY            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    IMPORT          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    NEED            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    REQUIRE         reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    USE             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    PUSH            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    UNSHIFT         reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    SPLICE          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    NOT             reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    NEGAC           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    ADC_DP          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    DECREMENTO      reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    LPAREN          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    FLOAT           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    STRING          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    BOOLEAN         reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    $end            reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    PONTO_VIRGULA   reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    RPAREN          reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    FECHA_CHAVE     reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    COMMA           reduce using rule 49 (lcm -> exp_6 LCM exp_7 .)
    POW             shift and go to state 208


state 270

    (50) gcd -> exp_6 GCD exp_7 .
    (53) pow -> exp_7 . POW exp_8

    MULT            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVIDE          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIV             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIVI            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MOD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LCM             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    GCD             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ADC             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SUB             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    CONC            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    IGUAL_DP        reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DIF             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MENOR           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MAIOR_IGL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LESSEQUAL       reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SMARTMATCH      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    AND_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    OR_S            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    XOR_S           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SAY             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MY              reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    OUR             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LIST            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    FUNCTION        reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ESCALAR         reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ID              reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    IF              reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LOOP            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    FOR             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    INTEGER         reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    WHILE           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ABRE_CHAVE      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    BREAK           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    EXIT            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LAST            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    NEXT            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    REDO            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    RETURN          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    CONSTANT        reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    STATE           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LET             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    MULTI           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ONLY            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    IMPORT          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    NEED            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    REQUIRE         reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    USE             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    PUSH            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    UNSHIFT         reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    SPLICE          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    NOT             reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    NEGAC           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    ADC_DP          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    DECREMENTO      reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    LPAREN          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    FLOAT           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    STRING          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    BOOLEAN         reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    $end            reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    PONTO_VIRGULA   reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    RPAREN          reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    FECHA_CHAVE     reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    COMMA           reduce using rule 50 (gcd -> exp_6 GCD exp_7 .)
    POW             shift and go to state 208


state 271

    (53) pow -> exp_7 POW exp_8 .

    POW             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MULT            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVIDE          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIV             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIVI            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MOD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LCM             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    GCD             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ADC             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SUB             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    CONC            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    IGUAL_DP        reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DIF             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MENOR           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MAIOR_IGL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LESSEQUAL       reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SMARTMATCH      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    AND_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    OR_S            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    XOR_S           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SAY             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MY              reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    OUR             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LIST            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    FUNCTION        reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ESCALAR         reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ID              reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    IF              reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LOOP            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    FOR             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    INTEGER         reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    WHILE           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ABRE_CHAVE      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    BREAK           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    EXIT            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LAST            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    NEXT            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    REDO            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    RETURN          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    CONSTANT        reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    STATE           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LET             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    MULTI           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ONLY            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    IMPORT          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    NEED            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    REQUIRE         reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    USE             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    PUSH            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    UNSHIFT         reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    SPLICE          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    NOT             reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    NEGAC           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    ADC_DP          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    DECREMENTO      reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    LPAREN          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    FLOAT           reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    STRING          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    BOOLEAN         reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    $end            reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    PONTO_VIRGULA   reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    RPAREN          reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    FECHA_CHAVE     reduce using rule 53 (pow -> exp_7 POW exp_8 .)
    COMMA           reduce using rule 53 (pow -> exp_7 POW exp_8 .)


state 272

    (65) prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .

    POW             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MULT            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    DIVIDE          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    DIV             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    DIVI            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MOD             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LCM             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    GCD             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ADC             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    SUB             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    CONC            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    IGUAL_DP        reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    DIF             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MAIOR           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MENOR           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MAIOR_IGL       reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LESSEQUAL       reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    SMARTMATCH      reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    AND_S           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    OR_S            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    XOR_S           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    SAY             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MY              reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    OUR             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LIST            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    FUNCTION        reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ESCALAR         reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ID              reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    IF              reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LOOP            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    FOR             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    INTEGER         reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    WHILE           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    BREAK           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    EXIT            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LAST            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    NEXT            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    REDO            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    RETURN          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    CONSTANT        reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    STATE           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LET             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    MULTI           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ONLY            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    IMPORT          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    NEED            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    REQUIRE         reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    USE             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    PUSH            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    SPLICE          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    NOT             reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    NEGAC           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    ADC_DP          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    LPAREN          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    FLOAT           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    STRING          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    $end            reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    PONTO_VIRGULA   reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    RPAREN          reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)
    COMMA           reduce using rule 65 (prefixo_incremento -> ADC_DP escalar PONTO_VIRGULA .)


state 273

    (66) posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .

    POW             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MULT            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    DIVIDE          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    DIV             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    DIVI            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MOD             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LCM             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    GCD             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ADC             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    SUB             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    CONC            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    IGUAL_DP        reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    DIF             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MAIOR           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MENOR           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MAIOR_IGL       reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LESSEQUAL       reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    SMARTMATCH      reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    AND_S           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    OR_S            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    XOR_S           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    SAY             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MY              reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    OUR             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LIST            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    FUNCTION        reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ESCALAR         reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ID              reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    IF              reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LOOP            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    FOR             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    INTEGER         reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    WHILE           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    BREAK           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    EXIT            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LAST            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    NEXT            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    REDO            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    RETURN          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    CONSTANT        reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    STATE           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LET             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    MULTI           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ONLY            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    IMPORT          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    NEED            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    REQUIRE         reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    USE             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    PUSH            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    SPLICE          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    NOT             reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    NEGAC           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    ADC_DP          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    LPAREN          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    FLOAT           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    STRING          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    $end            reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    PONTO_VIRGULA   reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    RPAREN          reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)
    COMMA           reduce using rule 66 (posfixo_incremento -> escalar ADC_DP PONTO_VIRGULA .)


state 274

    (68) posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .

    POW             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MULT            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    DIVIDE          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    DIV             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    DIVI            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MOD             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LCM             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    GCD             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ADC             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    SUB             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    CONC            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    IGUAL_DP        reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    DIF             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MAIOR           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MENOR           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MAIOR_IGL       reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LESSEQUAL       reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    SMARTMATCH      reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    AND_S           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    OR_S            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    XOR_S           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    SAY             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MY              reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    OUR             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LIST            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    FUNCTION        reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ESCALAR         reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ID              reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    IF              reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LOOP            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    FOR             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    INTEGER         reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    WHILE           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    BREAK           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    EXIT            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LAST            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    NEXT            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    REDO            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    RETURN          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    CONSTANT        reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    STATE           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LET             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    MULTI           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ONLY            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    IMPORT          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    NEED            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    REQUIRE         reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    USE             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    PUSH            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    SPLICE          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    NOT             reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    NEGAC           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    ADC_DP          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    LPAREN          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    FLOAT           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    STRING          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    $end            reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    PONTO_VIRGULA   reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    RPAREN          reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)
    COMMA           reduce using rule 68 (posfixo_decremento -> escalar DECREMENTO PONTO_VIRGULA .)


state 275

    (67) prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .

    POW             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MULT            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    DIVIDE          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    DIV             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    DIVI            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MOD             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LCM             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    GCD             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ADC             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    SUB             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    CONC            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    IGUAL_DP        reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    DIF             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MAIOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MENOR           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MAIOR_IGL       reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LESSEQUAL       reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    SMARTMATCH      reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    AND_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    OR_S            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    XOR_S           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    SAY             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MY              reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    OUR             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LIST            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    FUNCTION        reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ESCALAR         reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ID              reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    IF              reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LOOP            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    FOR             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    INTEGER         reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    WHILE           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    BREAK           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    EXIT            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LAST            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    NEXT            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    REDO            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    RETURN          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    CONSTANT        reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    STATE           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LET             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    MULTI           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ONLY            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    IMPORT          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    NEED            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    REQUIRE         reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    USE             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    PUSH            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    SPLICE          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    NOT             reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    NEGAC           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    ADC_DP          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    LPAREN          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    FLOAT           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    STRING          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    $end            reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    PONTO_VIRGULA   reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    RPAREN          reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)
    COMMA           reduce using rule 67 (prefixo_decremento -> DECREMENTO escalar PONTO_VIRGULA .)


state 276

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 304
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 277

    (94) declaracao_lista_MY -> MY LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 305
    COMMA           shift and go to state 281


state 278

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL . exp_2 PONTO_VIRGULA
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 306
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 279

    (95) declaracao_lista_OUR -> OUR LIST IGUAL lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 307
    COMMA           shift and go to state 281


state 280

    (93) declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 93 (declaracao_lista -> LIST IGUAL lista_valores PONTO_VIRGULA .)


state 281

    (96) lista_valores -> lista_valores COMMA . tipo
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    tipo                           shift and go to state 308
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 282

    (108) funcao_com_params -> FUNCTION ID LPAREN parametros . RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (111) parametros -> parametros . COMMA tipo_opicional ESCALAR

    RPAREN          shift and go to state 309
    COMMA           shift and go to state 310


state 283

    (109) funcao_sem_params -> FUNCTION ID LPAREN RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 311


state 284

    (110) parametros -> tipo_opicional . ESCALAR

    ESCALAR         shift and go to state 312


state 285

    (113) chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .

    PONTO_VIRGULA   reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    POW             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MULT            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIVIDE          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIV             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIVI            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MOD             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LCM             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    GCD             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ADC             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SUB             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    CONC            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    IGUAL_DP        reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DIF             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MAIOR           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MENOR           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MAIOR_IGL       reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LESSEQUAL       reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SMARTMATCH      reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    AND_S           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    OR_S            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    XOR_S           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SAY             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MY              reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    OUR             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LIST            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    FUNCTION        reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ESCALAR         reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ID              reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    IF              reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LOOP            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    FOR             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    INTEGER         reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    WHILE           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ABRE_CHAVE      reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    BREAK           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    EXIT            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LAST            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    NEXT            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    REDO            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    RETURN          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    CONSTANT        reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    STATE           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LET             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    MULTI           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ONLY            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    IMPORT          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    NEED            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    REQUIRE         reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    USE             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    PUSH            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    UNSHIFT         reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    SPLICE          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    NOT             reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    NEGAC           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    ADC_DP          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    DECREMENTO      reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    LPAREN          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    FLOAT           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    STRING          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    BOOLEAN         reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    $end            reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    RPAREN          reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    FECHA_CHAVE     reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)
    COMMA           reduce using rule 113 (chamada_funcao -> ID LPAREN chamada_funcao_auxiliar RPAREN .)


state 286

    (115) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA . exp_2
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 313
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 287

    (118) condicional -> IF exp_2 bloco ELSE . bloco
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 62

    bloco                          shift and go to state 314

state 288

    (119) condicional -> IF exp_2 bloco lista_elsif .
    (120) condicional -> IF exp_2 bloco lista_elsif . ELSE bloco
    (122) lista_elsif -> lista_elsif . ELSIF exp_2 bloco

    SAY             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    MY              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    OUR             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    LIST            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    FUNCTION        reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ESCALAR         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ID              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    IF              reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    LOOP            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    FOR             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    INTEGER         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    WHILE           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ABRE_CHAVE      reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    BREAK           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    EXIT            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    LAST            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    NEXT            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    REDO            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    RETURN          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    CONSTANT        reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    STATE           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    LET             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    MULTI           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ONLY            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    IMPORT          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    NEED            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    REQUIRE         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    USE             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    PUSH            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    UNSHIFT         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    SPLICE          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    NOT             reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    NEGAC           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ADC_DP          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    DECREMENTO      reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    LPAREN          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    FLOAT           reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    STRING          reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    BOOLEAN         reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    $end            reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    FECHA_CHAVE     reduce using rule 119 (condicional -> IF exp_2 bloco lista_elsif .)
    ELSE            shift and go to state 315
    ELSIF           shift and go to state 316


state 289

    (121) lista_elsif -> ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 317
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 290

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 . PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 318
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 291

    (104) loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 104 (loop_sem_condicao -> LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 292

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro . SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    SETA            shift and go to state 319


state 293

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 320


state 294

    (101) loop_times -> INTEGER TIMES SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 321


state 295

    (102) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 322
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 35
    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 296

    (178) declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .

    SAY             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    MY              reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    OUR             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LIST            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FUNCTION        reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ESCALAR         reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ID              reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    IF              reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LOOP            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FOR             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    INTEGER         reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    WHILE           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    BREAK           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    EXIT            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LAST            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEXT            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    REDO            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    RETURN          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    CONSTANT        reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    STATE           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LET             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    MULTI           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ONLY            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    IMPORT          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEED            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    REQUIRE         reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    USE             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    PUSH            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    SPLICE          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NOT             reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    NEGAC           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    ADC_DP          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    LPAREN          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FLOAT           reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    STRING          reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    $end            reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 178 (declaracao_redo -> REDO IF BOOLEAN PONTO_VIRGULA .)


state 297

    (180) declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 323
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 298

    (181) declaracao_state -> STATE ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 324
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 299

    (182) declaracao_let -> LET ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 325
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 300

    (185) import -> IMPORT ID MENOR ID . MAIOR PONTO_VIRGULA

    MAIOR           shift and go to state 326


state 301

    (189) push -> PUSH LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 327
    COMMA           shift and go to state 281


state 302

    (190) unshift -> UNSHIFT LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 328
    COMMA           shift and go to state 281


state 303

    (191) splice -> SPLICE LIST COMMA lista_valores . PONTO_VIRGULA
    (96) lista_valores -> lista_valores . COMMA tipo

    PONTO_VIRGULA   shift and go to state 329
    COMMA           shift and go to state 281


state 304

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 330
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 305

    (94) declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 94 (declaracao_lista_MY -> MY LIST IGUAL lista_valores PONTO_VIRGULA .)


state 306

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 . PONTO_VIRGULA
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    PONTO_VIRGULA   shift and go to state 331
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 307

    (95) declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 95 (declaracao_lista_OUR -> OUR LIST IGUAL lista_valores PONTO_VIRGULA .)


state 308

    (96) lista_valores -> lista_valores COMMA tipo .

    PONTO_VIRGULA   reduce using rule 96 (lista_valores -> lista_valores COMMA tipo .)
    COMMA           reduce using rule 96 (lista_valores -> lista_valores COMMA tipo .)


state 309

    (108) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN . ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 332


state 310

    (111) parametros -> parametros COMMA . tipo_opicional ESCALAR
    (80) tipo_opicional -> . tipo_opicional_int
    (81) tipo_opicional -> . tipo_opicional_str
    (82) tipo_opicional -> . empty
    (83) tipo_opicional_int -> . INT
    (84) tipo_opicional_str -> . STR
    (85) empty -> .

    INT             shift and go to state 155
    STR             shift and go to state 156
    ESCALAR         reduce using rule 85 (empty -> .)

    tipo_opicional                 shift and go to state 333
    tipo_opicional_int             shift and go to state 152
    tipo_opicional_str             shift and go to state 153
    empty                          shift and go to state 154

state 311

    (109) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 59
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes_para_funcoes shift and go to state 334
    lista_declaracoes              shift and go to state 335
    declaracoes_para_funcoes       shift and go to state 336
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 312

    (110) parametros -> tipo_opicional ESCALAR .

    RPAREN          reduce using rule 110 (parametros -> tipo_opicional ESCALAR .)
    COMMA           reduce using rule 110 (parametros -> tipo_opicional ESCALAR .)


state 313

    (115) chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3

    RPAREN          reduce using rule 115 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .)
    COMMA           reduce using rule 115 (chamada_funcao_auxiliar -> chamada_funcao_auxiliar COMMA exp_2 .)
    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149


state 314

    (118) condicional -> IF exp_2 bloco ELSE bloco .

    SAY             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    MY              reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    OUR             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    LIST            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    FUNCTION        reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    ESCALAR         reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    ID              reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    IF              reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    LOOP            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    FOR             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    INTEGER         reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    WHILE           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    ABRE_CHAVE      reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    BREAK           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    EXIT            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    LAST            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEXT            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    REDO            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    RETURN          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    CONSTANT        reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    STATE           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    LET             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    MULTI           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    ONLY            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    IMPORT          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEED            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    REQUIRE         reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    USE             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    PUSH            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    UNSHIFT         reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    SPLICE          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    NOT             reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    NEGAC           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    ADC_DP          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    DECREMENTO      reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    LPAREN          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    FLOAT           reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    STRING          reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    BOOLEAN         reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    $end            reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)
    FECHA_CHAVE     reduce using rule 118 (condicional -> IF exp_2 bloco ELSE bloco .)


state 315

    (120) condicional -> IF exp_2 bloco lista_elsif ELSE . bloco
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 62

    bloco                          shift and go to state 337

state 316

    (122) lista_elsif -> lista_elsif ELSIF . exp_2 bloco
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    ESCALAR         shift and go to state 144
    ID              shift and go to state 60
    INTEGER         shift and go to state 145
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    exp_2                          shift and go to state 338
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    chamada_funcao                 shift and go to state 142
    chamada_funcao_sem_parametro   shift and go to state 143
    inteiro                        shift and go to state 66
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 317

    (121) lista_elsif -> ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149
    ABRE_CHAVE      shift and go to state 62

    bloco                          shift and go to state 339

state 318

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA . atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2

    ESCALAR         shift and go to state 341

    atribuicao                     shift and go to state 340

state 319

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA . ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ESCALAR         shift and go to state 342


state 320

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes              shift and go to state 343
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 321

    (101) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes              shift and go to state 344
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 322

    (102) loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 102 (loop_while -> WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 323

    (180) declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 180 (declaracao_constant -> CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 324

    (181) declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 181 (declaracao_state -> STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 325

    (182) declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 182 (declaracao_let -> LET ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 326

    (185) import -> IMPORT ID MENOR ID MAIOR . PONTO_VIRGULA

    PONTO_VIRGULA   shift and go to state 345


state 327

    (189) push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 189 (push -> PUSH LIST COMMA lista_valores PONTO_VIRGULA .)


state 328

    (190) unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 190 (unshift -> UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA .)


state 329

    (191) splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .

    SAY             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    MY              reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    OUR             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LIST            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FUNCTION        reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ESCALAR         reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ID              reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    IF              reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LOOP            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FOR             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    INTEGER         reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    WHILE           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    BREAK           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    EXIT            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LAST            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEXT            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    REDO            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    RETURN          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    CONSTANT        reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    STATE           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LET             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    MULTI           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ONLY            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    IMPORT          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEED            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    REQUIRE         reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    USE             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    PUSH            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    SPLICE          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NOT             reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    NEGAC           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    ADC_DP          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    LPAREN          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FLOAT           reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    STRING          reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    $end            reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 191 (splice -> SPLICE LIST COMMA lista_valores PONTO_VIRGULA .)


state 330

    (91) declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 91 (declaracao_escalar_MY -> MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 331

    (92) declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .

    SAY             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MY              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    OUR             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LIST            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FUNCTION        reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ESCALAR         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ID              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IF              reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LOOP            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FOR             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    INTEGER         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    WHILE           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BREAK           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    EXIT            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LAST            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEXT            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REDO            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    RETURN          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    CONSTANT        reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STATE           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LET             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    MULTI           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ONLY            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    IMPORT          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEED            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    REQUIRE         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    USE             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    PUSH            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    SPLICE          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NOT             reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    NEGAC           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    ADC_DP          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    LPAREN          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FLOAT           reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    STRING          reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    $end            reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 92 (declaracao_escalar_OUR -> OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA .)


state 332

    (108) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE . lista_declaracoes_para_funcoes FECHA_CHAVE
    (4) lista_declaracoes_para_funcoes -> . lista_declaracoes declaracoes_para_funcoes
    (5) lista_declaracoes_para_funcoes -> . declaracoes_para_funcoes
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 59
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    lista_declaracoes_para_funcoes shift and go to state 346
    lista_declaracoes              shift and go to state 335
    declaracoes_para_funcoes       shift and go to state 336
    declaracoes                    shift and go to state 3
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 333

    (111) parametros -> parametros COMMA tipo_opicional . ESCALAR

    ESCALAR         shift and go to state 347


state 334

    (109) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 348


state 335

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes . declaracoes_para_funcoes
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    FUNCTION        shift and go to state 59
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes_para_funcoes       shift and go to state 349
    declaracoes                    shift and go to state 137
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    declaracao_de_funcao           shift and go to state 5
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 336

    (5) lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .
    (124) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 5 (lista_declaracoes_para_funcoes -> declaracoes_para_funcoes .)
    SAY             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LET             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MULTI           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)


state 337

    (120) condicional -> IF exp_2 bloco lista_elsif ELSE bloco .

    SAY             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    MY              reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    OUR             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LIST            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FUNCTION        reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ESCALAR         reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ID              reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IF              reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LOOP            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FOR             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    INTEGER         reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    WHILE           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ABRE_CHAVE      reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BREAK           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    EXIT            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LAST            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEXT            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    REDO            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    RETURN          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    CONSTANT        reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STATE           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LET             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    MULTI           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ONLY            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    IMPORT          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEED            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    REQUIRE         reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    USE             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    PUSH            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    UNSHIFT         reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    SPLICE          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NOT             reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    NEGAC           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    ADC_DP          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    DECREMENTO      reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    LPAREN          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FLOAT           reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    STRING          reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    BOOLEAN         reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    $end            reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)
    FECHA_CHAVE     reduce using rule 120 (condicional -> IF exp_2 bloco lista_elsif ELSE bloco .)


state 338

    (122) lista_elsif -> lista_elsif ELSIF exp_2 . bloco
    (9) or -> exp_2 . OR_S exp_3
    (10) xor -> exp_2 . XOR_S exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    OR_S            shift and go to state 148
    XOR_S           shift and go to state 149
    ABRE_CHAVE      shift and go to state 62

    bloco                          shift and go to state 350

state 339

    (121) lista_elsif -> ELSIF exp_2 bloco .

    ELSE            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    SAY             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    MY              reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    OUR             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    LIST            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ID              reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    IF              reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    LOOP            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    FOR             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    WHILE           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    BREAK           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    EXIT            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    LAST            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    NEXT            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    REDO            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    RETURN          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    CONSTANT        reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    STATE           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    LET             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    MULTI           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ONLY            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    IMPORT          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    NEED            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    REQUIRE         reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    USE             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    PUSH            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    UNSHIFT         reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    SPLICE          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    NOT             reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    STRING          reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    $end            reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 121 (lista_elsif -> ELSIF exp_2 bloco .)


state 340

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao . RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    RPAREN          shift and go to state 351


state 341

    (112) atribuicao -> ESCALAR . IGUAL exp_2

    IGUAL           shift and go to state 157


state 342

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 352


state 343

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 353
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 344

    (101) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 354
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 345

    (185) import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .

    SAY             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    MY              reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    OUR             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LIST            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FUNCTION        reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ESCALAR         reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ID              reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    IF              reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LOOP            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FOR             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    INTEGER         reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    WHILE           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ABRE_CHAVE      reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    BREAK           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    EXIT            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LAST            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEXT            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    REDO            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    RETURN          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    CONSTANT        reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    STATE           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LET             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    MULTI           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ONLY            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    IMPORT          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEED            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    REQUIRE         reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    USE             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    PUSH            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    UNSHIFT         reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    SPLICE          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NOT             reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    NEGAC           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    ADC_DP          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    DECREMENTO      reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    LPAREN          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FLOAT           reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    STRING          reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    BOOLEAN         reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    $end            reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)
    FECHA_CHAVE     reduce using rule 185 (import -> IMPORT ID MENOR ID MAIOR PONTO_VIRGULA .)


state 346

    (108) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes . FECHA_CHAVE

    FECHA_CHAVE     shift and go to state 355


state 347

    (111) parametros -> parametros COMMA tipo_opicional ESCALAR .

    RPAREN          reduce using rule 111 (parametros -> parametros COMMA tipo_opicional ESCALAR .)
    COMMA           reduce using rule 111 (parametros -> parametros COMMA tipo_opicional ESCALAR .)


state 348

    (109) funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    SAY             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LET             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MULTI           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 109 (funcao_sem_params -> FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 349

    (4) lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .
    (124) declaracoes -> declaracoes_para_funcoes .

    FECHA_CHAVE     reduce using rule 4 (lista_declaracoes_para_funcoes -> lista_declaracoes declaracoes_para_funcoes .)
    SAY             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MY              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    OUR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LIST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ESCALAR         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ID              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IF              reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LOOP            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FOR             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    INTEGER         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    WHILE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ABRE_CHAVE      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BREAK           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    EXIT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LAST            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEXT            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REDO            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    RETURN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    CONSTANT        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STATE           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LET             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    MULTI           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ONLY            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    IMPORT          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEED            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    REQUIRE         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    USE             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    PUSH            reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    UNSHIFT         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    SPLICE          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FUNCTION        reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NOT             reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    NEGAC           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    ADC_DP          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    DECREMENTO      reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    LPAREN          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    FLOAT           reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    STRING          reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)
    BOOLEAN         reduce using rule 124 (declaracoes -> declaracoes_para_funcoes .)


state 350

    (122) lista_elsif -> lista_elsif ELSIF exp_2 bloco .

    ELSE            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ELSIF           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    SAY             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MY              reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    OUR             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LIST            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FUNCTION        reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ESCALAR         reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ID              reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IF              reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LOOP            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FOR             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    INTEGER         reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    WHILE           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ABRE_CHAVE      reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BREAK           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    EXIT            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LAST            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEXT            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    REDO            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    RETURN          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    CONSTANT        reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STATE           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LET             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    MULTI           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ONLY            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    IMPORT          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEED            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    REQUIRE         reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    USE             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    PUSH            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    UNSHIFT         reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    SPLICE          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NOT             reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    NEGAC           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    ADC_DP          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    DECREMENTO      reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    LPAREN          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FLOAT           reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    STRING          reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    BOOLEAN         reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    $end            reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)
    FECHA_CHAVE     reduce using rule 122 (lista_elsif -> lista_elsif ELSIF exp_2 bloco .)


state 351

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN . ABRE_CHAVE lista_declaracoes FECHA_CHAVE

    ABRE_CHAVE      shift and go to state 356


state 352

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    inteiro                        shift and go to state 66
    lista_declaracoes              shift and go to state 357
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 353

    (100) loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 100 (loop_for_com_lista -> FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 354

    (101) loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 101 (loop_times -> INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 355

    (108) funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .

    SAY             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MY              reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    OUR             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LIST            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ID              reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IF              reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LOOP            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FOR             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    INTEGER         reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    WHILE           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BREAK           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    EXIT            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LAST            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEXT            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REDO            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    RETURN          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STATE           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LET             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    MULTI           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ONLY            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    IMPORT          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEED            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    USE             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    PUSH            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    SPLICE          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NOT             reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    NEGAC           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    LPAREN          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FLOAT           reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    STRING          reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    $end            reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 108 (funcao_com_params -> FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE .)


state 356

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE . lista_declaracoes FECHA_CHAVE
    (2) lista_declaracoes -> . lista_declaracoes declaracoes
    (3) lista_declaracoes -> . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracao_escalar_MY          shift and go to state 13
    exp_2                          shift and go to state 35
    atribuicao                     shift and go to state 24
    lista_declaracoes              shift and go to state 358
    declaracoes                    shift and go to state 3
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 357

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 359
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    inteiro                        shift and go to state 66
    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_MY          shift and go to state 13
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    atribuicao                     shift and go to state 24
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    exp_2                          shift and go to state 35
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 358

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes . FECHA_CHAVE
    (2) lista_declaracoes -> lista_declaracoes . declaracoes
    (124) declaracoes -> . declaracoes_para_funcoes
    (125) declaracoes -> . declaracao_de_funcao
    (126) declaracoes_para_funcoes -> . declaracao_de_atribuicao
    (127) declaracoes_para_funcoes -> . say
    (128) declaracoes_para_funcoes -> . declaracao_de_chamada_funcao
    (129) declaracoes_para_funcoes -> . declaracao_de_condicional
    (130) declaracoes_para_funcoes -> . declaracao_loop
    (131) declaracoes_para_funcoes -> . declaracao_de_expressao
    (132) declaracoes_para_funcoes -> . declaracao_bloco
    (133) declaracoes_para_funcoes -> . declaracao_escalar_MY
    (134) declaracoes_para_funcoes -> . declaracao_escalar_OUR
    (135) declaracoes_para_funcoes -> . declaracao_lista
    (136) declaracoes_para_funcoes -> . declaracao_lista_MY
    (137) declaracoes_para_funcoes -> . declaracao_lista_OUR
    (138) declaracoes_para_funcoes -> . declaracao_de_controle_de_fluxo
    (139) declaracoes_para_funcoes -> . declaracao_de_controle_de_escopo
    (140) declaracoes_para_funcoes -> . declaracao_de_controle_de_modularizacao
    (141) declaracoes_para_funcoes -> . declaracao_de_controle_de_lista
    (143) declaracao_de_funcao -> . funcao_com_params
    (144) declaracao_de_funcao -> . funcao_sem_params
    (142) declaracao_de_atribuicao -> . atribuicao PONTO_VIRGULA
    (105) say -> . SAY say_func PONTO_VIRGULA
    (145) declaracao_de_chamada_funcao -> . chamada_funcao PONTO_VIRGULA
    (146) declaracao_de_chamada_funcao -> . chamada_funcao_sem_parametro PONTO_VIRGULA
    (147) declaracao_de_condicional -> . condicional
    (148) declaracao_loop -> . loop
    (149) declaracao_loop -> . loop_for
    (150) declaracao_loop -> . loop_for_com_lista
    (151) declaracao_loop -> . loop_times
    (152) declaracao_loop -> . loop_while
    (153) declaracao_loop -> . loop_sem_condicao
    (154) declaracao_de_expressao -> . exp_2
    (155) declaracao_bloco -> . bloco
    (91) declaracao_escalar_MY -> . MY tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (92) declaracao_escalar_OUR -> . OUR tipo_opicional ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (93) declaracao_lista -> . LIST IGUAL lista_valores PONTO_VIRGULA
    (94) declaracao_lista_MY -> . MY LIST IGUAL lista_valores PONTO_VIRGULA
    (95) declaracao_lista_OUR -> . OUR LIST IGUAL lista_valores PONTO_VIRGULA
    (156) declaracao_de_controle_de_fluxo -> . declaracao_break
    (157) declaracao_de_controle_de_fluxo -> . declaracao_exit
    (158) declaracao_de_controle_de_fluxo -> . declaracao_last
    (159) declaracao_de_controle_de_fluxo -> . declaracao_next
    (160) declaracao_de_controle_de_fluxo -> . declaracao_redo
    (161) declaracao_de_controle_de_fluxo -> . declaracao_return
    (162) declaracao_de_controle_de_escopo -> . declaracao_constant
    (163) declaracao_de_controle_de_escopo -> . declaracao_state
    (164) declaracao_de_controle_de_escopo -> . declaracao_let
    (165) declaracao_de_controle_de_escopo -> . declaracao_multi
    (166) declaracao_de_controle_de_escopo -> . declaracao_only
    (167) declaracao_de_controle_de_modularizacao -> . import
    (168) declaracao_de_controle_de_modularizacao -> . need
    (169) declaracao_de_controle_de_modularizacao -> . require
    (170) declaracao_de_controle_de_modularizacao -> . use
    (171) declaracao_de_controle_de_lista -> . push
    (172) declaracao_de_controle_de_lista -> . unshift
    (173) declaracao_de_controle_de_lista -> . splice
    (108) funcao_com_params -> . FUNCTION ID LPAREN parametros RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (109) funcao_sem_params -> . FUNCTION ID LPAREN RPAREN ABRE_CHAVE lista_declaracoes_para_funcoes FECHA_CHAVE
    (112) atribuicao -> . ESCALAR IGUAL exp_2
    (113) chamada_funcao -> . ID LPAREN chamada_funcao_auxiliar RPAREN
    (114) chamada_funcao_sem_parametro -> . ID LPAREN RPAREN
    (117) condicional -> . IF exp_2 bloco
    (118) condicional -> . IF exp_2 bloco ELSE bloco
    (119) condicional -> . IF exp_2 bloco lista_elsif
    (120) condicional -> . IF exp_2 bloco lista_elsif ELSE bloco
    (103) loop -> . LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (99) loop_for -> . FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (100) loop_for_com_lista -> . FOR LIST SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (101) loop_times -> . INTEGER TIMES SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (102) loop_while -> . WHILE exp_2 ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (104) loop_sem_condicao -> . LOOP ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (6) exp_2 -> . or
    (7) exp_2 -> . xor
    (8) exp_2 -> . exp_3
    (123) bloco -> . ABRE_CHAVE lista_declaracoes FECHA_CHAVE
    (174) declaracao_break -> . BREAK PONTO_VIRGULA
    (175) declaracao_exit -> . EXIT exp_2 PONTO_VIRGULA
    (176) declaracao_last -> . LAST PONTO_VIRGULA
    (177) declaracao_next -> . NEXT PONTO_VIRGULA
    (178) declaracao_redo -> . REDO IF BOOLEAN PONTO_VIRGULA
    (179) declaracao_return -> . RETURN exp_2 PONTO_VIRGULA
    (180) declaracao_constant -> . CONSTANT ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (181) declaracao_state -> . STATE ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (182) declaracao_let -> . LET ESCALAR IGUAL exp_2 PONTO_VIRGULA
    (183) declaracao_multi -> . MULTI declaracao_de_funcao
    (184) declaracao_only -> . ONLY declaracao_de_funcao
    (185) import -> . IMPORT ID MENOR ID MAIOR PONTO_VIRGULA
    (186) need -> . NEED ID PONTO_VIRGULA
    (187) require -> . REQUIRE ID PONTO_VIRGULA
    (188) use -> . USE ID PONTO_VIRGULA
    (189) push -> . PUSH LIST COMMA lista_valores PONTO_VIRGULA
    (190) unshift -> . UNSHIFT LIST COMMA lista_valores PONTO_VIRGULA
    (191) splice -> . SPLICE LIST COMMA lista_valores PONTO_VIRGULA
    (9) or -> . exp_2 OR_S exp_3
    (10) xor -> . exp_2 XOR_S exp_3
    (11) exp_3 -> . and
    (12) exp_3 -> . exp_4
    (13) and -> . exp_3 AND_S exp_4
    (14) exp_4 -> . igual_dp
    (15) exp_4 -> . dif
    (16) exp_4 -> . maior
    (17) exp_4 -> . menor
    (18) exp_4 -> . maior_igual
    (19) exp_4 -> . menor_igual
    (20) exp_4 -> . smartmatch
    (21) exp_4 -> . exp_5
    (22) igual_dp -> . exp_4 IGUAL_DP exp_5
    (23) dif -> . exp_4 DIF exp_5
    (24) maior -> . exp_4 MAIOR exp_5
    (25) menor -> . exp_4 MENOR exp_5
    (26) maior_igual -> . exp_4 MAIOR_IGL exp_5
    (27) menor_igual -> . exp_4 LESSEQUAL exp_5
    (28) smartmatch -> . exp_4 SMARTMATCH exp_5
    (29) exp_5 -> . adicao
    (30) exp_5 -> . subtracao
    (31) exp_5 -> . conc
    (32) exp_5 -> . exp_6
    (33) adicao -> . exp_5 ADC exp_6
    (34) subtracao -> . exp_5 SUB exp_6
    (35) conc -> . exp_5 CONC exp_6
    (36) exp_6 -> . mult
    (37) exp_6 -> . divide
    (38) exp_6 -> . div
    (39) exp_6 -> . divi
    (40) exp_6 -> . mod
    (41) exp_6 -> . lcm
    (42) exp_6 -> . gcd
    (43) exp_6 -> . exp_7
    (44) mult -> . exp_6 MULT exp_7
    (45) divide -> . exp_6 DIVIDE exp_7
    (46) div -> . exp_6 DIV exp_7
    (47) divi -> . exp_6 DIVI exp_7
    (48) mod -> . exp_6 MOD exp_7
    (49) lcm -> . exp_6 LCM exp_7
    (50) gcd -> . exp_6 GCD exp_7
    (51) exp_7 -> . pow
    (52) exp_7 -> . exp_8
    (53) pow -> . exp_7 POW exp_8
    (54) exp_8 -> . not_op
    (55) exp_8 -> . not_s
    (56) exp_8 -> . exp_9
    (57) not_op -> . NOT exp_8
    (58) not_s -> . NEGAC exp_8
    (59) exp_9 -> . unario
    (60) exp_9 -> . operando
    (61) unario -> . prefixo_incremento
    (62) unario -> . posfixo_incremento
    (63) unario -> . prefixo_decremento
    (64) unario -> . posfixo_decremento
    (69) operando -> . parenteses
    (70) operando -> . completo
    (65) prefixo_incremento -> . ADC_DP escalar PONTO_VIRGULA
    (66) posfixo_incremento -> . escalar ADC_DP PONTO_VIRGULA
    (67) prefixo_decremento -> . DECREMENTO escalar PONTO_VIRGULA
    (68) posfixo_decremento -> . escalar DECREMENTO PONTO_VIRGULA
    (71) parenteses -> . LPAREN exp_2 RPAREN
    (72) completo -> . tipo
    (73) completo -> . chamada_funcao
    (74) completo -> . chamada_funcao_sem_parametro
    (75) completo -> . escalar
    (90) escalar -> . ESCALAR
    (76) tipo -> . inteiro
    (77) tipo -> . float
    (78) tipo -> . string
    (79) tipo -> . boolean
    (86) inteiro -> . INTEGER
    (87) float -> . FLOAT
    (88) string -> . STRING
    (89) boolean -> . BOOLEAN

    FECHA_CHAVE     shift and go to state 360
    SAY             shift and go to state 25
    MY              shift and go to state 37
    OUR             shift and go to state 39
    LIST            shift and go to state 40
    FUNCTION        shift and go to state 59
    ESCALAR         shift and go to state 38
    ID              shift and go to state 60
    IF              shift and go to state 63
    LOOP            shift and go to state 64
    FOR             shift and go to state 65
    INTEGER         shift and go to state 67
    WHILE           shift and go to state 68
    ABRE_CHAVE      shift and go to state 62
    BREAK           shift and go to state 72
    EXIT            shift and go to state 73
    LAST            shift and go to state 74
    NEXT            shift and go to state 75
    REDO            shift and go to state 76
    RETURN          shift and go to state 78
    CONSTANT        shift and go to state 79
    STATE           shift and go to state 80
    LET             shift and go to state 81
    MULTI           shift and go to state 82
    ONLY            shift and go to state 83
    IMPORT          shift and go to state 84
    NEED            shift and go to state 85
    REQUIRE         shift and go to state 86
    USE             shift and go to state 87
    PUSH            shift and go to state 88
    UNSHIFT         shift and go to state 89
    SPLICE          shift and go to state 90
    NOT             shift and go to state 118
    NEGAC           shift and go to state 119
    ADC_DP          shift and go to state 128
    DECREMENTO      shift and go to state 130
    LPAREN          shift and go to state 61
    FLOAT           shift and go to state 135
    STRING          shift and go to state 136
    BOOLEAN         shift and go to state 77

    declaracao_escalar_MY          shift and go to state 13
    exp_2                          shift and go to state 35
    atribuicao                     shift and go to state 24
    declaracoes                    shift and go to state 137
    declaracoes_para_funcoes       shift and go to state 4
    declaracao_de_funcao           shift and go to state 5
    declaracao_de_atribuicao       shift and go to state 6
    say                            shift and go to state 7
    declaracao_de_chamada_funcao   shift and go to state 8
    declaracao_de_condicional      shift and go to state 9
    declaracao_loop                shift and go to state 10
    declaracao_de_expressao        shift and go to state 11
    declaracao_bloco               shift and go to state 12
    declaracao_escalar_OUR         shift and go to state 14
    declaracao_lista               shift and go to state 15
    declaracao_lista_MY            shift and go to state 16
    declaracao_lista_OUR           shift and go to state 17
    declaracao_de_controle_de_fluxo shift and go to state 18
    declaracao_de_controle_de_escopo shift and go to state 19
    declaracao_de_controle_de_modularizacao shift and go to state 20
    declaracao_de_controle_de_lista shift and go to state 21
    funcao_com_params              shift and go to state 22
    funcao_sem_params              shift and go to state 23
    chamada_funcao                 shift and go to state 26
    chamada_funcao_sem_parametro   shift and go to state 27
    condicional                    shift and go to state 28
    loop                           shift and go to state 29
    loop_for                       shift and go to state 30
    loop_for_com_lista             shift and go to state 31
    loop_times                     shift and go to state 32
    loop_while                     shift and go to state 33
    loop_sem_condicao              shift and go to state 34
    bloco                          shift and go to state 36
    declaracao_break               shift and go to state 41
    declaracao_exit                shift and go to state 42
    declaracao_last                shift and go to state 43
    declaracao_next                shift and go to state 44
    declaracao_redo                shift and go to state 45
    declaracao_return              shift and go to state 46
    declaracao_constant            shift and go to state 47
    declaracao_state               shift and go to state 48
    declaracao_let                 shift and go to state 49
    declaracao_multi               shift and go to state 50
    declaracao_only                shift and go to state 51
    import                         shift and go to state 52
    need                           shift and go to state 53
    require                        shift and go to state 54
    use                            shift and go to state 55
    push                           shift and go to state 56
    unshift                        shift and go to state 57
    splice                         shift and go to state 58
    inteiro                        shift and go to state 66
    or                             shift and go to state 69
    xor                            shift and go to state 70
    exp_3                          shift and go to state 71
    and                            shift and go to state 91
    exp_4                          shift and go to state 92
    igual_dp                       shift and go to state 93
    dif                            shift and go to state 94
    maior                          shift and go to state 95
    menor                          shift and go to state 96
    maior_igual                    shift and go to state 97
    menor_igual                    shift and go to state 98
    smartmatch                     shift and go to state 99
    exp_5                          shift and go to state 100
    adicao                         shift and go to state 101
    subtracao                      shift and go to state 102
    conc                           shift and go to state 103
    exp_6                          shift and go to state 104
    mult                           shift and go to state 105
    divide                         shift and go to state 106
    div                            shift and go to state 107
    divi                           shift and go to state 108
    mod                            shift and go to state 109
    lcm                            shift and go to state 110
    gcd                            shift and go to state 111
    exp_7                          shift and go to state 112
    pow                            shift and go to state 113
    exp_8                          shift and go to state 114
    not_op                         shift and go to state 115
    not_s                          shift and go to state 116
    exp_9                          shift and go to state 117
    unario                         shift and go to state 120
    operando                       shift and go to state 121
    prefixo_incremento             shift and go to state 122
    posfixo_incremento             shift and go to state 123
    prefixo_decremento             shift and go to state 124
    posfixo_decremento             shift and go to state 125
    parenteses                     shift and go to state 126
    completo                       shift and go to state 127
    escalar                        shift and go to state 129
    tipo                           shift and go to state 131
    float                          shift and go to state 132
    string                         shift and go to state 133
    boolean                        shift and go to state 134

state 359

    (99) loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 99 (loop_for -> FOR inteiro INTERPOLACAO inteiro SETA ESCALAR ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)


state 360

    (103) loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .

    SAY             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MY              reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    OUR             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LIST            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FUNCTION        reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ESCALAR         reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ID              reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IF              reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LOOP            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FOR             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    INTEGER         reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    WHILE           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ABRE_CHAVE      reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BREAK           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    EXIT            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LAST            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEXT            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REDO            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    RETURN          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    CONSTANT        reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STATE           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LET             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    MULTI           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ONLY            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    IMPORT          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEED            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    REQUIRE         reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    USE             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    PUSH            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    UNSHIFT         reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    SPLICE          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NOT             reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    NEGAC           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    ADC_DP          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    DECREMENTO      reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    LPAREN          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FLOAT           reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    STRING          reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    BOOLEAN         reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    $end            reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)
    FECHA_CHAVE     reduce using rule 103 (loop -> LOOP LPAREN declaracao_escalar_MY exp_2 PONTO_VIRGULA atribuicao RPAREN ABRE_CHAVE lista_declaracoes FECHA_CHAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADC_DP in state 129 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 129 resolved as shift
