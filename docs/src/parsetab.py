
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRE_CHAVE ADC ADC_DP AND AND_S ANY BAG BOOLEAN BREAK COMMA COMMENT CONC CONSTANT DECREMENTO DIF DIV DIVI DIVIDE ELSE ELSIF ESCALAR EXIT EXPORT FALSE FECHA_CHAVE FLOAT FUNCTION GCD HAS ID IF IGUAL IGUAL_DP IMPORT INT INTEGER KMARK LAST LCM LESSEQUAL LET LIST LOOP LPAREN MAIOR MAIOR_IGL MAP MENOR MOD MU MULT MULTI MY NEED NEGAC NEXT NIL NOT ONLY OR OR_S OUR PAIR PONTO PONTO_VIRGULA POW PUSH REDO REPLICARSTRING REQUIRE RETURN RPAREN SET SETA SMARTMATCH SPLICE STATE STR STRING SUB TIMES TRUE UNARYMINUS UNIT UNSHIFT USE WHILE XOR XOR_Sexp : PONTO_VIRGULA\n           | exp_2 exp_2 : or\n            | xor\n            | exp_3 or : exp_2 OR_S exp_3xor : exp_2 XOR_S exp_3exp_3 : and\n            | exp_4 and : exp_3 AND_S exp_4exp_4 : igual_dp\n            | dif\n            | maior\n            | menor\n            | maior_igual\n            | menor_igual\n            | smartmatch\n            | exp_5 igual_dp : exp_4 IGUAL_DP exp_5dif : exp_4 DIF exp_5maior : exp_4 MAIOR exp_5menor : exp_4 MENOR exp_5maior_igual : exp_4 MAIOR_IGL exp_5menor_igual : exp_4 LESSEQUAL exp_5smartmatch : exp_4 SMARTMATCH exp_5exp_5 : adicao\n             | subtracao\n             | conc\n             | exp_6 adicao : exp_5 ADC exp_6subtracao : exp_5 SUB exp_6conc : exp_5 CONC exp_6exp_6 : mult\n             | divide\n             | div\n             | divi\n             | mod\n             | lcm\n             | gcd\n             | exp_7mult : exp_6 MULT exp_7divide : exp_6 DIVIDE exp_7div : exp_6 DIV exp_7divi : exp_6 DIVI exp_7mod : exp_6 MOD exp_7lcm : exp_6 LCM exp_7gcd : exp_6 GCD exp_7exp_7 : pow\n             | exp_8pow : exp_7 POW exp_8exp_8 : not_op\n             | not_s\n             | exp_9 not_op : NOT exp_8 not_s : NEGAC exp_8exp_9 : unario\n             | operandounario : prefixo_incremento \n           | posfixo_incremento\n           | prefixo_decremento\n           | posfixo_decremento prefixo_incremento : ADC_DP IDposfixo_incremento : ID ADC_DPprefixo_decremento : DECREMENTO IDposfixo_decremento : ID DECREMENTOoperando : parenteses\n                | chaves\n                | tipo parenteses : LPAREN exp RPARENchaves : ABRE_CHAVE exp FECHA_CHAVEtipo : inteiro\n           | float\n           | string\n           | boolean\n           | idinteiro : INT float : FLOATstring : STRING\n              | STRboolean : BOOLEANid : ID'
    
_lr_action_items = {'PONTO_VIRGULA':([0,48,49,],[2,2,2,]),'NOT':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NEGAC':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ADC_DP':([0,34,35,46,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[45,45,45,84,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ID':([0,34,35,45,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[46,46,46,83,86,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'DECREMENTO':([0,34,35,46,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[47,47,47,85,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'LPAREN':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'ABRE_CHAVE':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'INT':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FLOAT':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'STRING':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'STR':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'BOOLEAN':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[0,-1,-2,-3,-4,-5,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,-6,-7,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[-1,-2,-3,-4,-5,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,110,-6,-7,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'FECHA_CHAVE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[-1,-2,-3,-4,-5,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,111,-6,-7,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'OR_S':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[60,-3,-4,-5,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,-6,-7,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'XOR_S':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[61,-3,-4,-5,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,-6,-7,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'AND_S':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[62,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,62,62,-10,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'IGUAL_DP':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[63,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,63,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'DIF':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[64,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,64,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'MAIOR':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[65,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,65,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'MENOR':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[66,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,66,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'MAIOR_IGL':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[67,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,67,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'LESSEQUAL':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[68,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,68,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'SMARTMATCH':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[69,-11,-12,-13,-14,-15,-16,-17,-18,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,69,-19,-20,-21,-22,-23,-24,-25,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'ADC':([16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[70,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,70,70,70,70,70,70,70,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'SUB':([16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[71,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,71,71,71,71,71,71,71,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'CONC':([16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,],[72,-26,-27,-28,-29,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,72,72,72,72,72,72,72,-30,-31,-32,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'MULT':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[73,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,73,73,73,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'DIVIDE':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[74,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,74,74,74,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'DIV':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[75,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,75,75,75,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'DIVI':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[76,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,76,76,76,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'MOD':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[77,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,77,77,77,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'LCM':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[78,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,78,78,78,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'GCD':([20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,99,100,101,102,103,104,105,106,107,108,109,110,111,],[79,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,79,79,79,-41,-42,-43,-44,-45,-46,-47,-50,-69,-70,]),'POW':([28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,46,50,51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,102,103,104,105,106,107,108,109,110,111,],[80,-48,-49,-51,-52,-53,-56,-57,-58,-59,-60,-61,-66,-67,-68,-81,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-54,-55,-62,-63,-65,-64,80,80,80,80,80,80,80,-50,-69,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,48,49,],[1,87,88,]),'exp_2':([0,48,49,],[3,3,3,]),'or':([0,48,49,],[4,4,4,]),'xor':([0,48,49,],[5,5,5,]),'exp_3':([0,48,49,60,61,],[6,6,6,89,90,]),'and':([0,48,49,60,61,],[7,7,7,7,7,]),'exp_4':([0,48,49,60,61,62,],[8,8,8,8,8,91,]),'igual_dp':([0,48,49,60,61,62,],[9,9,9,9,9,9,]),'dif':([0,48,49,60,61,62,],[10,10,10,10,10,10,]),'maior':([0,48,49,60,61,62,],[11,11,11,11,11,11,]),'menor':([0,48,49,60,61,62,],[12,12,12,12,12,12,]),'maior_igual':([0,48,49,60,61,62,],[13,13,13,13,13,13,]),'menor_igual':([0,48,49,60,61,62,],[14,14,14,14,14,14,]),'smartmatch':([0,48,49,60,61,62,],[15,15,15,15,15,15,]),'exp_5':([0,48,49,60,61,62,63,64,65,66,67,68,69,],[16,16,16,16,16,16,92,93,94,95,96,97,98,]),'adicao':([0,48,49,60,61,62,63,64,65,66,67,68,69,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'subtracao':([0,48,49,60,61,62,63,64,65,66,67,68,69,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'conc':([0,48,49,60,61,62,63,64,65,66,67,68,69,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'exp_6':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[20,20,20,20,20,20,20,20,20,20,20,20,20,99,100,101,]),'mult':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'divide':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'div':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'divi':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'mod':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'lcm':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'gcd':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'exp_7':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,102,103,104,105,106,107,108,]),'pow':([0,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'exp_8':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[30,81,82,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,109,]),'not_op':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'not_s':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'exp_9':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'unario':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operando':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'prefixo_incremento':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'posfixo_incremento':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'prefixo_decremento':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'posfixo_decremento':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'parenteses':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'chaves':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'tipo':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'inteiro':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'float':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'string':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'boolean':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'id':([0,34,35,48,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> PONTO_VIRGULA','exp',1,'p_exp','sintatico.py',7),
  ('exp -> exp_2','exp',1,'p_exp','sintatico.py',8),
  ('exp_2 -> or','exp_2',1,'p_exp_2','sintatico.py',12),
  ('exp_2 -> xor','exp_2',1,'p_exp_2','sintatico.py',13),
  ('exp_2 -> exp_3','exp_2',1,'p_exp_2','sintatico.py',14),
  ('or -> exp_2 OR_S exp_3','or',3,'p_or','sintatico.py',18),
  ('xor -> exp_2 XOR_S exp_3','xor',3,'p_xor','sintatico.py',22),
  ('exp_3 -> and','exp_3',1,'p_exp_3','sintatico.py',26),
  ('exp_3 -> exp_4','exp_3',1,'p_exp_3','sintatico.py',27),
  ('and -> exp_3 AND_S exp_4','and',3,'p_and','sintatico.py',31),
  ('exp_4 -> igual_dp','exp_4',1,'p_exp_4','sintatico.py',35),
  ('exp_4 -> dif','exp_4',1,'p_exp_4','sintatico.py',36),
  ('exp_4 -> maior','exp_4',1,'p_exp_4','sintatico.py',37),
  ('exp_4 -> menor','exp_4',1,'p_exp_4','sintatico.py',38),
  ('exp_4 -> maior_igual','exp_4',1,'p_exp_4','sintatico.py',39),
  ('exp_4 -> menor_igual','exp_4',1,'p_exp_4','sintatico.py',40),
  ('exp_4 -> smartmatch','exp_4',1,'p_exp_4','sintatico.py',41),
  ('exp_4 -> exp_5','exp_4',1,'p_exp_4','sintatico.py',42),
  ('igual_dp -> exp_4 IGUAL_DP exp_5','igual_dp',3,'p_igual_dp','sintatico.py',46),
  ('dif -> exp_4 DIF exp_5','dif',3,'p_dif','sintatico.py',50),
  ('maior -> exp_4 MAIOR exp_5','maior',3,'p_maior','sintatico.py',54),
  ('menor -> exp_4 MENOR exp_5','menor',3,'p_menor','sintatico.py',58),
  ('maior_igual -> exp_4 MAIOR_IGL exp_5','maior_igual',3,'p_maior_igual','sintatico.py',62),
  ('menor_igual -> exp_4 LESSEQUAL exp_5','menor_igual',3,'p_menor_igual','sintatico.py',66),
  ('smartmatch -> exp_4 SMARTMATCH exp_5','smartmatch',3,'p_smartmatch','sintatico.py',70),
  ('exp_5 -> adicao','exp_5',1,'p_exp_5','sintatico.py',74),
  ('exp_5 -> subtracao','exp_5',1,'p_exp_5','sintatico.py',75),
  ('exp_5 -> conc','exp_5',1,'p_exp_5','sintatico.py',76),
  ('exp_5 -> exp_6','exp_5',1,'p_exp_5','sintatico.py',77),
  ('adicao -> exp_5 ADC exp_6','adicao',3,'p_adicao','sintatico.py',81),
  ('subtracao -> exp_5 SUB exp_6','subtracao',3,'p_subtracao','sintatico.py',85),
  ('conc -> exp_5 CONC exp_6','conc',3,'p_conc','sintatico.py',89),
  ('exp_6 -> mult','exp_6',1,'p_exp_6','sintatico.py',93),
  ('exp_6 -> divide','exp_6',1,'p_exp_6','sintatico.py',94),
  ('exp_6 -> div','exp_6',1,'p_exp_6','sintatico.py',95),
  ('exp_6 -> divi','exp_6',1,'p_exp_6','sintatico.py',96),
  ('exp_6 -> mod','exp_6',1,'p_exp_6','sintatico.py',97),
  ('exp_6 -> lcm','exp_6',1,'p_exp_6','sintatico.py',98),
  ('exp_6 -> gcd','exp_6',1,'p_exp_6','sintatico.py',99),
  ('exp_6 -> exp_7','exp_6',1,'p_exp_6','sintatico.py',100),
  ('mult -> exp_6 MULT exp_7','mult',3,'p_mult','sintatico.py',104),
  ('divide -> exp_6 DIVIDE exp_7','divide',3,'p_divide','sintatico.py',108),
  ('div -> exp_6 DIV exp_7','div',3,'p_div','sintatico.py',112),
  ('divi -> exp_6 DIVI exp_7','divi',3,'p_divi','sintatico.py',116),
  ('mod -> exp_6 MOD exp_7','mod',3,'p_mod','sintatico.py',120),
  ('lcm -> exp_6 LCM exp_7','lcm',3,'p_lcm','sintatico.py',124),
  ('gcd -> exp_6 GCD exp_7','gcd',3,'p_gcd','sintatico.py',128),
  ('exp_7 -> pow','exp_7',1,'p_exp_7','sintatico.py',132),
  ('exp_7 -> exp_8','exp_7',1,'p_exp_7','sintatico.py',133),
  ('pow -> exp_7 POW exp_8','pow',3,'p_pow','sintatico.py',137),
  ('exp_8 -> not_op','exp_8',1,'p_exp_8','sintatico.py',141),
  ('exp_8 -> not_s','exp_8',1,'p_exp_8','sintatico.py',142),
  ('exp_8 -> exp_9','exp_8',1,'p_exp_8','sintatico.py',143),
  ('not_op -> NOT exp_8','not_op',2,'p_not_op','sintatico.py',147),
  ('not_s -> NEGAC exp_8','not_s',2,'p_not_s','sintatico.py',151),
  ('exp_9 -> unario','exp_9',1,'p_exp_9','sintatico.py',155),
  ('exp_9 -> operando','exp_9',1,'p_exp_9','sintatico.py',156),
  ('unario -> prefixo_incremento','unario',1,'p_unario','sintatico.py',160),
  ('unario -> posfixo_incremento','unario',1,'p_unario','sintatico.py',161),
  ('unario -> prefixo_decremento','unario',1,'p_unario','sintatico.py',162),
  ('unario -> posfixo_decremento','unario',1,'p_unario','sintatico.py',163),
  ('prefixo_incremento -> ADC_DP ID','prefixo_incremento',2,'p_prefixo_incremento','sintatico.py',167),
  ('posfixo_incremento -> ID ADC_DP','posfixo_incremento',2,'p_posfixo_incremento','sintatico.py',171),
  ('prefixo_decremento -> DECREMENTO ID','prefixo_decremento',2,'p_prefixo_decremento','sintatico.py',175),
  ('posfixo_decremento -> ID DECREMENTO','posfixo_decremento',2,'p_posfixo_decremento','sintatico.py',179),
  ('operando -> parenteses','operando',1,'p_operando','sintatico.py',183),
  ('operando -> chaves','operando',1,'p_operando','sintatico.py',184),
  ('operando -> tipo','operando',1,'p_operando','sintatico.py',185),
  ('parenteses -> LPAREN exp RPAREN','parenteses',3,'p_parentese','sintatico.py',189),
  ('chaves -> ABRE_CHAVE exp FECHA_CHAVE','chaves',3,'p_chaves','sintatico.py',193),
  ('tipo -> inteiro','tipo',1,'p_tipo','sintatico.py',199),
  ('tipo -> float','tipo',1,'p_tipo','sintatico.py',200),
  ('tipo -> string','tipo',1,'p_tipo','sintatico.py',201),
  ('tipo -> boolean','tipo',1,'p_tipo','sintatico.py',202),
  ('tipo -> id','tipo',1,'p_tipo','sintatico.py',203),
  ('inteiro -> INT','inteiro',1,'p_inteiro','sintatico.py',207),
  ('float -> FLOAT','float',1,'p_float','sintatico.py',211),
  ('string -> STRING','string',1,'p_string','sintatico.py',215),
  ('string -> STR','string',1,'p_string','sintatico.py',216),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','sintatico.py',220),
  ('id -> ID','id',1,'p_id','sintatico.py',224),
]
